{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///../@here/harp-datasource-protocol/lib/Expr.ts","webpack:///../@here/harp-utils/index.ts","webpack:///../@here/harp-datasource-protocol/index.ts","webpack:///../@here/harp-geoutils/index.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinates.ts","webpack:///../@here/harp-geoutils/lib/math/MathUtils.ts","webpack:///../node_modules/protobufjs/src/util/minimal.js","webpack:///../@here/harp-geoutils/lib/math/Box3Like.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3Like.ts","webpack:///../@here/harp-geoutils/lib/projection/Projection.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedProperty.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoBox.ts","webpack:///../@here/harp-geoutils/lib/projection/EarthConstants.ts","webpack:///../@here/harp-geoutils/lib/tiling/TilingScheme.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoderDefs.ts","webpack:///../@here/harp-datasource-protocol/lib/ColorUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedPropertyDefs.ts","webpack:///../@here/harp-geoutils/lib/projection/MercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKey.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerService.ts","webpack:///../@here/harp-omv-datasource/lib/OmvUtils.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoder.ts","webpack:///../@here/harp-utils/lib/Logger/ILogger.ts","webpack:///../@here/harp-utils/lib/UrlUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/Theme.ts","webpack:///../@here/harp-datasource-protocol/lib/Techniques.ts","webpack:///../@here/harp-datasource-protocol/index-decoder.ts","webpack:///../@here/harp-utils/lib/Logger/ConsoleChannel.ts","webpack:///../@here/harp-utils/lib/Logger/Logger.ts","webpack:///../@here/harp-utils/lib/Logger/WorkerChannel.ts","webpack:///../@here/harp-datasource-protocol/lib/Env.ts","webpack:///../@here/harp-datasource-protocol/lib/StringEncodedNumeral.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueParams.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueDescriptor.ts","webpack:///../@here/harp-datasource-protocol/lib/DecodedTile.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinatesLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoPointLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/LatLngLike.ts","webpack:///../@here/harp-geoutils/lib/projection/EquirectangularProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/TransverseMercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.ts","webpack:///../@here/harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/SubTiles.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKeyUtils.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileTreeTraverse.ts","webpack:///../@here/harp-datasource-protocol/lib/StyleSetEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueAttr.ts","webpack:///../@here/harp-mapview-decoder/index-worker.ts","webpack:///../@here/harp-mapview-decoder/lib/GeoJsonTiler.ts","webpack:///../@here/harp-omv-datasource/lib/VTJsonDataAdapter.ts","webpack:///../node_modules/protobufjs/src/writer.js","webpack:///../node_modules/protobufjs/src/reader.js","webpack:///../@here/harp-omv-datasource/lib/OmvDataFilter.ts","webpack:///./decoder.ts","webpack:///../@here/harp-omv-datasource/index-worker.ts","webpack:///../@here/harp-utils/lib/GroupedPriorityList.ts","webpack:///../@here/harp-utils/lib/Logger/index.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManager.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManagerImpl.ts","webpack:///../@here/harp-utils/lib/Logger/MultiChannel.ts","webpack:///../@here/harp-utils/lib/Math2D.ts","webpack:///../@here/harp-utils/lib/MathUtils.ts","webpack:///../@here/harp-utils/lib/Mixins.ts","webpack:///../@here/harp-utils/lib/assert.ts","webpack:///../@here/harp-utils/lib/ContextLogger.ts","webpack:///../@here/harp-utils/lib/PerformanceTimer.ts","webpack:///../@here/harp-utils/lib/ObjectUtils.ts","webpack:///../@here/harp-utils/lib/OptionsUtils.ts","webpack:///../@here/harp-utils/lib/UriResolver.ts","webpack:///../@here/harp-utils/lib/UrlPlatformUtils.web.ts","webpack:///../@here/harp-utils/lib/Functions.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ArrayOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/CastOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ColorOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ComparisonOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FeatureOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FlowOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/InterpolationOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExponentialInterpolant.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MapOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MathOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MiscOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ObjectOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/StringOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/TypeOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprInstantiator.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprParser.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerServiceProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerTilerProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerDecoderProtocol.ts","webpack:///../@here/harp-geoutils/lib/projection/IdentityProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/SphereProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTree.ts","webpack:///../@here/harp-geoutils/lib/tiling/HereTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/WebMercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/MercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/PolarTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/math/Vector3Like.ts","webpack:///../@here/harp-geoutils/lib/math/TransformLike.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3.ts","webpack:///../@here/harp-datasource-protocol/lib/TileInfo.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprPool.ts","webpack:///../@here/harp-datasource-protocol/lib/ThemeVisitor.ts","webpack:///../@here/harp-mapview-decoder/lib/ThemedTileDecoder.ts","webpack:///../@here/harp-datasource-protocol/lib/Extruder.ts","webpack:///../@here/harp-datasource-protocol/lib/Outliner.ts","webpack:///../@here/harp-datasource-protocol/lib/ThreeBufferUtils.ts","webpack:///../@here/harp-mapview-decoder/lib/TileDecoderService.ts","webpack:///../@here/harp-mapview-decoder/lib/TilerService.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerServiceManager.ts","webpack:///../@here/harp-omv-datasource/lib/OmvData.ts","webpack:///../node_modules/long/src/long.js","webpack:///../@here/harp-omv-datasource/lib/proto/vector_tile.js","webpack:///../node_modules/protobufjs/minimal.js","webpack:///../node_modules/protobufjs/src/index-minimal.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/@protobufjs/aspromise/index.js","webpack:///../node_modules/@protobufjs/base64/index.js","webpack:///../node_modules/@protobufjs/eventemitter/index.js","webpack:///../node_modules/@protobufjs/float/index.js","webpack:///../node_modules/@protobufjs/inquire/index.js","webpack:///../node_modules/@protobufjs/utf8/index.js","webpack:///../node_modules/@protobufjs/pool/index.js","webpack:///../node_modules/protobufjs/src/util/longbits.js","webpack:///../node_modules/protobufjs/src/writer_buffer.js","webpack:///../node_modules/protobufjs/src/reader_buffer.js","webpack:///../node_modules/protobufjs/src/rpc.js","webpack:///../node_modules/protobufjs/src/rpc/service.js","webpack:///../node_modules/protobufjs/src/roots.js","webpack:///../@here/harp-omv-datasource/lib/OmvDecodedTileEmitter.ts","webpack:///../@here/harp-lines/lib/Lines.ts","webpack:///../@here/harp-lines/lib/TriangulateLines.ts","webpack:///../node_modules/earcut/src/earcut.js","webpack:///../@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier.ts","webpack:///../@here/harp-geometry/lib/SubdivisionModifier.ts","webpack:///../@here/harp-materials/lib/MapMeshMaterialsDefs.ts","webpack:///../@here/harp-omv-datasource/lib/clipPolygon.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTileInfoEmitter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTomTomFeatureModifier.ts","webpack:///../@here/harp-omv-datasource/lib/StyleSetDataFilter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTiler.ts","webpack:///../node_modules/geojson-vt/src/simplify.js","webpack:///../node_modules/geojson-vt/src/feature.js","webpack:///../node_modules/geojson-vt/src/convert.js","webpack:///../node_modules/geojson-vt/src/clip.js","webpack:///../node_modules/geojson-vt/src/wrap.js","webpack:///../node_modules/geojson-vt/src/transform.js","webpack:///../node_modules/geojson-vt/src/tile.js","webpack:///../node_modules/geojson-vt/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","THREE","exprEvaluator","ExprEvaluator","exprInstantiator","ExprInstantiator","ExprDependencies","properties","Set","ComputeExprDependencies","expr","dependencies","accept","this","instance","context","add","op","args","length","zoom","forEach","childExpr","branches","_","branch","fallback","condition","isJsonExpr","v","Array","isArray","ExprScope","Expr","code","ExprParser","parse","node","definitions","definitionExprCache","parseNode","undefined","lockedNames","cache","Map","env","scope","Value","ExprEvaluatorContext","of","pool","ExprSerializer","serialize","m_isDynamic","exprIsDynamic","VarExpr","super","visitor","visitVarExpr","LiteralExpr","BooleanLiteralExpr","NumberLiteralExpr","StringLiteralExpr","NullLiteralExpr","ObjectLiteralExpr","Error","visitNullLiteralExpr","visitBooleanLiteralExpr","visitNumberLiteralExpr","visitStringLiteralExpr","visitObjectLiteralExpr","HasAttributeExpr","visitHasAttributeExpr","ContainsExpr","elements","elementTy","every","element","visitContainsExpr","isDynamic","CallExpr","visitCallExpr","descriptor","getOperator","isDynamicOperator","some","e","MatchExpr","visitMatchExpr","CaseExpr","visitCaseExpr","cond","map","label","body","push","referenceResolverState","parseCall","slice","has","cachedEntry","result","definitionEntry","isSelectorDefinition","isValueDefinition","isInterpolatedPropertyDefinition","fromJSON","interpolatedPropertyDefinitionToJsonExpr","delete","set","resolveReference","makeCallExpr","parseGetExpr","parseHasExpr","isValidElementsArray","parseInExpr","obj","parseLiteralExpr","conditions","isValidMatchLabel","JSON","stringify","parseMatchExpr","caseFallback","parseCaseExpr","GeoCoordinates","latitude","longitude","altitude","Math","radToDeg","latLng","lat","lng","geoPoint","isGeoPointLike","fromGeoPoint","isGeoCoordinatesLike","fromDegrees","isLatLngLike","degToRad","isNaN","wrapped","sign","other","MathUtils","normalizeAngleDeg","a","angleDistanceDeg","b","newEmptyBox3","min","x","Infinity","y","z","max","newVector3","clamp","interpolateAnglesDeg","p0","p1","util","merge","dst","src","ifNotSet","keys","newError","CustomError","message","captureStackTrace","stack","constructor","toString","asPromise","base64","EventEmitter","float","inquire","utf8","LongBits","global","window","self","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","isInteger","Number","isFinite","floor","isString","String","isObject","isset","isSet","prop","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","str","charAt","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","box3","obb","position","xAxis","yAxis","zAxis","extents","ProjectionType","unitScale","projectPoint","sourceProjection","worldPos","unprojectPoint","logger","LoggerManager","interpolants","DiscreteInterpolant","LinearInterpolant","CubicInterpolant","ExponentialInterpolant","tmpBuffer","StringEncodedNumeralFormatMaxSize","isInterpolatedProperty","interpolationMode","zoomLevels","Float32Array","values","dynamicPropertiesTempEnv","MapEnv","$zoom","$pixelToMeters","getInterpolatedMetric","level","pixelToMeters","nChannels","interpolant","InterpolationMode","Exponential","exponent","evaluate","_stringEncodedNumeralDynamicMask","resultBuffer","maskInterpolant","envOrLevel","isExpr","entries","Dynamic","lookup","parseStringEncodedNumeral","_stringEncodedNumeralType","StringEncodedNumeralType","Meters","Pixels","Hex","RGB","RGBA","HSL","assert","ColorUtils","getHexFromRgba","getHexFromRgb","getInterpolatedColor","isCubic","interpolation","findIndex","abs","splice","removeDuplicatePropertyValues","Discrete","firstValue","matchedFormat","StringEncodedNumeralFormats","find","format","regExp","test","error","needsMask","propValues","maskValues","baseFormat","allowedValueFormats","type","StringEncodedMetricFormats","StringEncodedColorFormats","valueIdx","matched","valueFormat","decoder","mask","procesStringEnocodedNumeralInterpolatedProperty","GeoBox","southWest","northEast","south","north","west","east","minAltitude","altitudeSpan","latitudeSpan","longitudeSpan","maxAltitude","width","point","containsHelper","isFlat","isSameAltitude","isWithinAltitudeRange","EarthConstants","EQUATORIAL_CIRCUMFERENCE","EQUATORIAL_RADIUS","MIN_ELEVATION","MAX_ELEVATION","MAX_BUILDING_HEIGHT","subdivisionScheme","projection","boundingBoxGenerator","FlatTileBoundingBoxGenerator","tileTreeTraverse","TileTreeTraverse","tileKey","subTiles","TileKeyUtils","geoCoordinatesToTileKey","geoBox","geoRectangleToTileKeys","getGeoBox","getWorldBox","FeatureModifierId","OmvFilterString","StringMatch","matchString","filterString","match","Any","Match","StartsWith","startsWith","EndsWith","endsWith","indexOf","OmvGeometryType","OMV_TILE_DECODER_SERVICE_TYPE","OMV_TILER_SERVICE_TYPE","SHIFT_TRANSPARENCY","SHIFT_RED","SHIFT_GREEN","SHIFT_BLUE","HEX_FULL_CHANNEL","HEX_RGB_MASK","HEX_TRGB_MASK","tmpColor","Color","g","getHexFromHsl","h","setHSL","getHex","getRgbaFromHex","hex","hasAlphaInHex","getAlphaFromHex","removeAlphaFromHex","step","MercatorProjection","Projection","Planar","val","MercatorConstants","MAXIMUM_LATITUDE","log","tan","PI","latitudeProject","latitudeClamp","atan","exp","worldPoint","cosh","geoPointLike","latitudeClampProject","latitudeInRadians","fromRadians","unprojectLatitude","worldCenter","center","worldNorth","worldSouth","worldYCenter","isBox3Like","isOrientedBox3Like","EPSILON","worldBox","minGeo","maxGeo","fromCoordinates","_worldPoint","normal","webMercatorProjection","mercatorProjection","reprojectPoint","sy","sin","projectBox","maxY","quadTreeSubdivisionScheme","powerOfTwo","TileKey","row","column","quadkey","parseInt","fromRowColumnLevel","quadKey64","quadKey","m_mortonCode","quadkey64","fromMortonCode","m_hereTile","pow","coordX","coordY","totalWidth","totalHeight","rowsAtLevel","columnsAtLevel","mortonCode","delta","changedLevelBy","col","qnr","sub","subQuad","fromQuadKey","child","fromHereTile","msb","enabled","serviceId","m_pendingRequests","onMessage","data","service","WorkerServiceProtocol","isRequestMessage","request","requestEntry","messageId","responseSent","tryHandleRequest","then","response","doSendResponse","ServiceMessageName","Response","transferList","catch","errorMessage","errorStack","tryHandleMessage","err","addEventListener","isInitializedMessage","Initialized","postMessage","cancelAllPendingRequests","removeEventListener","handleMessage","handleRequest","Promise","reject","lat2tile","func","cos","createWorldTileTransformationCookie","decodeInfo","N","log2","scale","top","adapterId","VTJsonDataAdapterId","round","left","tile2world","flipY","target","worldTileProjectionCookie","R","SharedArrayBuffer","ArrayBuffer","tempWorldPos","Vector2","webMercatorTile2TargetWorld","targetProjection","vertexStride","contour","winding","area","points","stride","q","OmvDecoder","m_projection","m_styleSetEvaluator","m_showMissingTechniques","m_dataFilter","m_featureModifier","m_gatherFeatureAttributes","m_createTileInfo","m_gatherRoadSegments","m_skipShortLabels","m_storageLevelOffset","m_enableElevationOverlay","m_languages","m_dataAdapters","styleSetDataFilter","StyleSetDataFilter","dataPreFilter","ComposedDataFilter","OmvProtobufDataAdapter","VTJsonDataAdapter","dataAdapter","adapter","canProcess","techniques","geometries","resetTechniques","tileSizeOnScreen","estimatedTileSizeOnScreen","DecodeInfo","id","m_decodedTileEmitter","OmvDecodedTileEmitter","storeExtendedTags","m_infoTileEmitter","OmvTileInfoEmitter","decodedTile","getDecodedTile","tileInfo","getTileInfo","ExtendedTileInfo","layer","geometry","storageLevel","doProcessPointFeature","applyKindFilter","getMatchingTechniques","GeometryKind","Label","unmap","zoomLevel","getZoomLevel","cachedExprResults","expressionEvaluatorCache","featureId","processPointFeature","doProcessLineFeature","Line","processLineFeature","doProcessPolygonFeature","Area","processPolygonFeature","defaultKind","hasKindFilter","filter","technique","kind","wantsKind","projectedBoundingBox","OrientedBox3","tileBounds","Box3","tileSize","Vector3","projectedTileBounds","tilingScheme","getCenter","getSize","webMercatorTilingScheme","OmvTileDecoder","ThemedTileDecoder","resolve","styleSetEvaluator","startTime","PerformanceTimer","now","m_featureFilter","languages","decodeTime","setupTime","styleSet","options","configure","omvOptions","showMissingTechniques","filterDescription","OmvGenericFeatureFilter","createFeatureModifier","featureModifierId","gatherFeatureAttributes","createTileInfo","gatherRoadSegments","skipShortLabels","enableElevationOverlay","tomTom","OmvTomTomFeatureModifier","OmvGenericFeatureModifier","OmvTileDecoderService","WorkerServiceManager","getInstance","register","serviceType","factory","TileDecoderService","start","warn","LogLevel","parentUri","childUri","absoluteUrlWithOriginRe","getUrlOrigin","substr","baseUrl","RegExp","url","idx","lastIndexOf","parsed","getUrlHostAndProtocol","protocol","host","urlOriginRe","def","valueDef","styleDef","TEXTURE_PROPERTY_KEYS","TRANSPARENCY_PROPERTY_KEYS","techniqueDescriptors","baseTechniqueParamsDescriptor","attrTransparencyColor","attrScopes","renderOrder","AttrScope","TechniqueGeometry","renderOrderOffset","transient","fadeFar","TechniqueRendering","fadeNear","pointTechniquePropTypes","mergeTechniqueDescriptor","texture","enablePicking","color","transparent","opacity","squaresTechniquePropTypes","squares","circlesTechniquePropTypes","circles","lineMarkerTechniquePropTypes","text","FeatureGeometry","useAbbreviation","useIsoCode","priority","textMinZoomLevel","textMaxZoomLevel","iconMinZoomLevel","iconMaxZoomLevel","distanceScale","textMayOverlap","iconMayOverlap","textReserveSpace","iconReserveSpace","renderTextDuringMovements","alwaysOnTop","textIsOptional","showOnMap","stackMode","minDistance","iconIsOptional","iconFadeTime","textFadeTime","xOffset","yOffset","iconXOffset","iconYOffset","iconScale","screenHeight","screenWidth","poiTable","poiName","poiNameField","imageTexture","imageTextureField","imageTexturePrefix","imageTexturePostfix","style","fontName","fontStyle","fontVariant","rotation","tracking","leading","maxLines","lineWidth","canvasRotation","lineRotation","wrappingMode","hAlignment","vAlignment","backgroundColor","backgroundSize","backgroundOpacity","polygonalTechniqueDescriptor","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","lineColor","lineFadeFar","lineFadeNear","solidLineTechniqueDescriptor","clipping","secondaryRenderOrder","secondaryWidth","secondaryColor","dashSize","gapSize","lineTechniqueDescriptor","line","fillTechniqueDescriptor","fill","standardTechniqueDescriptor","vertexColors","wireframe","roughness","metalness","alphaTest","depthTest","emissive","emissiveIntensity","refractionRatio","mapProperties","normalMap","normalMapProperties","displacementMap","displacementMapProperties","roughnessMap","roughnessMapProperties","emissiveMap","emissiveMapProperties","bumpMap","bumpMapProperties","metalnessMap","metalnessMapProperties","alphaMap","alphaMapProperties","standard","extrudedPolygonTechniqueDescriptor","height","floorHeight","defaultColor","defaultHeight","constantHeight","boundaryWalls","footprint","maxSlope","enableDepthPrePass","animateExtrusionDuration","animateExtrusion","lineColorMix","textTechniqueDescriptor","minZoomLevel","maxZoomLevel","mayOverlap","reserveSpace","shaderTechniqueDescriptor","primitive","params","isExtrudedLineTechnique","isStandardExtrudedLineTechnique","shading","isFillTechnique","isExtrudedPolygonTechnique","isStandardTechnique","isTerrainTechnique","shader","textureCoordinateType","texturePropertyKey","textureProperty","isTextureBuffer","buffer","imageName","textureName","optionalParams","console","debug","info","trace","m_channel","Trace","update","prefix","Debug","Info","Log","Warn","WORKERCHANNEL_MSG_TYPE","workerMessage","Env","_name","parent","StringEncodedMeters","encodedValue","exec","StringEncodedPixels","StringEncodedHex","StringEncodedRGB","channels","StringEncodedRGBA","StringEncodedHSL","StringEncodedMetricFormatMaxSize","reduce","StringEncodedColorFormatMaxSize","numeral","formats","GeometryKindSet","subset","elem","hasIntersection","TextureCoordinateType","PoiStackMode","descriptors","attr","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","GeometryType","projectionName","sphereProjection","normalizedEquirectangularProjection","equirectangularProjection","attributeMap","$id","EquirectangularProjection","geoToWorldScale","worldToGeoScale","latitudeSpanInRadians","longitudeSpanInRadians","sizeX","sizeY","TransverseMercatorProjection","m_phi0","m_lambda0","lon","TransverseMercatorUtils","POLE_RADIUS","rsq","POLE_RADIUS_SQ","nearestQuarter","deltaLon","deltaLat","distanceToPoleSq","distanceToPole","sqrt","dir","offsetLon","clamped","clampGeoPoint","normalLon","offset","phi","lambda","B","atanh","atan2","outScale","tau","nx","ny","D","asin","sinh","pointsToCheck","E","POLE_EDGE_DEG","containsEastCut","containsCenterX","containsCenterY","alignLatitude","projected","vx","vy","vz","minX","minY","minZ","maxX","maxZ","lowerQ","upperQ","containsLowerQY","containsUpperQY","geoPoints","alignLongitude","latitudes","longitudes","altitudes","referencePoint","bad","good","POLE_EDGE","transverseMercatorProjection","minElevation","maxElevation","m_tilingScheme","m_worldBox","worldExtent","m_worldDimensions","levelDimensionX","getLevelDimensionX","levelDimensionY","getLevelDimensionY","originX","originY","unprojectBox","halfQuadTreeSubdivisionScheme","SubTiles","iterator","ZCurveIterator","RowColumnIterator","parentKey","worldCoordinatesToTileKey","cx","cy","worldSizeX","worldSizeY","wrap","lower","upper","minVal","maxVal","southWestLongitude","longitudeInRadians","southWestLatitude","northEastLongitude","northEastLatitude","minTileKey","maxTileKey","columnCount","minColumn","maxColumn","minRow","maxRow","m_subdivisionScheme","divX","getSubdivisionX","divY","getSubdivisionY","emptyTechniqueDescriptor","StyleConditionClassifier","_whenExpr","savedStyle","switchStyle","_style","enclosingExpr","children","matchVarStringComparison","_geometryType","right","saved","OptimizedSubSetKey","geometryType","keyUpdateNeeded","envLayer","envGeometryType","updateKey","cachedStyleSet","makeDecodedTechnique","attrName","attrValue","toJSON","m_techniques","m_exprPool","ExprPool","m_cachedResults","m_styleConditionClassifier","m_subStyleSetCache","m_definitionExprCache","m_tmpOptimizedSubSetKey","m_emptyEnv","m_definitions","resolveStyleReferences","isJsonExprReference","definitionName","isActualSelectorDefinition","resolveReferences","techniqueRenderOrder","styleSetIndex","_styleSetIndex","computeDefaultRenderOrder","compileStyleSet","clear","optimizedSubSetKey","m_layer","m_geometryType","m_zoomLevel","searchedStyleSet","getOptimizedStyleSet","currStyle","processStyle","techinque","_index","subSetKey","optimizedStyleSet","createPreFilteredStyleSet","compileStyle","when","classify","intern","_minZoomLevelExpr","_maxZoomLevelExpr","checkZoomLevel","Condition","getTechniqueForStyleMatch","final","checkStyleDynamicAttributes","_dynamicTechniques","dynamicAttributes","evaluateTechniqueProperties","getDynamicTechniqueKey","createTechnique","_staticTechnique","dynamicAttrKey","_attrName","join","_dynamicTechniqueAttributes","_dynamicFeatureAttributes","_dynamicForwardedAttributes","_staticAttributes","dynamicFeatureAttributes","dynamicTechniqueAttributes","dynamicForwardedAttributes","targetStaticAttributes","techniqueDescriptor","processAttribute","deps","attrScope","labelProperty","instantiationContext","attrExpr","instantiate","dynamicAttrs","_key","defaultValue","evaluated","getPropertyValue","geojsonvtExport","geojsonvt","default","indexes","indexId","input","updateIndex","URL","fetch","href","ok","statusText","index","maxZoom","indexMaxZoom","indexMaxPoints","tolerance","extent","lineMetrics","promoteId","generateId","geojson","tile","getTile","feature","features","originalGeometry","getOriginalGeometry","VT_JSON_EXTENTS","VTJsonGeometryType","m_processor","m_logger","dataFilter","isArrayBufferLike","source","$layer","$geometryType","convertGeometryType","$level","storageLevelOffset","tags","Point","pointGeometry","LineString","untiledPositions","coordinates","lineGeometry","positions","Polygon","polygon","rings","outline","ring","currX","currY","Unknown","Writer","BufferWriter","Op","fn","len","next","noop","State","writer","head","tail","states","writeByte","buf","pos","VarintOp","writeVarint64","writeFixed32","alloc","subarray","_push","uint32","int32","fromNumber","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","decode","string","write","fork","reset","ldelim","finish","BufferWriter_","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","create_array","readLongVarint","readFixed32_end","end","readFixed64","isBuffer","_slice","readFloatLE","readDoubleLE","read","skip","skipType","wireType","BufferReader_","zzDecode","m_processLayersDefault","m_processPointsDefault","m_processLinesDefault","m_processPolygonsDefault","m_layersToProcess","m_layersToIgnore","m_pointsToProcess","m_ignoredPoints","m_linesToProcess","m_linesToIgnore","m_polygonsToProcess","m_polygonsToIgnore","m_kindsToProcess","m_kindsToIgnore","processLayersDefault","processPointsDefault","processLinesDefault","processPolygonsDefault","minLevel","maxLevel","addItem","addItems","enabledKinds","concat","disabledKinds","layersToProcess","layersToIgnore","pointsToProcess","pointsToIgnore","linesToProcess","linesToIgnore","polygonsToProcess","polygonsToIgnore","kindsToProcess","kindsToIgnore","items","item","layerName","matchLayer","geometryTypes","geomType","classes","featureClass","matchClass","featureAttribute","geomTypes","featureClasses","description","layerItems","layerItem","wantsFeature","hasOrIntersects","itemsToProcess","itemsToIgnore","defaultResult","filters","wantsLayer","wantsPointFeature","wantsLineFeature","wantsPolygonFeature","doProcessFeature","featureClassThing","matchItems","matchAttribute","importScripts","PriorityListGroup","groups","getGroup","group","foundIndex","normalizedPriority","m_sortedGroups","otherGroup","findGroup","clone","priorityList","sort","fun","m_instance","LoggerManagerImpl","m_loggers","channel","document","ConsoleChannel","WorkerChannel","loggerName","m_levelSetForAll","Logger","found","config","Math2D","distSquared","ax","ay","bx","by","Box","w","computeSquaredLineLength","squaredLineLength","xDiff","yDiff","distToSegmentSquared","px","py","l0x","l0y","l1x","l1y","lineLengthSuared","lerp","edge0","edge1","factor","smoothStep","smootherStep","inMin","inMax","outMin","outMax","min2","max2","isClamped","lowerBound","upperBound","easeInOutCubic","startValue","endValue","time","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","isProduction","headerMessage","m_headerLogged","createLogMethod","pop","severity","rest","nowFunc","performance","Date","getTime","getNowFunc","cloneInternal","cached","flags","candidate","parameters","optionValue","uri","resolveReferenceUri","resolvers","resolveUri","originalUrl","resolver","location","f1","f2","apply","operatorDescriptors","evaluator","m_partialEvaluation","previousEvaluationMode","fromValue","builtin","builtins","defineOperator","includes","defineOperators","CastOperators","ComparisonOperators","MathOperators","StringOperators","ColorOperators","TypeOperators","MiscOperators","FlowOperators","ArrayOperators","InterpolationOperators","ObjectOperators","FeatureOperators","MapOperators","operators","at","arg","rgba","rgbaToHex","rgb","rgbToHex","hsl","euclideanModulo","hslToHex","compare","strict","conditionalCast","all","any","none","boolean","number","interpolate","_interpolatedProperty","_mode","interpolatorType","base","stops","isConstantInterpolation","stop","createInterpolatedProperty","_exponent","_stops","prepareInterpolateCallExpr","interpolatedProperty","_inputIsZoom","classifyStepCallExpr","first","last","mid","MIN_SAFE_INTEGER","hasConstantValues","literal","prepareStepCallExpr","Interpolant","i1","t0","t1","sampleValues","valueSize","offset1","offset0","weight1","weight0","ppi","acos","ceil","ln","ln2","log10","pi","coalesce","LookupMode","lookupMember","lookupMode","memberName","downcase","toLocaleLowerCase","upcase","toLocaleUpperCase","typeof","_context","preserve","changed","newBranch","newCondition","instantiatedBranch","Character","Token","isSpace","codepoint","Tab","Lf","Cr","Space","isNumber","_0","_9","isLetter","A","Z","isIdentChar","isLetterOrNumber","Dollar","Dot","LBracket","RBracket","tokenSpell","token","Eof","Identifier","Comma","LParen","RParen","Exclaim","TildeEqual","CaretEqual","DollarEqual","EqualEqual","ExclaimEqual","Less","Greater","LessEqual","GreaterEqual","BarBar","AmpAmp","Lexer","m_token","m_index","m_char","m_text","yylex","codePointAt","yyinp","ch","SingleQuote","DoubleQuote","Equal","Caret","Tilde","Bar","Amp","getEqualityOp","getRelationalOp","lex","parseLogicalOr","yyexpect","hasAttribute","parseLiteral","parseFloat","parseUnary","parsePrimary","parseRelational","parseEquality","expressions","parseLogicalAnd","Requests","WORKER_SERVICE_MANAGER_SERVICE_ID","isUnknownServiceError","Request","isResponseMessage","WorkerTilerProtocol","isRegisterIndexRequest","RegisterIndex","isUpdateIndexRequest","UpdateIndex","isTileRequest","TileRequest","abortController","AbortController","signal","abort","WorkerDecoderProtocol","DecoderMessageName","isConfigurationMessage","Configuration","isDecodeTileRequest","DecodeTileRequest","isTileInfoRequest","TileInfoRequest","IdentityProjection","identityProjection","getLongitudeQuadrant","oneOverPI","quadrantIndex","lengthOfVector3","makeBox3","halfEquatorialRadius","minLongitude","maxLongitude","minLongitudeQuadrant","maxLongitudeQuadrant","xMin","xMax","yMin","yMax","cosMaxLongitude","sinMaxLongitude","xCenter","xExtent","yCenter","yExtent","minLatitude","maxLatutide","zMax","zMin","zCenter","zExtent","SphereProjection","Spherical","_minElevation","radius","worldpoint","cosLatitude","project","parallelRadiusSq","parallelRadius","bounds","midX","midY","cosSouth","sinSouth","cosWest","sinWest","cosNorth","sinNorth","cosEast","sinEast","cosMidX","sinMidX","cosMidY","sinMidY","rMax","rMin","_worldBox","mx","my","gx","gy","cosLongitude","sinLongitude","sinLatitude","visitTileKey","subTileKey","getSubTileKeys","hereTilingScheme","TilingScheme","mercatorTilingScheme","polarTilingScheme","transform","rotationMatrix","copy","extractBasis","newBox","multiplyScalar","matrix","Matrix4","makeBasis","frustumOrPlanes","planes","plane","dot","distanceToPoint","dx","dy","dz","distanceToPointSquared","subVectors","lengths","getComponent","dd","FeatureGroupType","MINIMUM_OBJECT_SIZE_ESTIMATION","FeatureGroup","startSize","featureIds","numFeatures","numPositions","techniqueIndex","textIndex","positionIndex","layerIndex","classIndex","typeIndex","LineFeatureGroup","userData","getNumBytes","segmentIds","segmentStartOffsets","segmentEndOffsets","PolygonFeatureGroup","groupNumRings","outerRingStartIndex","innerRingIsOuterContour","innerRingStartIndex","textCatalog","techniqueCatalog","numBytes","pointGroup","lineGroup","polygonGroup","layerCatalog","classCatalog","typeCatalog","finishFeatureGroup","featureGroup","featureGroupFinished","getFeatureName","abbreviation","isoCode","lang","featureGroupSize","tileInfoFinished","getFeatureText","isTextTechnique","isPoiTechnique","isLineMarkerTechnique","evaluateTechniqueAttr","techniqueIndexMap","stringMap","layerMap","classMap","typeMap","infoTileTechniqueIndex","decodedTechnique","featureText","featureGroupType","stringIndex","addText","addLayer","addClass","addType","segmentId","startOffset","endOffset","isOuterRing","addStringValue","catalog","ExtendedTileInfoVisitor","handler","visitAllPointFeatures","visitAllLineFeatures","visitAllPolygonFeatures","numFeaturesFound","numPointFeatures","pointFeatures","visitPointFeature","numLineFeatures","lineFeatures","visitLineFeature","numPolygonFeatures","polygonsFeatures","visitPolygonFeature","featureIndex","acceptPoint","getTag","lines","positionsStart","numPointValues","acceptLine","acceptPolygon","polygons","ringStart","numRings","polygonAccessor","setup","ringIndex","pointsStart","m_booleanLiterals","m_numberLiterals","m_stringLiterals","m_objectLiterals","m_varExprs","m_hasAttributeExprs","m_inExprs","m_callExprs","inExprs","inExpr","calls","theme","visitFunc","visit","styles","styleSetName","decodeThemedTile","StyleSetEvaluator","indexBuffer","vertexOffset","contourEdges","nSegments","vFootprint0","vRoof0","vFootprint1","vRoof1","currEdgeStart","currEdgeGoal","prevEdgeStart","prevEdgeGoal","polygonContour","polygonContourEdges","isExtruded","addFootprintEdges","wallEdgeSlope","prevEdgeIdx","v0x","v0y","v1x","v1y","normalize","vFoot0","ThreeBufferUtils","getBufferElementType","fromThreeBufferAttribute","bufferAttribute","array","itemCount","itemSize","normalized","fromThreeInterleavedBufferAttribute","fromThreeBufferGeometry","bufferGeometry","vertexAttributes","attributeNames","attributes","vertexAttribute","count","posAttr","Unspecified","WorkerService","m_decoder","connect","handleDecodeTileRequest","handleTileInfoRequest","handleConfigurationMessage","getProjection","decodeTile","geom","objInfos","addBuffersToTransferList","TilerService","tiler","GeoJsonTiler","handleRegisterIndexRequest","handleUpdateIndexRequest","handleTileRequest","registerIndex","m_factories","m_services","m_service","workerServiceDescriptor","CreateService","targetServiceId","targetServiceType","DestroyService","destroy","CommandKind","isMoveToCommand","command","MoveTo","isLineToCommand","LineTo","isClosePathCommand","ClosePath","visitOmv","vectorTile","layers","visitLayer","visitOmvLayer","endVisitLayer","com","mapbox","pb","Tile","GeomType","UNKNOWN","POINT","LINESTRING","POLYGON","FeatureAttributes","visitAttribute","GeometryCommands","geometryCount","xCoords","yCoords","commands","cmdIndex","xx","yy","visitCommand","propertyCategories","readAttributes","defaultAttributes","attrs","replaceReservedName","category","isLong","simplifiedValue","createFeatureEnv","greaterThan","MAX_SAFE_INTEGER","decodeFeatureId","asGeometryType","processor","m_geometryCommands","payload","proto","m_tileKey","layerExtents","currentPolygon","currentRing","wasm","WebAssembly","Instance","Module","low","high","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","mul","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","LN2","approxRes","approxRem","modulo","rem_u","rem_s","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","$protobuf","$Reader","$util","$root","roots","valuesById","tag","Layer","decodeDelimited","fromObject","TypeError","toObject","arrays","defaults","j","stringValue","floatValue","doubleValue","intValue","uintValue","sintValue","boolValue","long","Feature","end2","version","protobuf","build","rpc","Function","ctx","arguments","pending","b64","s64","encode","parts","chunk","fromCharCode","charCodeAt","_listeners","on","evt","off","listeners","emit","f32","f8b","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","readFloat_ieee754","readUint","uint","mantissa","NaN","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","eval","replace","c1","c2","SIZE","MAX","slab","zero","toLong","part0","part1","part2","writeBytesBuffer","writeStringBuffer","byteLength","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","callback","setTimeout","endedByRPC","tempTileOrigin","tempVertOrigin","tempVertNormal","tempFootDisp","tempRoofDisp","tmpV2","tmpV2r","tmpV3","tmpV3r","tempP0","tempP1","tempPreviousTangent","tmpPointA","tmpPointB","tmpPointC","tmpPointD","tmpPointE","tmpLine","Line3","MIN_AVERAGE_CHAR_WIDTH","SIZE_ESTIMATION_FACTOR","MAX_CORNER_ANGLE","INVALID_ARRAY_INDEX","MeshBuffers","normals","textureCoordinates","colors","extrusionAxis","indices","edgeIndices","texts","pathLengths","stringCatalog","imageTextures","featureStarts","LineType","m_decodeInfo","m_meshBuffers","m_geometries","m_textGeometries","m_textPathGeometries","m_pathGeometries","m_poiGeometries","m_simpleLines","m_solidLines","m_sources","m_maxGeometryHeight","processFeatureCommon","meshBuffers","findOrCreateMeshBuffers","shouldCreateTextGeometries","wantsPoi","poiTechnique","imageTextureValue","composeTechniqueTextureName","textTechnique","webMercatorTile2TargetTile","getFeatureId","localLines","worldLines","uvs","offsets","tileWidth","tileHeight","tileSizeInMeters","computeTexCoords","texCoordinateType","hasUntiledLines","otherTexCoordType","getTextureCoordinateType","getComputeTexCoordsFunc","polyline","untiledLine","lineDist","distanceTo","localLine","worldLine","lineUvs","lineOffsets","u","findRelativePositionInLine","wantCircle","techniqueName","isLineTechnique","isSolidLineTechnique","lineType","Simple","Complex","applyLineTechnique","validLines","metersPerPixel","minEstimatedLabelLength","minEstimatedLabelLengthSqr","splitJaggyLines","path","pathLengthSqr","lineMarkerTechnique","aLine","isLabelRejectionLineTechnique","worldPath","fromArray","ExtrudedLine","techniqueCaps","caps","addCircle","triangulateLine","isFilled","isStandard","isPolygon","clipRing","ringContour","coords","clipPolygon","coord","Ring","isLine","applyPolygonTechnique","nextIdx","nextX","nextY","isOutline","createGeometries","processSimpleLines","processLines","decodedTechniques","textGeometries","poiGeometries","textPathGeometries","pathGeometries","copyrightHolderIds","maxGeometryHeight","maxCornerAngle","computeBoundingBoxSizeSqr","startIndex","endIndex","pathsToCheck","splitIndex","tangent","theta","firstPathLengthSqr","secondPathLengthSqr","TileSpace","texCoordType","tilePos","tileExtents","divideScalar","EquirectangularSpace","linesGeometry","featureAttributes","lineGroupGeometries","hasNormalsAndUvs","LineGroup","SolidLine","ExtrudedPolygon","extrudedPolygonTechnique","fillTechnique","featureHeight","styleSetDefaultHeight","featureMinHeight","ExtrusionFeatureDefs","MIN_BUILDING_HEIGHT","styleSetConstantHeight","getOptionValue","featureStride","isSpherical","hasEdges","colorValue","featureColor","isColorStringValid","startIndexCount","vertices","polygonBaseVertex","insideExtents","holes","hole","triangles","originalVertexCount","BufferGeometry","positionArray","uvArray","edgeArray","wallArray","BufferAttribute","uvAttr","setAttribute","edgeAttr","wallAttr","indexAttr","setIndex","SphericalGeometrySubdivisionModifier","modify","world2tile","geomIndex","getIndex","scaleFactor","getScaleFactor","toArray","i0","i2","addEdges","addWalls","techniqueIdx","positionElements","positionCount","texCoordCount","edgeIndex","linesArray","interleavedVertexAttributes","buffers","featureBaseVertex","featureVertexCount","hasFootprint","tmpEdgeA","tmpEdgeB","firstRingVertex","prevRingVertex","currRingVertex","maxRingVertex","nextRingVertex","prevPos","currPos","nextPos","lineOffset","closestPointToPoint","dist","tmpV","tmpNormal","tmpTangent0","tmpTangent1","tmpBitangent","SEGMENT_OFFSET","LINE_VERTEX_ATTRIBUTES","NORMAL_UV_VERTEX_ATTRIBUTES","LINE_VERTEX_ATTRIBUTES_NUV","HP_LINE_VERTEX_ATTRIBUTES","HP_LINE_VERTEX_ATTRIBUTES_NUV","LineGeometry","getVertexDescriptor","highPrecision","createLineGeometry","pointCount","segments","tangents","baseVertex","hasSegmentOffsets","hasTexCoords","sum","sqrLength","lineCoverage","lineLength","isClosed","tmpVertices","addVertexPair","T1","T2","segment","extrusionCoord","highComp","fround","lowComp","setComponent","angle","bt","cross","computeBitangent","createSimpleLineGeometry","isSimple","m_geometry","vertexDescriptor","InterleavedBuffer","descr","attribute","InterleavedBufferAttribute","createGeometry","UNIT_Z","POINTS","BEVEL_POINTS","SECTORS_IN_CIRCLE","STEP","lineAngle","startWithCircle","endWithCircle","angleVec","prevBt","averageBt","p2","p3","useBevel","angleTo","inclineWidth","inBuffer","outBuffer","xd","yd","zd","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","prev","list","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","intersects","locallyInside","isValidDiagonal","splitPolygon","hx","hy","qx","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","deviation","polygonArea","trianglesArea","flatten","dimensions","holeIndex","VERTEX_POSITION_CACHE","SubdivisionModifier","aa","bb","cc","alpha","beta","gamma","tmpVectorA","tmpVectorB","tmpVectorC","positionAttr","getAttribute","uv","edge","wall","middleVertex","lerpVectors","newIndices","v0","shift","v1","v2","shouldSplitTriangle","v3","needsUpdate","DEFAULT_RATIO_MIN","DEFAULT_RATIO_MAX","tmpBA","tmpQP","tmpA","tmpB","computeIntersection","clip","outputList","inputList","currentPoint","prevPoint","m_storeExtendedTags","m_tileInfo","m_tileInfoWriter","ExtendedTileInfoWriter","tileInfoWriter","addTechnique","addFeature","addFeaturePoint","addFeaturePoints","addRoadSegments","outerRingWinding","aRing","addRingPoints","DEFAULT_BUILDING_COLOR","DEFAULT_DO_EXTRUDE_BUILDINGS","DEFAULT_BUILDING_MIN_HEIGHT","DEFAULT_BUILDING_HEIGHT","rewriteEnvironment","isWood","updateEnvironment","isHospital","isCemetery","isIndustrial","isPark","isBuiltup","isWater","isRoadLabel","isRoadPath","isRoadStreet","isRoadPrimary","isRoadSecondary","isRailway","isFerry","isAeroway","isBorder","isCountryLabel","isCountyLabel","isRegionLabel","isStateLabel","isPlaceLabel","isWaterLabel","isMarineLabel","isPoiLabel","isBuilding","extrude","min_height","isTunnel","structure","isBridge","newClass","class","getSqSegDist","createFeature","calcLineBBox","calcBBox","convertFeature","convertPoint","convertLine","convertLines","out","projectX","projectY","x0","y0","simplify","sqTolerance","maxSqDist","minPosToMid","posToMid","y2","k1","k2","axis","minAll","maxAll","clipped","newGeometry","clipPoints","clipLine","clipLines","newGeom","trackMetrics","segLen","newSlice","intersect","intersectX","intersectY","az","exited","addPoint","shiftFeatureCoords","newFeatures","shiftCoords","newPolygon","k","newPoints","transformTile","transformed","z2","tx","ty","transformPoint","createTile","numPoints","numSimplified","simplified","addLine","tileFeature","isOuter","rewind","GeoJSONVT","dest","extend","convert","tiles","tileCoords","timeEnd","stats","total","merged","splitTile","toID","cz","tl","bl","tr","br","k3","k4","z0"],"mappings":"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","file":"decoder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 55);\n","module.exports = THREE;","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Value } from \"./Env\";\nimport { ExprEvaluator, ExprEvaluatorContext, OperatorDescriptor } from \"./ExprEvaluator\";\nimport { ExprInstantiator, InstantiationContext } from \"./ExprInstantiator\";\nimport { ExprParser } from \"./ExprParser\";\nimport { ExprPool } from \"./ExprPool\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedProperty\";\nimport { interpolatedPropertyDefinitionToJsonExpr } from \"./InterpolatedPropertyDefs\";\nimport { Definitions, isSelectorDefinition, isValueDefinition } from \"./Theme\";\n\nexport * from \"./Env\";\n\nconst exprEvaluator = new ExprEvaluator();\n\nconst exprInstantiator = new ExprInstantiator();\n\nexport interface ExprVisitor<Result, Context> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: Context): Result;\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: Context): Result;\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: Context): Result;\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: Context): Result;\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: Context): Result;\n    visitVarExpr(expr: VarExpr, context: Context): Result;\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: Context): Result;\n    visitContainsExpr(expr: ContainsExpr, context: Context): Result;\n    visitCallExpr(expr: CallExpr, context: Context): Result;\n    visitMatchExpr(expr: MatchExpr, context: Context): Result;\n    visitCaseExpr(expr: CaseExpr, context: Context): Result;\n}\n\n/**\n * The dependencies of an [[Expr]].\n */\nexport class ExprDependencies {\n    /**\n     * The properties needed to evaluate the [[Expr]].\n     */\n    readonly properties = new Set<string>();\n\n    /**\n     * `true` if the [[Expr]] depends on zoom level. Default is `false`.\n     */\n    zoom?: boolean;\n}\n\nclass ComputeExprDependencies implements ExprVisitor<void, ExprDependencies> {\n    static instance = new ComputeExprDependencies();\n\n    /**\n     * Gets the dependencies of an [[Expr]].\n     *\n     * @param expr The [[Expr]] to process.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param dependencies The output [[Set]] of dependency names.\n     */\n    static of(expr: Expr) {\n        const dependencies = new ExprDependencies();\n        expr.accept(this.instance, dependencies);\n        return dependencies;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprDependencies): void {\n        if (expr.op === \"zoom\" && expr.args.length === 0) {\n            context.zoom = true;\n        } else {\n            expr.args.forEach(childExpr => childExpr.accept(this, context));\n        }\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n        expr.branches.forEach(([_, branch]) => branch.accept(this, context));\n        expr.fallback.accept(this, context);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: ExprDependencies): void {\n        expr.branches.forEach(([condition, branch]) => {\n            condition.accept(this, context);\n            branch.accept(this, context);\n        });\n        expr.fallback.accept(this, context);\n    }\n}\n\n/**\n * A type represeting JSON values.\n */\nexport type JsonValue = null | boolean | number | string | JsonObject | JsonArray;\n\n/**\n * A type representing JSON arrays.\n */\nexport interface JsonArray extends Array<JsonValue> {}\n\n/**\n * A type representing JSON objects.\n */\nexport interface JsonObject {\n    [name: string]: JsonValue;\n}\n\n/**\n * The JSON representation of an [[Expr]] object.\n */\nexport type JsonExpr = JsonArray;\n\nexport function isJsonExpr(v: any): v is JsonExpr {\n    return Array.isArray(v) && v.length > 0 && typeof v[0] === \"string\";\n}\n\n/**\n * Internal state needed by [[Expr.fromJSON]] to resolve `\"ref\"` expressions.\n * @hidden\n */\ninterface ReferenceResolverState {\n    definitions: Definitions;\n    lockedNames: Set<string>;\n    cache: Map<string, Expr>;\n}\n\n/**\n * The evaluation scope of an [[Expr]].\n */\nexport enum ExprScope {\n    /**\n     * The scope of an [[Expr]] used as value of an attribute.\n     */\n    Value,\n\n    /**\n     * The scope of an [[Expr]] used in a [[Technique]] `when` condition.\n     */\n    Condition,\n\n    /**\n     * The scope of an [[Expr]] used as dynamic property attribute value.\n     */\n    Dynamic\n}\n\n/**\n * Abstract class defining a shape of a [[Theme]]'s expression\n */\nexport abstract class Expr {\n    /**\n     * Tests of given value is an [[Expr]].\n     *\n     * @param value The object to test.\n     */\n    static isExpr(value: any): value is Expr {\n        return value instanceof Expr;\n    }\n\n    /**\n     * Creates an expression from the given `code`.\n     *\n     * @param code The code to parse.\n     * @returns The parsed [[Expr]].\n     * @deprecated\n     */\n    static parse(code: string): Expr | never {\n        const parser = new ExprParser(code);\n        const expr = parser.parse();\n        return expr;\n    }\n\n    /**\n     * Parse expression in JSON form.\n     *\n     * If `definitions` are defined, then references (`['ref', name]`) are resolved.\n     *\n     * Pass `definitionExprCache` to reuse `Expr` instances created from definitions across\n     * many `fromJSON` calls.\n     *\n     * @param node expression in JSON format to parse\n     * @param definitions optional set of definitions needed definition resolved by `ref` operator\n     * @param definitionExprCache optional cache of `Expr` instances derived from `definitions`\n     */\n    static fromJSON(\n        node: JsonValue,\n        definitions?: Definitions,\n        definitionExprCache?: Map<string, Expr>\n    ) {\n        const referenceResolverState: ReferenceResolverState | undefined =\n            definitions !== undefined\n                ? {\n                      definitions,\n                      lockedNames: new Set(),\n                      cache: definitionExprCache || new Map<string, Expr>()\n                  }\n                : undefined;\n\n        return parseNode(node, referenceResolverState);\n    }\n\n    private m_isDynamic?: boolean;\n\n    /**\n     * Evaluate an expression returning a [[Value]] object.\n     *\n     * @param env The [[Env]] used to lookup symbols.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param cache A cache of previously computed results.\n     */\n    evaluate(\n        env: Env,\n        scope: ExprScope = ExprScope.Value,\n        cache?: Map<Expr, Value>\n    ): Value | never {\n        return this.accept(\n            exprEvaluator,\n            new ExprEvaluatorContext(exprEvaluator, env, scope, cache)\n        );\n    }\n\n    /**\n     * Instantiates this [[Expr]] by resolving references to the `get` and\n     * `has` operator using the given instantiation context.\n     *\n     * @param context The [[InstantationContext]] used to resolve names.\n     */\n    instantiate(context: InstantiationContext): Expr {\n        return this.accept(exprInstantiator, context);\n    }\n\n    /**\n     * Gets the dependencies of this [[Expr]].\n     */\n    dependencies(): ExprDependencies {\n        return ComputeExprDependencies.of(this);\n    }\n\n    /**\n     * Create a unique object that is structurally equivalent to this [[Expr]].\n     *\n     * @param pool The [[ExprPool]] used to create a unique\n     * equivalent object of this [[Expr]].\n     */\n    intern(pool: ExprPool): Expr {\n        return pool.add(this);\n    }\n\n    toJSON(): JsonValue {\n        return new ExprSerializer().serialize(this);\n    }\n\n    /**\n     * Returns `true` if a dynamic execution context is required to evaluate this [[Expr]].\n     */\n    isDynamic(): boolean {\n        if (this.m_isDynamic === undefined) {\n            this.m_isDynamic = this.exprIsDynamic();\n        }\n        return this.m_isDynamic;\n    }\n\n    abstract accept<Result, Context>(\n        visitor: ExprVisitor<Result, Context>,\n        context: Context\n    ): Result;\n\n    /**\n     * Update the dynamic state of this [[Expr]].\n     *\n     * [[exprIsDynamic]] must never be called directly.\n     *\n     * @hidden\n     */\n    protected abstract exprIsDynamic(): boolean;\n}\n\n/**\n * @hidden\n */\nexport type RelationalOp = \"<\" | \">\" | \"<=\" | \">=\";\n\n/**\n * @hidden\n */\nexport type EqualityOp = \"~=\" | \"^=\" | \"$=\" | \"==\" | \"!=\";\n\n/**\n * @hidden\n */\nexport type BinaryOp = RelationalOp | EqualityOp;\n\n/**\n * Var expression.\n * @hidden\n */\nexport class VarExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitVarExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\nexport abstract class LiteralExpr extends Expr {\n    /**\n     * Create a [[LiteralExpr]] from the given value.\n     *\n     * @param value A constant value.\n     */\n    static fromValue(value: Value): Expr {\n        switch (typeof value) {\n            case \"boolean\":\n                return new BooleanLiteralExpr(value);\n            case \"number\":\n                return new NumberLiteralExpr(value);\n            case \"string\":\n                return new StringLiteralExpr(value);\n            case \"object\":\n                return value === null ? NullLiteralExpr.instance : new ObjectLiteralExpr(value);\n            default:\n                throw new Error(`failed to create a literal from '${value}'`);\n        } // switch\n    }\n\n    abstract get value(): Value;\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Null literal expression.\n * @hidden\n */\nexport class NullLiteralExpr extends LiteralExpr {\n    static instance = new NullLiteralExpr();\n    /** @override */\n    readonly value = null;\n\n    protected constructor() {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNullLiteralExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Boolean literal expression.\n * @hidden\n */\nexport class BooleanLiteralExpr extends LiteralExpr {\n    constructor(readonly value: boolean) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitBooleanLiteralExpr(this, context);\n    }\n}\n\n/**\n * Number literal expression.\n * @hidden\n */\nexport class NumberLiteralExpr extends LiteralExpr {\n    constructor(readonly value: number) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNumberLiteralExpr(this, context);\n    }\n}\n\n/**\n * String literal expression.\n * @hidden\n */\nexport class StringLiteralExpr extends LiteralExpr {\n    constructor(readonly value: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStringLiteralExpr(this, context);\n    }\n}\n\n/**\n * Object literal expression.\n * @hidden\n */\nexport class ObjectLiteralExpr extends LiteralExpr {\n    constructor(readonly value: object) {\n        super();\n    }\n\n    get isArrayLiteral() {\n        return Array.isArray(this.value);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitObjectLiteralExpr(this, context);\n    }\n}\n\n/**\n * A has expression with an attribute, for example `has(ref)`.\n * @hidden\n */\nexport class HasAttributeExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitHasAttributeExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A contains expression.\n * @hidden\n */\nexport class ContainsExpr extends Expr {\n    static isValidElementsArray(elements: JsonValue): elements is Array<number | string> {\n        if (!Array.isArray(elements) || elements.length === 0) {\n            return false;\n        }\n\n        const elementTy = typeof elements[0];\n\n        if (elementTy === \"number\" || elementTy === \"string\") {\n            return elements.every(element => typeof element === elementTy);\n        }\n\n        return false;\n    }\n\n    constructor(readonly value: Expr, readonly elements: Array<number | string>) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitContainsExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return this.value.isDynamic();\n    }\n}\n\n/**\n * @hidden\n */\nexport class CallExpr extends Expr {\n    descriptor?: OperatorDescriptor;\n\n    constructor(readonly op: string, readonly args: Expr[]) {\n        super();\n    }\n\n    /**\n     * Returns the child nodes of this [[Expr]].\n     * @deprecated\n     */\n    get children() {\n        return this.args;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCallExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        const descriptor = this.descriptor || ExprEvaluator.getOperator(this.op);\n\n        if (descriptor && descriptor.isDynamicOperator && descriptor.isDynamicOperator(this)) {\n            return true;\n        }\n\n        return this.args.some(e => e.isDynamic());\n    }\n}\n\n/**\n * @hidden\n */\nexport type MatchLabel = number | string | number[] | string[];\n\n/**\n * @hidden\n */\nexport class MatchExpr extends Expr {\n    /**\n     * Tests if the given JSON node is a valid label for the `\"match\"` operator.\n     *\n     * @param node A JSON value.\n     */\n    static isValidMatchLabel(node: JsonValue): node is MatchLabel {\n        switch (typeof node) {\n            case \"number\":\n            case \"string\":\n                return true;\n            case \"object\":\n                if (!Array.isArray(node) || node.length === 0) {\n                    return false;\n                }\n                const elementTy = typeof node[0];\n                if (elementTy === \"number\" || elementTy === \"string\") {\n                    return node.every(t => typeof t === elementTy);\n                }\n                return false;\n            default:\n                return false;\n        } // switch\n    }\n\n    constructor(\n        readonly value: Expr,\n        readonly branches: Array<[MatchLabel, Expr]>,\n        readonly fallback: Expr\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitMatchExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.value.isDynamic() ||\n            this.branches.some(([_, branch]) => branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nexport class CaseExpr extends Expr {\n    constructor(readonly branches: Array<[Expr, Expr]>, readonly fallback: Expr) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCaseExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.branches.some(([cond, branch]) => cond.isDynamic() || branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nclass ExprSerializer implements ExprVisitor<JsonValue, void> {\n    serialize(expr: Expr): JsonValue {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): JsonValue {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): JsonValue {\n        return [\"literal\", expr.value as JsonObject];\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): JsonValue {\n        return [\"get\", expr.name];\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): JsonValue {\n        return [\"has\", expr.name];\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: void): JsonValue {\n        return [\"in\", this.serialize(expr.value), expr.elements];\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): JsonValue {\n        return [expr.op, ...expr.args.map(childExpr => this.serialize(childExpr))];\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [label, body] of expr.branches) {\n            branches.push(label, this.serialize(body));\n        }\n        return [\"match\", this.serialize(expr.value), ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [condition, body] of expr.branches) {\n            branches.push(this.serialize(condition), this.serialize(body));\n        }\n        return [\"case\", ...branches, this.serialize(expr.fallback)];\n    }\n}\n\nfunction parseNode(\n    node: JsonValue,\n    referenceResolverState: ReferenceResolverState | undefined\n): Expr {\n    if (Array.isArray(node)) {\n        return parseCall(node, referenceResolverState);\n    } else if (node === null) {\n        return NullLiteralExpr.instance;\n    } else if (typeof node === \"boolean\") {\n        return new BooleanLiteralExpr(node);\n    } else if (typeof node === \"number\") {\n        return new NumberLiteralExpr(node);\n    } else if (typeof node === \"string\") {\n        return new StringLiteralExpr(node);\n    }\n    throw new Error(`failed to create expression from: ${JSON.stringify(node)}`);\n}\n\nfunction parseCall(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n    const op = node[0];\n\n    if (typeof op !== \"string\") {\n        throw new Error(\"expected a builtin function name\");\n    }\n\n    switch (op) {\n        case \"!has\":\n        case \"!in\":\n            return new CallExpr(\"!\", [parseCall([op.slice(1), ...node.slice(1)])]);\n\n        case \"ref\":\n            return resolveReference(node, referenceResolverState);\n\n        case \"get\":\n            return parseGetExpr(node, referenceResolverState);\n\n        case \"has\":\n            return parseHasExpr(node, referenceResolverState);\n\n        case \"in\":\n            return parseInExpr(node, referenceResolverState);\n\n        case \"literal\":\n            return parseLiteralExpr(node);\n\n        case \"match\":\n            return parseMatchExpr(node, referenceResolverState);\n\n        case \"case\":\n            return parseCaseExpr(node, referenceResolverState);\n\n        default:\n            return makeCallExpr(op, node, referenceResolverState);\n    } // switch\n}\n\nfunction parseGetExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"get\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new VarExpr(name);\n}\n\nfunction parseHasExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"has\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new HasAttributeExpr(name);\n}\n\nfunction parseInExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    const elements = node[2];\n    if (!ContainsExpr.isValidElementsArray(elements)) {\n        // tslint:disable-next-line: max-line-length\n        throw new Error(`'in' expects an array of number or string literals`);\n    }\n    return new ContainsExpr(parseNode(node[1], referenceResolverState), elements);\n}\n\nfunction parseLiteralExpr(node: JsonArray) {\n    const obj = node[1];\n    if (obj === null || typeof obj !== \"object\") {\n        throw new Error(\"expected an object or array literal\");\n    }\n    return new ObjectLiteralExpr(obj);\n}\n\nfunction parseMatchExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 4) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (!(node.length % 2)) {\n        throw new Error(\"fallback is missing in 'match' expression\");\n    }\n    const value = parseNode(node[1], referenceResolverState);\n    const conditions: Array<[MatchLabel, Expr]> = [];\n    for (let i = 2; i < node.length - 1; i += 2) {\n        const label = node[i];\n        if (!MatchExpr.isValidMatchLabel(label)) {\n            throw new Error(`'${JSON.stringify(label)}' is not a valid label for 'match'`);\n        }\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        conditions.push([label, expr]);\n    }\n    const fallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new MatchExpr(value, conditions, fallback);\n}\n\nfunction parseCaseExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 3) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (node.length % 2) {\n        throw new Error(\"fallback is missing in 'case' expression\");\n    }\n    const branches: Array<[Expr, Expr]> = [];\n    for (let i = 1; i < node.length - 1; i += 2) {\n        const condition = parseNode(node[i], referenceResolverState);\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        branches.push([condition, expr]);\n    }\n    const caseFallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new CaseExpr(branches, caseFallback);\n}\n\nfunction makeCallExpr(\n    op: string,\n    node: any[],\n    referenceResolverState?: ReferenceResolverState\n): Expr {\n    return new CallExpr(\n        op,\n        node.slice(1).map(childExpr => parseNode(childExpr, referenceResolverState))\n    );\n}\n\nfunction resolveReference(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (typeof node[1] !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    if (referenceResolverState === undefined) {\n        throw new Error(`ref used with no definitions`);\n    }\n    const name = node[1] as string;\n\n    if (referenceResolverState.lockedNames.has(name)) {\n        throw new Error(`circular referene to '${name}'`);\n    }\n\n    if (!(name in referenceResolverState.definitions)) {\n        throw new Error(`definition '${name}' not found`);\n    }\n\n    const cachedEntry = referenceResolverState.cache.get(name);\n    if (cachedEntry !== undefined) {\n        return cachedEntry;\n    }\n    let definitionEntry = referenceResolverState.definitions[name] as any;\n    if (isSelectorDefinition(definitionEntry)) {\n        definitionEntry = definitionEntry.value;\n    }\n    let result: Expr;\n    if (isValueDefinition(definitionEntry)) {\n        if (isInterpolatedPropertyDefinition(definitionEntry.value)) {\n            // found a reference to an interpolation using\n            // the deprecated object-like syntax.\n            return Expr.fromJSON(interpolatedPropertyDefinitionToJsonExpr(definitionEntry.value));\n        } else if (isJsonExpr(definitionEntry.value)) {\n            definitionEntry = definitionEntry.value;\n        } else {\n            return Expr.fromJSON(definitionEntry.value);\n        }\n    }\n    if (isJsonExpr(definitionEntry)) {\n        referenceResolverState.lockedNames.add(name);\n        try {\n            result = parseNode(definitionEntry, referenceResolverState);\n        } finally {\n            referenceResolverState.lockedNames.delete(name);\n        }\n    } else {\n        throw new Error(`unsupported definition ${name}`);\n    }\n    referenceResolverState.cache.set(name, result);\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/GroupedPriorityList\";\nexport * from \"./lib/Logger\";\nexport * from \"./lib/Math2D\";\nexport * from \"./lib/MathUtils\";\nexport * from \"./lib/Mixins\";\nexport * from \"./lib/assert\";\nexport * from \"./lib/CachedResource\";\nexport * from \"./lib/ContextLogger\";\nexport * from \"./lib/PerformanceTimer\";\nexport * from \"./lib/ObjectUtils\";\nexport * from \"./lib/OptionsUtils\";\nexport * from \"./lib/UriResolver\";\nexport * from \"./lib/UrlUtils\";\nexport * from \"./lib/UrlPlatformUtils\";\nexport * from \"./lib/Functions\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ColorUtils\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/Techniques\";\nexport * from \"./lib/TechniqueParams\";\nexport * from \"./lib/Theme\";\nexport * from \"./lib/PostEffects\";\nexport * from \"./lib/InterpolatedProperty\";\nexport * from \"./lib/InterpolatedPropertyDefs\";\nexport * from \"./lib/WorkerServiceProtocol\";\nexport * from \"./lib/WorkerTilerProtocol\";\nexport * from \"./lib/WorkerDecoderProtocol\";\nexport * from \"./lib/ITileDecoder\";\nexport * from \"./lib/ITiler\";\nexport * from \"./lib/DecodedTile\";\nexport * from \"./lib/TileInfo\";\nexport * from \"./lib/GeoJsonDataType\";\nexport * from \"./lib/ThemeVisitor\";\nexport * from \"./lib/StringEncodedNumeral\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/coordinates/GeoBox\";\nexport * from \"./lib/coordinates/GeoCoordinatesLike\";\nexport * from \"./lib/coordinates/GeoCoordinates\";\nexport * from \"./lib/coordinates/GeoPointLike\";\nexport * from \"./lib/coordinates/LatLngLike\";\nexport * from \"./lib/projection/EarthConstants\";\nexport * from \"./lib/projection/EquirectangularProjection\";\nexport * from \"./lib/projection/IdentityProjection\";\nexport * from \"./lib/projection/Projection\";\nexport * from \"./lib/projection/MercatorProjection\";\nexport * from \"./lib/projection/TransverseMercatorProjection\";\nexport * from \"./lib/projection/SphereProjection\";\nexport * from \"./lib/tiling/FlatTileBoundingBoxGenerator\";\nexport * from \"./lib/tiling/HalfQuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTree\";\nexport * from \"./lib/tiling/SubTiles\";\nexport * from \"./lib/tiling/SubdivisionScheme\";\nexport * from \"./lib/tiling/TileKey\";\nexport * from \"./lib/tiling/TileKeyUtils\";\nexport * from \"./lib/tiling/TileTreeTraverse\";\nexport * from \"./lib/tiling/TilingScheme\";\nexport * from \"./lib/tiling/HereTilingScheme\";\nexport * from \"./lib/tiling/WebMercatorTilingScheme\";\nexport * from \"./lib/tiling/MercatorTilingScheme\";\nexport * from \"./lib/tiling/PolarTilingScheme\";\nexport * from \"./lib/math/Vector3Like\";\nexport * from \"./lib/math/Box3Like\";\nexport * from \"./lib/math/OrientedBox3Like\";\nexport * from \"./lib/math/MathUtils\";\nexport * from \"./lib/math/TransformLike\";\nexport * from \"./lib/math/OrientedBox3\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\nimport * as THREE from \"three\";\n\n/**\n * Represents an object in different geo coordinate formats\n */\nexport type GeoCoordLike = GeoPointLike | GeoCoordinatesLike | LatLngLike;\n\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nexport class GeoCoordinates implements GeoCoordinatesLike {\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    static fromDegrees(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in radians.\n     * @param longitude Longitude in radians.\n     * @param altitude Altitude in meters.\n     */\n    static fromRadians(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(\n            THREE.Math.radToDeg(latitude),\n            THREE.Math.radToDeg(longitude),\n            altitude\n        );\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[LatLngLike]] literal.\n     * ```typescript\n     * const center = { lat: 53.3, lng: 13.4 };\n     * mapView.geoCenter = GeoCoordinates.fromLatLng(center);\n     * ```\n     * @param latLng A [[LatLngLike]] object literal.\n     */\n    static fromLatLng(latLng: LatLngLike) {\n        return new GeoCoordinates(latLng.lat, latLng.lng);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[GeoPointLike]] tuple.\n     *\n     * Example:\n     * ```typescript\n     * mapView.geoCenter = GeoCoordinates.fromGeoPoint([longitude, latitude]);\n     *\n     * let geoCoords: number[] = ...;\n     *\n     * if (isGeoPointLike(geoCoords)) {\n     *     const p = GeoCoordinates.fromGeoPoint(geoCoords);\n     * }\n     * ```\n     * @param geoPoint An [[Array]] of at least two elements following the order\n     * longitude, latitude, altitude.\n     */\n    static fromGeoPoint(geoPoint: GeoPointLike): GeoCoordinates {\n        return new GeoCoordinates(geoPoint[1], geoPoint[0], geoPoint[2]);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from different types of geo coordinate objects.\n     *\n     * Example:\n     * ```typescript\n     * const fromGeoPointLike = GeoCoordinates.fromObject([longitude, latitude]);\n     * const fromGeoCoordinateLike = GeoCoordinates.fromObject({ longitude, latitude });\n     * const fromGeoCoordinate = GeoCoordinates.fromObject(new GeoCoordinates(latitude, longitude));\n     * const fromLatLngLike = GeoCoordinates.fromObject({ lat: latitude , lng: longitude });\n     * ```\n     *\n     * @param geoPoint Either [[GeoPointLike]], [[GeoCoordinatesLike]]\n     * or [[LatLngLike]] object literal.\n     */\n    static fromObject(geoPoint: GeoCoordLike): GeoCoordinates {\n        if (isGeoPointLike(geoPoint)) {\n            return GeoCoordinates.fromGeoPoint(geoPoint);\n        } else if (isGeoCoordinatesLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(\n                geoPoint.latitude,\n                geoPoint.longitude,\n                geoPoint.altitude\n            );\n        } else if (isLatLngLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(geoPoint.lat, geoPoint.lng);\n        }\n\n        throw new Error(\"Invalid input coordinate format.\");\n    }\n\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    constructor(public latitude: number, public longitude: number, public altitude?: number) {}\n\n    /**\n     * Returns the latitude in radians.\n     */\n    get latitudeInRadians(): number {\n        return THREE.Math.degToRad(this.latitude);\n    }\n\n    /**\n     * Returns the longitude in radians.\n     */\n    get longitudeInRadians(): number {\n        return THREE.Math.degToRad(this.longitude);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * @deprecated Use the [[latitude]] property instead.\n     */\n    get latitudeInDegrees(): number {\n        return this.latitude;\n    } // compat api\n\n    /**\n     * Returns the longitude in degrees.\n     * @deprecated Use the [[longitude]] property instead.\n     */\n    get longitudeInDegrees(): number {\n        return this.longitude;\n    } // compat api\n\n    /**\n     * The latitude in the degrees.\n     */\n    get lat() {\n        return this.latitude;\n    }\n\n    /**\n     * The longitude in the degrees.\n     */\n    get lng() {\n        return this.longitude;\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    isValid(): boolean {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    }\n\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    normalized(): GeoCoordinates {\n        let { latitude, longitude } = this;\n\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n\n        if (latitude > 90) {\n            let wrapped = (latitude + 90) % 360;\n            if (wrapped >= 180) {\n                longitude += 180;\n                wrapped = 360 - wrapped;\n            }\n\n            latitude = wrapped - 90;\n        }\n\n        if (latitude < -90) {\n            let wrapped = (latitude - 90) % 360;\n            if (wrapped <= -180) {\n                longitude += 180;\n                wrapped = -360 - wrapped;\n            }\n\n            latitude = wrapped + 90;\n        }\n\n        if (longitude < -180 || longitude > 180) {\n            const sign = Math.sign(longitude);\n            longitude = (((longitude % 360) + 180 * sign) % 360) - 180 * sign;\n        }\n\n        if (latitude === this.latitude && longitude === this.longitude) {\n            return this;\n        }\n\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other GeoCoordinatesLike to compare to.\n     */\n    equals(other: GeoCoordinatesLike): boolean {\n        return (\n            this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude\n        );\n    }\n\n    /**\n     * Copy values from the other.\n     *\n     * @param other GeoCoordinatesLike to copy all values from.\n     */\n    copy(other: GeoCoordinatesLike): GeoCoordinates {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    }\n\n    /**\n     * Clones this `GeoCoordinates`.\n     * @deprecated\n     */\n    clone(): GeoCoordinates {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    }\n\n    /**\n     * Returns this [[GeoCoordinates]] as [[LatLngLike]] literal.\n     */\n    toLatLng(): LatLngLike {\n        return { lat: this.latitude, lng: this.longitude };\n    }\n\n    /**\n     * Converts this [[GeoCoordinates]] to a [[GeoPointLike]].\n     */\n    toGeoPoint(): GeoPointLike {\n        return this.altitude !== undefined\n            ? [this.longitude, this.latitude, this.altitude]\n            : [this.longitude, this.latitude];\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like } from \"./Box3Like\";\nimport { Vector3Like } from \"./Vector3Like\";\n\nimport * as THREE from \"three\";\n\nexport namespace MathUtils {\n    /**\n     * Creates a new empty bounding box.\n     * @deprecated\n     */\n    export function newEmptyBox3(): Box3Like {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     */\n    export function newVector3(x: number, y: number, z: number): Vector3Like;\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The resulting [Vector3Like] instance.\n     */\n    export function newVector3<Vector extends Vector3Like>(\n        x: number,\n        y: number,\n        z: number,\n        v: Vector\n    ): Vector;\n\n    /**\n     * Set the components of the given [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The [Vector3Like]\n     */\n    export function newVector3(x: number, y: number, z: number, v?: Vector3Like): Vector3Like {\n        if (v === undefined) {\n            return { x, y, z };\n        }\n        v.x = x;\n        v.y = y;\n        v.z = z;\n        return v;\n    }\n\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees Value in degrees.\n     * @returns Value in radians.\n     * @deprecated\n     */\n    export const degToRad = THREE.Math.degToRad;\n\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees Value in radians.\n     * @returns Value in degrees.\n     * @deprecated\n     */\n    export const radToDeg = THREE.Math.radToDeg;\n\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     * @returns Clamped value.\n     * @deprecated\n     */\n    export const clamp = THREE.Math.clamp;\n\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    export function normalizeAngleDeg(a: number): number {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a Start angle in degrees.\n     * @param b End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    export function angleDistanceDeg(a: number, b: number): number {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n\n        const d = a - b;\n        if (d > 180) {\n            return d - 360;\n        } else if (d <= -180) {\n            return d + 360;\n        } else {\n            return d;\n        }\n    }\n\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 Angle from in degrees\n     * @param p1 Angle to in degrees\n     * @param t Interpolation factor (alpha), in range `0-1`.\n     */\n    export function interpolateAnglesDeg(p0: number, p1: number, t: number): number {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n\n        const d = angleDistanceDeg(p1, p0);\n        const r = (p0 + d * t) % 360;\n        return r;\n    }\n}\n","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n// global object reference\r\nutil.global = typeof window !== \"undefined\" && window\r\n           || typeof global !== \"undefined\" && global\r\n           || typeof self   !== \"undefined\" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * An interface representing bounding box in world coordinates.\n */\nexport interface Box3Like {\n    /**\n     * The minimum position in world coordinates of this bounding box.\n     */\n    readonly min: Vector3Like;\n\n    /**\n     * The maximum position in world coordinates of this bounding box.\n     */\n    readonly max: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the [[Box3Like]] interface.\n *\n * @param object A valid object.\n */\nexport function isBox3Like(object: {}): object is Box3Like {\n    const box3 = object as Partial<Box3Like>;\n    return box3.min !== undefined && box3.max !== undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransformLike } from \"./TransformLike\";\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[OrientedBox3Like]] is used to represent oriented bounding box.\n */\nexport interface OrientedBox3Like extends TransformLike {\n    /**\n     * The extents of this bounding box.\n     */\n    readonly extents: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[OrientedBox3Like]].\n *\n * @param object The object.\n */\nexport function isOrientedBox3Like(object: {}): object is OrientedBox3Like {\n    const obb = object as Partial<OrientedBox3Like>;\n    return (\n        obb.position !== undefined &&\n        obb.xAxis !== undefined &&\n        obb.yAxis !== undefined &&\n        obb.zAxis !== undefined &&\n        obb.extents !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\n\n/**\n * The type of projection.\n */\nexport enum ProjectionType {\n    /**\n     * A type of [Projection] with zero curvature.\n     */\n    Planar,\n\n    /**\n     * A spherical [Projection].\n     */\n    Spherical\n}\n\n/**\n * `Projection` is used to convert positions from geo coordinates to world coordinates and vice\n * versa.\n */\nexport abstract class Projection {\n    /**\n     * The type of this [Projection].\n     */\n    abstract get type(): ProjectionType;\n\n    /**\n     * Constructs the Projection\n     *\n     * @param unitScale How to transform the projected coordinates to world units.\n     */\n    constructor(readonly unitScale: number) {\n        //Prevent empty constructor error.\n    }\n\n    /**\n     * Returns the world extents in world coordinates.\n     *\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     * @param result The optional object that will be used to create the resulting bounding box.\n     */\n    abstract worldExtent<Bounds extends Box3Like>(\n        minElevation: number,\n        maxElevation: number,\n        result?: Bounds\n    ): Bounds;\n\n    /**\n     * Projects a point from geo coordinates (latitude, longitude, altitude) to world coordinates\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const worldPos = new THREE.Vector3();\n     * projection.projectPoint(geoPos, worldPos);\n     * ```\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param result The optional object used to store the resulting world position, result must\n     * implement [[Vector3Like]].\n     */\n    abstract projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Gets the [[TransformLike]] of the local tangent space at the given geo coordinates.\n     *\n     * @param geoPoint The geo coordinates.\n     * @param result The [[TransformLike]].\n     */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, 1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, 1, result.zAxis);\n        return result;\n    }\n\n    /**\n     * Returns the geo coordinates (latitude, longitude, altitude) from the given world position\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectPoint(worldPoint: Vector3Like): GeoCoordinates;\n\n    /**\n     * Returns the altitude at the given world position (x,y,z) in meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectAltitude(worldPoint: Vector3Like): number;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox);\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     */\n    abstract projectBox(geoBox: GeoBox): Box3Like;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox, new THREE.Box3());\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param result The resulting [[OrientedBox3Like]].\n     */\n    abstract projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: WorldBoundingBox\n    ): WorldBoundingBox;\n\n    /**\n     * Converts a bounding box in world coordinates to a bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldBox The bounding box in world coordinates.\n     */\n    abstract unprojectBox(worldBox: Box3Like): GeoBox;\n\n    /**\n     * Returns the scaling factor that must be used to convert the units used by `worldPoint` to\n     * meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract getScaleFactor(worldPoint: Vector3Like): number;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract surfaceNormal(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     * @returns The resulting normal vector.\n     */\n    abstract surfaceNormal<Normal extends Vector3Like>(\n        worldPoint: Vector3Like,\n        result: Normal\n    ): Normal;\n\n    /**\n     * Returns the signed distance between the given coordinates and\n     * the closest point on the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract groundDistance(worldPoint: Vector3Like): number;\n\n    /**\n     * Scales the given world coordinates to the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract scalePointToSurface(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid world position for the given source projection.\n     * @returns The world position reprojected using this [[Projection]].\n     */\n    reprojectPoint(sourceProjection: Projection, worldPos: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     */\n    reprojectPoint<WorldCoordinates extends Vector3Like>(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result: WorldCoordinates\n    ): typeof result;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     * Implementations should be aware of worldPos and result may be one object\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     * @hidden\n     */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === this) {\n            if (result === undefined) {\n                return { x: worldPos.x, y: worldPos.y, z: worldPos.z };\n            }\n            result.x = worldPos.x;\n            result.y = worldPos.y;\n            result.z = worldPos.z;\n            return result;\n        }\n        return this.projectPoint(sourceProjection.unprojectPoint(worldPos), result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport { ColorUtils } from \"./ColorUtils\";\nimport { Env, MapEnv } from \"./Env\";\nimport { ExponentialInterpolant } from \"./ExponentialInterpolant\";\nimport { Expr, ExprScope, Value } from \"./Expr\";\nimport {\n    InterpolatedProperty,\n    InterpolatedPropertyDefinition,\n    InterpolationMode\n} from \"./InterpolatedPropertyDefs\";\nimport {\n    parseStringEncodedNumeral,\n    StringEncodedColorFormats,\n    StringEncodedMetricFormats,\n    StringEncodedNumeralFormat,\n    StringEncodedNumeralFormatMaxSize,\n    StringEncodedNumeralFormats,\n    StringEncodedNumeralType\n} from \"./StringEncodedNumeral\";\n\nconst logger = LoggerManager.instance.create(\"InterpolatedProperty\");\n\nconst interpolants = [\n    THREE.DiscreteInterpolant,\n    THREE.LinearInterpolant,\n    THREE.CubicInterpolant,\n    ExponentialInterpolant\n];\n\nconst tmpBuffer = new Array<number>(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Checks if a property is interpolated.\n * @param p property to be checked\n */\nexport function isInterpolatedPropertyDefinition<T>(\n    p: any\n): p is InterpolatedPropertyDefinition<T> {\n    if (\n        p &&\n        p.interpolationMode === undefined &&\n        Array.isArray(p.values) &&\n        p.values.length > 0 &&\n        p.values[0] !== undefined &&\n        Array.isArray(p.zoomLevels) &&\n        p.zoomLevels.length > 0 &&\n        p.zoomLevels[0] !== undefined &&\n        p.values.length === p.zoomLevels.length\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Type guard to check if an object is an instance of `InterpolatedProperty`.\n */\nexport function isInterpolatedProperty(p: any): p is InterpolatedProperty {\n    if (\n        p !== undefined &&\n        p.interpolationMode !== undefined &&\n        p.zoomLevels instanceof Float32Array &&\n        p.values !== undefined &&\n        p.values.length > 0 &&\n        (p.zoomLevels.length === p.values.length / 4 ||\n            p.zoomLevels.length === p.values.length / 3 ||\n            p.zoomLevels.length === p.values.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * A temp [[Env]] containing the arguments passed to `getPropertyValue`.\n *\n * [[dynamicPropertiesTempEnv]] is used when `getPropertyValue` is\n * invoked with explicit values for `zoom` and `pixelToMeters` instead\n * of with an [[Env]].\n *\n * @hidden\n */\nconst dynamicPropertiesTempEnv = new MapEnv({\n    $zoom: 0,\n    $pixelToMeters: 1\n});\n\n/**\n * Get the value of the specified property at the given zoom level.\n *\n * @param property Property of a technique.\n * @param env The [[Env]] used to evaluate the property.\n */\nexport function getPropertyValue(\n    property: Value | Expr | InterpolatedProperty | undefined,\n    env: Env\n): any;\n\n/**\n * Get the value of the specified property at the given zoom level.\n *\n * @param property Property of a technique.\n * @param level Display level the property should be rendered at.\n * @param pixelToMeters Optional pixels to meters conversion factor (needed for proper\n * interpolation of `length` values).\n *\n */\nexport function getPropertyValue(\n    property: Value | Expr | InterpolatedProperty | undefined,\n    level: number,\n    pixelToMeters?: number\n): any;\n\nexport function getPropertyValue(\n    property: Value | Expr | InterpolatedProperty | undefined,\n    envOrLevel: number | Env,\n    pixelToMeters: number = 1.0\n): any {\n    if (Expr.isExpr(property)) {\n        let env: Env;\n\n        if (typeof envOrLevel === \"number\") {\n            dynamicPropertiesTempEnv.entries.$zoom = envOrLevel;\n            dynamicPropertiesTempEnv.entries.$pixelToMeters = pixelToMeters;\n            env = dynamicPropertiesTempEnv;\n        } else {\n            env = envOrLevel;\n        }\n\n        return property.evaluate(env, ExprScope.Dynamic);\n    }\n\n    let level: number;\n\n    if (typeof envOrLevel === \"number\") {\n        level = envOrLevel;\n    } else {\n        level = envOrLevel.lookup(\"$zoom\") as number;\n        pixelToMeters = envOrLevel.lookup(\"$pixelToMeters\") as number;\n    }\n\n    // Non-interpolated property parsing\n    if (!isInterpolatedProperty(property)) {\n        if (typeof property !== \"string\") {\n            // Property in numeric or array, etc. format\n            return property;\n        } else {\n            const value = parseStringEncodedNumeral(property, pixelToMeters);\n            return value !== undefined ? value : property;\n        }\n        // Interpolated property\n    } else if (property._stringEncodedNumeralType !== undefined) {\n        switch (property._stringEncodedNumeralType) {\n            case StringEncodedNumeralType.Meters:\n            case StringEncodedNumeralType.Pixels:\n                return getInterpolatedMetric(property, level, pixelToMeters);\n            case StringEncodedNumeralType.Hex:\n            case StringEncodedNumeralType.RGB:\n            case StringEncodedNumeralType.RGBA:\n            case StringEncodedNumeralType.HSL:\n                return getInterpolatedColor(property, level);\n        }\n    }\n    return getInterpolatedMetric(property, level, pixelToMeters);\n}\n\nfunction getInterpolatedMetric(\n    property: InterpolatedProperty,\n    level: number,\n    pixelToMeters: number\n): number {\n    const nChannels = property.values.length / property.zoomLevels.length;\n    const interpolant = new interpolants[property.interpolationMode](\n        property.zoomLevels,\n        property.values,\n        nChannels\n    );\n    if (\n        property.interpolationMode === InterpolationMode.Exponential &&\n        property.exponent !== undefined\n    ) {\n        (interpolant as ExponentialInterpolant).exponent = property.exponent;\n    }\n    interpolant.evaluate(level);\n\n    if (property._stringEncodedNumeralDynamicMask === undefined) {\n        return interpolant.resultBuffer[0];\n    } else {\n        const maskInterpolant = new interpolants[property.interpolationMode](\n            property.zoomLevels,\n            property._stringEncodedNumeralDynamicMask,\n            1\n        );\n        if (\n            property.interpolationMode === InterpolationMode.Exponential &&\n            property.exponent !== undefined\n        ) {\n            (maskInterpolant as ExponentialInterpolant).exponent = property.exponent;\n        }\n        maskInterpolant.evaluate(level);\n\n        return (\n            interpolant.resultBuffer[0] *\n            (1 + maskInterpolant.resultBuffer[0] * (pixelToMeters - 1))\n        );\n    }\n}\n\nfunction getInterpolatedColor(property: InterpolatedProperty, level: number): number {\n    const nChannels = property.values.length / property.zoomLevels.length;\n    const interpolant = new interpolants[property.interpolationMode](\n        property.zoomLevels,\n        property.values,\n        nChannels\n    );\n    if (\n        property.interpolationMode === InterpolationMode.Exponential &&\n        property.exponent !== undefined\n    ) {\n        (interpolant as ExponentialInterpolant).exponent = property.exponent;\n    }\n    interpolant.evaluate(level);\n\n    assert(nChannels === 3 || nChannels === 4);\n    // ColorUtils.getHexFromRgba() does not clamp the values which may be out of\n    // color channels range (0 <= c <= 1) after interpolation.\n    if (nChannels === 4) {\n        return ColorUtils.getHexFromRgba(\n            THREE.Math.clamp(interpolant.resultBuffer[0], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[1], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[2], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[3], 0, 1)\n        );\n    } else {\n        return ColorUtils.getHexFromRgb(\n            THREE.Math.clamp(interpolant.resultBuffer[0], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[1], 0, 1),\n            THREE.Math.clamp(interpolant.resultBuffer[2], 0, 1)\n        );\n    }\n}\n\n/**\n * Convert JSON representation of interpolated property to internal, normalized version that\n * can be evaluated by [[getPropertyValue]].\n */\nexport function createInterpolatedProperty(\n    prop: InterpolatedPropertyDefinition<unknown>\n): InterpolatedProperty | undefined {\n    removeDuplicatePropertyValues(prop);\n\n    const interpolationMode =\n        prop.interpolation !== undefined\n            ? InterpolationMode[prop.interpolation]\n            : InterpolationMode.Discrete;\n\n    const zoomLevels = new Float32Array(prop.zoomLevels);\n\n    const firstValue = prop.values[0];\n    switch (typeof firstValue) {\n        default:\n        case \"number\":\n        case \"boolean\":\n            return {\n                interpolationMode,\n                zoomLevels,\n                values: new Float32Array(prop.values as any),\n                exponent: prop.exponent\n            };\n        case \"string\":\n            // TODO: Minimize effort for pre-matching the numeral format.\n            const matchedFormat = StringEncodedNumeralFormats.find(format =>\n                format.regExp.test(firstValue)\n            );\n\n            if (matchedFormat === undefined) {\n                if (interpolationMode === InterpolationMode.Discrete) {\n                    return {\n                        interpolationMode,\n                        zoomLevels,\n                        values: prop.values\n                    };\n                }\n\n                logger.error(`No StringEncodedNumeralFormat matched ${firstValue}.`);\n                return undefined;\n            }\n\n            let needsMask = false;\n\n            const propValues = new Float32Array(prop.values.length * matchedFormat.size);\n            const maskValues = new Float32Array(prop.values.length);\n            needsMask = procesStringEnocodedNumeralInterpolatedProperty(\n                matchedFormat,\n                prop as InterpolatedPropertyDefinition<string>,\n                propValues,\n                maskValues\n            );\n\n            return {\n                interpolationMode,\n                zoomLevels,\n                values: propValues,\n                exponent: prop.exponent,\n                _stringEncodedNumeralType: matchedFormat.type,\n                _stringEncodedNumeralDynamicMask: needsMask ? maskValues : undefined\n            };\n    }\n}\n\nfunction removeDuplicatePropertyValues<T>(p: InterpolatedPropertyDefinition<T>) {\n    const eps = 0.001;\n\n    // detect cubic interpolations and remove stops\n    // closer than `eps`, this is needed to avoid\n    // possible NaN generated by the cubic interpolator.\n    const isCubic = p.interpolation === \"Cubic\";\n\n    for (let i = 0; i < p.values.length; ++i) {\n        const firstIdx = p.zoomLevels.findIndex(a => {\n            return isCubic ? Math.abs(a - p.zoomLevels[i]) < eps : a === p.zoomLevels[i];\n        });\n        if (firstIdx !== i) {\n            p.zoomLevels.splice(--i, 1);\n            p.values.splice(--i, 1);\n        }\n    }\n}\n\nfunction procesStringEnocodedNumeralInterpolatedProperty(\n    baseFormat: StringEncodedNumeralFormat,\n    prop: InterpolatedPropertyDefinition<string>,\n    propValues: Float32Array,\n    maskValues: Float32Array\n): boolean {\n    let needsMask = false;\n    const allowedValueFormats =\n        baseFormat.type === StringEncodedNumeralType.Meters ||\n        baseFormat.type === StringEncodedNumeralType.Pixels\n            ? StringEncodedMetricFormats\n            : StringEncodedColorFormats;\n\n    for (let valueIdx = 0; valueIdx < prop.values.length; ++valueIdx) {\n        let matched = false;\n        for (const valueFormat of allowedValueFormats) {\n            const value = prop.values[valueIdx];\n            matched = valueFormat.decoder(value, tmpBuffer);\n            if (!matched) {\n                continue;\n            }\n\n            if (valueFormat.mask !== undefined) {\n                maskValues[valueIdx] = valueFormat.mask;\n                needsMask = true;\n            }\n\n            for (let i = 0; i < valueFormat.size; ++i) {\n                propValues[valueIdx * valueFormat.size + i] = tmpBuffer[i];\n            }\n            break;\n        }\n        if (!matched) {\n            throw Error(\n                `Not all interpolation values match the same format: ${JSON.stringify(prop)}`\n            );\n        }\n    }\n\n    return needsMask;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinates } from \"./GeoCoordinates\";\n\nimport * as THREE from \"three\";\n\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nexport class GeoBox {\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    static fromCoordinates(southWest: GeoCoordinates, northEast: GeoCoordinates): GeoBox {\n        return new GeoBox(southWest, northEast);\n    }\n\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    constructor(readonly southWest: GeoCoordinates, readonly northEast: GeoCoordinates) {}\n\n    /**\n     * Returns the minimum altitude or `undefined`.\n     */\n    get minAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.min(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the maximum altitude or `undefined`.\n     */\n    get maxAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.max(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the south latitude in degrees of this `GeoBox`.\n     */\n    get south(): number {\n        return this.southWest.latitude;\n    }\n\n    /**\n     * Returns the north altitude in degrees of this `GeoBox`.\n     */\n    get north(): number {\n        return this.northEast.latitude;\n    }\n\n    /**\n     * Returns the west longitude in degrees of this `GeoBox`.\n     */\n    get west(): number {\n        return this.southWest.longitude;\n    }\n\n    /**\n     * Returns the east longitude in degrees of this `GeoBox`.\n     */\n    get east(): number {\n        return this.northEast.longitude;\n    }\n\n    /**\n     * Returns the center of this `GeoBox`.\n     */\n    get center(): GeoCoordinates {\n        const latitude = (this.south + this.north) * 0.5;\n        const { west, east } = this;\n        const { minAltitude, altitudeSpan } = this;\n\n        let altitude: number | undefined;\n\n        if (minAltitude !== undefined && altitudeSpan !== undefined) {\n            altitude = minAltitude + altitudeSpan * 0.5;\n        }\n\n        if (west < east) {\n            return new GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n        }\n\n        let longitude = (360 + east + west) * 0.5;\n\n        if (longitude > 360) {\n            longitude -= 360;\n        }\n\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns the latitude span in radians.\n     */\n    get latitudeSpanInRadians(): number {\n        return THREE.Math.degToRad(this.latitudeSpan);\n    }\n\n    /**\n     * Returns the longitude span in radians.\n     */\n    get longitudeSpanInRadians(): number {\n        return THREE.Math.degToRad(this.longitudeSpan);\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     */\n    get latitudeSpan(): number {\n        return this.north - this.south;\n    }\n\n    get altitudeSpan(): number | undefined {\n        if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n            return undefined;\n        }\n        return this.maxAltitude - this.minAltitude;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     */\n    get longitudeSpan(): number {\n        let width = this.northEast.longitude - this.southWest.longitude;\n\n        if (width < 0) {\n            width += 360;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     * @deprecated Use [[latitudeSpan]] instead.\n     */\n    get latitudeSpanInDegrees(): number {\n        return this.latitudeSpan;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     * @deprecated Use [[longitudeSpan]] instead.\n     */\n    get longitudeSpanInDegrees(): number {\n        return this.longitudeSpan;\n    }\n\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point The geo coordinates.\n     */\n    contains(point: GeoCoordinates): boolean {\n        if (\n            point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined\n        ) {\n            return this.containsHelper(point);\n        }\n\n        const isFlat = this.minAltitude === this.maxAltitude;\n        const isSameAltitude = this.minAltitude === point.altitude;\n        const isWithinAltitudeRange =\n            this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n\n        return false;\n    }\n\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    clone(): GeoBox {\n        return new GeoBox(this.southWest, this.northEast);\n    }\n\n    /**\n     * Update the bounding box by considering a given point.\n     *\n     * @param point The point that may expand the bounding box.\n     */\n    growToContain(point: GeoCoordinates) {\n        this.southWest.latitude = Math.min(this.southWest.latitude, point.latitude);\n        this.southWest.longitude = Math.min(this.southWest.longitude, point.longitude);\n        this.southWest.altitude =\n            this.southWest.altitude !== undefined && point.altitude !== undefined\n                ? Math.min(this.southWest.altitude, point.altitude)\n                : this.southWest.altitude !== undefined\n                ? this.southWest.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n\n        this.northEast.latitude = Math.max(this.northEast.latitude, point.latitude);\n        this.northEast.longitude = Math.max(this.northEast.longitude, point.longitude);\n        this.northEast.altitude =\n            this.northEast.altitude !== undefined && point.altitude !== undefined\n                ? Math.max(this.northEast.altitude, point.altitude)\n                : this.northEast.altitude !== undefined\n                ? this.northEast.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n    }\n\n    private containsHelper(point: GeoCoordinates): boolean {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n\n        const { west, east } = this;\n\n        if (east > west) {\n            return point.longitude >= west && point.longitude < east;\n        }\n\n        return point.longitude > east || point.longitude <= west;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class EarthConstants {\n    /** The equatorial circumference in meters. */\n    static EQUATORIAL_CIRCUMFERENCE: number = 40075016.6855784861531768177614;\n\n    /** The equatorial radius in meters. */\n    static EQUATORIAL_RADIUS: number = 6378137.0;\n\n    /** The lowest point on earth (Dead Sea) in meters. */\n    static MIN_ELEVATION: number = -433.0;\n\n    /** The highest point on earth (Mt. Everest) in meters. */\n    static MAX_ELEVATION: number = 8848.0;\n\n    /** The highest artificial structure (building) on earth, Burj Khalifa tower in Dubai */\n    static MAX_BUILDING_HEIGHT: number = 828;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { FlatTileBoundingBoxGenerator } from \"./FlatTileBoundingBoxGenerator\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TileKeyUtils } from \"./TileKeyUtils\";\nimport { TileTreeTraverse } from \"./TileTreeTraverse\";\n\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nexport class TilingScheme {\n    readonly boundingBoxGenerator: FlatTileBoundingBoxGenerator;\n    readonly tileTreeTraverse: TileTreeTraverse;\n\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme The subdivision scheme used by this `TilingScheme`.\n     * @param projection The projection used by this `TilingScheme`.\n     */\n    constructor(readonly subdivisionScheme: SubdivisionScheme, readonly projection: Projection) {\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse(subdivisionScheme);\n    }\n\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey The [[TileKey]].\n     * @returns The list of the sub tile keys.\n     */\n    getSubTileKeys(tileKey: TileKey): Iterable<TileKey> {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    }\n\n    /**\n     * Gets the [[TileKey]] from the given geo position and level.\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKey(geoPoint: GeoCoordinatesLike, level: number): TileKey | null {\n        return TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    }\n\n    /**\n     * Gets the list of [[TileKey]]s contained in the given [[GeoBox]].\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKeys(geoBox: GeoBox, level: number): TileKey[] {\n        return TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * @param tileKey The `TileKey`.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    }\n\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey The `TileKey`.\n     * @param result The optional object that will contain the resulting bounding box.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Value } from \"@here/harp-datasource-protocol/index-decoder\";\n\n/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\nexport enum FeatureModifierId {\n    /**\n     * Identifier to use the OmvTomTomFeatureModifier in the OmvDecoder.\n     */\n    tomTom\n}\n\n/**\n * Definition of a filter.\n */\nexport interface OmvFilterString {\n    /**  String value */\n    value: string;\n    /** Match condition */\n    match: OmvFilterString.StringMatch;\n}\n\n/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\nexport namespace OmvFilterString {\n    /**\n     * Match condition.\n     */\n    export enum StringMatch {\n        /** Matches any. */\n        Any,\n        /** Exact match. */\n        Match,\n        /** Matches if a test string starts with a filter string. */\n        StartsWith,\n        /** Matches if a test string contains a filter string. */\n        Contains,\n        /** Matches if a test string ends with a filter string. */\n        EndsWith\n    }\n\n    /**\n     * Check for a string against a filter.\n     *\n     * @param str The string to check against a filter.\n     * @param filterString The filter containing the match condition.\n     * @returns `true` if the match condition is satisfied.\n     */\n    export function matchString(str: string, filterString: OmvFilterString): boolean {\n        switch (filterString.match) {\n            case OmvFilterString.StringMatch.Any:\n                return true;\n            case OmvFilterString.StringMatch.Match:\n                return str === filterString.value;\n            case OmvFilterString.StringMatch.StartsWith:\n                return filterString.value.startsWith(str);\n            case OmvFilterString.StringMatch.EndsWith:\n                return filterString.value.endsWith(str);\n            default:\n                return str.indexOf(filterString.value) >= 0;\n        }\n    }\n}\n\n/**\n * Definition of a filter for a feature attribute\n */\nexport interface OmvFilterFeatureAttribute {\n    key: string;\n    value: Value;\n}\n\nexport enum OmvGeometryType {\n    UNKNOWN = 0,\n    POINT = 1,\n    LINESTRING = 2,\n    POLYGON = 3\n}\n\n/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvLayerFilterDescription {\n    name: OmvFilterString;\n    minLevel: number;\n    maxLevel: number;\n}\n\n/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFilterDescription {\n    layerName: OmvFilterString;\n    geometryTypes?: OmvGeometryType[];\n    classes?: OmvFilterString[];\n    minLevel: number;\n    maxLevel: number;\n    featureAttribute?: OmvFilterFeatureAttribute;\n}\n\n/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFeatureFilterDescription {\n    processLayersDefault: boolean;\n    processPointsDefault: boolean;\n    processLinesDefault: boolean;\n    processPolygonsDefault: boolean;\n\n    layersToProcess: OmvLayerFilterDescription[];\n    layersToIgnore: OmvLayerFilterDescription[];\n    pointsToProcess: OmvFilterDescription[];\n    pointsToIgnore: OmvFilterDescription[];\n    linesToProcess: OmvFilterDescription[];\n    linesToIgnore: OmvFilterDescription[];\n    polygonsToProcess: OmvFilterDescription[];\n    polygonsToIgnore: OmvFilterDescription[];\n\n    // enabledKinds and disabledKinds\n    kindsToProcess: string[];\n    kindsToIgnore: string[];\n}\n\n/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @hidden\n */\nexport interface OmvDecoderOptions {\n    /**\n     * If true, features that have no technique in the theme will be printed to the console (can be\n     * excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * Gather feature attributes from [[OmvData]]. Defaults to false.\n     */\n    gatherFeatureAttributes?: boolean;\n    createTileInfo?: boolean;\n    gatherRoadSegments?: boolean;\n\n    /**\n     * Optional storage level offset for [[Tile]]s. Default is -2.\n     */\n    storageLevelOffset?: number;\n\n    /**\n     * If not set to `false` very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter which can be safely passed down to the web workers.\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to\n     * guarantee the correctness).\n     */\n    filterDescription?: OmvFeatureFilterDescription | null;\n\n    /**\n     * Identifier used to choose OmvFeatureModifier, if undefined [[OmvGenericFeatureModifier]] is\n     * used.\n     */\n    featureModifierId?: FeatureModifierId;\n\n    enableElevationOverlay?: boolean;\n}\n\n/**\n * Default OMV tile decoder service type.\n *\n * Used for requesting decoder services using [[WorkerServiceManager]].\n */\nexport const OMV_TILE_DECODER_SERVICE_TYPE = \"omv-tile-decoder\";\n\n/**\n * Default OMV tiler service type.\n *\n * Used for requesting tiler services using [[WorkerServiceManager]].\n */\nexport const OMV_TILER_SERVICE_TYPE = \"omv-tiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nconst SHIFT_TRANSPARENCY: number = 24;\nconst SHIFT_RED: number = 16;\nconst SHIFT_GREEN: number = 8;\nconst SHIFT_BLUE: number = 0;\n\n// tslint:disable: no-bitwise\n//    Allow bitwise operations for colors decoding\n\n// tslint:disable-next-line: no-bitwise\nconst HEX_FULL_CHANNEL: number = 0xff;\nconst HEX_RGB_MASK: number = 0xffffff;\nconst HEX_TRGB_MASK: number = 0xffffffff;\n\nconst tmpColor = new THREE.Color();\n\n/**\n * Utilities to convert RGBA colors encoded in custom number (hex) format to THREE.Color objects.\n *\n * The functions provided allows for conversion from and to our custom number based color format,\n * which contains transparency, red, green and blue color channels in a way that each channel\n * occupies 8 bits of resulting number (color format 0xTTRRGGBB).\n * In order to preserve compatibility with THREE.Color class and its hexadecimal color\n * representation, we do not store __alpha__ channel in encoded color's number, but replace it\n * with __transparency__ channel, which is simply opposite to alpha:\n * ```transparency = 0xFF - alpha```\n * Such channel value is stored on the oldest bits (octet) in the integral color (numeric) value,\n * so it is fully compatible with THREE.Color numerical representation (@see [[THREE.Color.getHex]],\n * [[THREE.Color.setHex]]).\n * See also [[getHexFromRgba]] and [[getRgbaFromHex]] for more info about conversion.\n */\nexport namespace ColorUtils {\n    /**\n     * Encodes RGBA channels in custom number coded format (represented in hex as 0xTTRRGGBB).\n     *\n     * We do not use direct alpha channel mapping to hex in order to preserve compatibility\n     * with THREE.js color format (0xRRGGBB). This is done by encoding transparency\n     * (255 - alpha) instead of alpha on the oldest bits, shifted by [[SHIFT_TRANSPARENCY]].\n     * This way simple 0xRRGGBB color is equal to 0x00RRGGBB without transparency and\n     * color defining transparency (alpha < 255) is always recognizable by the oldest\n     * bit set:\n     * ```typescript\n     * (color >> SHIFT_TRANSPARENCY) !== 0.\n     * ```\n     * @note All input components are floating points in <0, 1> range (inclusively).\n     * @note Although method encodes transparency channel in single number value, it is still\n     * compatible with THREE.js number based color coding (0xRRGGBB), so you may pass this value to\n     * [[THREE.Color]] c-tor, but keep in mind that transparency will be silently ignored.\n     */\n    export function getHexFromRgba(r: number, g: number, b: number, a: number): number {\n        assert(a >= 0 && a <= 1);\n        const t = HEX_FULL_CHANNEL - Math.floor(a * HEX_FULL_CHANNEL);\n        return (\n            (t << SHIFT_TRANSPARENCY) ^\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encodes RGB all color channels in single number with format 0xRRGGBB.\n     *\n     * All input channels should be in <0, 1> range (inclusively).\n     * See also [[getHexFromRgba]] for more information about [[THREE.Color]] compatibility.\n     *\n     * @note This method is fully compatible with THREE.js color encoding, so\n     * you may pass this value directly to THREE.Color c-tor.\n     */\n    export function getHexFromRgb(r: number, g: number, b: number): number {\n        assert(r >= 0 && r <= 1);\n        assert(g >= 0 && g <= 1);\n        assert(b >= 0 && b <= 1);\n        return (\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encode and convert HSL value to number coded color format (0xRRGGBB).\n     *\n     * @see getHexFromRgb.\n     * @param h Hue component value between 0 and 1.\n     * @param s Saturation value between 0 and 1.\n     * @param l Lightness channel between 0 and 1.\n     */\n    export function getHexFromHsl(h: number, s: number, l: number): number {\n        assert(h >= 0 && h <= 1);\n        assert(s >= 0 && s <= 1);\n        assert(l >= 0 && l <= 1);\n        return tmpColor.setHSL(h, s, l).getHex();\n    }\n\n    /**\n     * Retrieve RGBA channels separately from number encoded custom color format.\n     *\n     * Provides an easy way for channels extraction (r, g, b, a) from custom number coded color\n     * format.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns r, g, b, a channels in simple object, where each channel value is saved as floating\n     * point from 0 to 1 inclusively.\n     */\n    export function getRgbaFromHex(hex: number): { r: number; g: number; b: number; a: number } {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format: #\" + hex.toString(16));\n        return {\n            r: ((hex >> SHIFT_RED) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            g: ((hex >> SHIFT_GREEN) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            b: ((hex >> SHIFT_BLUE) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            a:\n                (HEX_FULL_CHANNEL - ((hex >> SHIFT_TRANSPARENCY) & HEX_FULL_CHANNEL)) /\n                HEX_FULL_CHANNEL\n        };\n    }\n\n    /**\n     * Determines if number encoded color contains alpha (opacity) defined and different then 255.\n     *\n     * @param hex The number encoded color (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns True if color has transparency defined.\n     */\n    export function hasAlphaInHex(hex: number): boolean {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format: #\" + hex.toString(16));\n        return hex >> SHIFT_TRANSPARENCY !== 0;\n    }\n\n    /**\n     * Retrieves alpha color channel from hex encoded color value.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns The floating point alpha component in <0, 1> range.\n     */\n    export function getAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format: #\" + hex.toString(16));\n        return (\n            ((HEX_FULL_CHANNEL - (hex >> SHIFT_TRANSPARENCY)) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL\n        );\n    }\n\n    /**\n     * Remove transparency info from the number coded color, makes it compatible with external libs.\n     *\n     * @see getAlphaFromHex.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns number coded color value representable as 0xRRGGBB in hex.\n     */\n    export function removeAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format: #\" + hex.toString(16));\n        return hex & HEX_RGB_MASK;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { StringEncodedNumeralType } from \"./StringEncodedNumeral\";\n\n/**\n * Interpolation mode used when computing a [[InterpolatedProperty]] value for a given zoom level.\n */\nexport enum InterpolationMode {\n    Discrete,\n    Linear,\n    Cubic,\n    Exponential\n}\n\n/**\n * Interpolated property could have its value (some initial value should be provided) changed\n * according to an interpolation type.\n *\n * Here is an example of an interpolated property from a map style:\n * \"lineWidth\": {\n *  \"interpolation\": \"Linear\",\n *  \"zoomLevels\": [13, 14, 15],\n *  \"values\": [ 1.5, 1.2, 0.9]\n * }\n */\nexport interface InterpolatedPropertyDefinition<T> {\n    interpolation?: \"Discrete\" | \"Linear\" | \"Cubic\" | \"Exponential\";\n    zoomLevels: number[];\n    values: T[];\n    exponent?: number;\n}\n\n/**\n * Property which value is interpolated across different zoom levels.\n */\nexport interface InterpolatedProperty {\n    /**\n     * Interpolation mode that should be used for this property.\n     */\n    interpolationMode: InterpolationMode;\n\n    /**\n     * Zoom level keys array.\n     */\n    zoomLevels: Float32Array;\n\n    /**\n     * Property values array.\n     */\n    values: ArrayLike<any>;\n\n    /**\n     * Exponent used in interpolation. Only valid with `Exponential` [[InterpolationMode]].\n     */\n    exponent?: number;\n\n    /**\n     * @hidden\n     * [[StringEncodedNumeral]] type needed to interpret interpolated values back to numbers.\n     */\n    _stringEncodedNumeralType?: StringEncodedNumeralType;\n\n    /**\n     * @hidden\n     * Array of `0` and `1`mask values used to modify the interpolation behaviour of some\n     * [[StringEncodedNumeral]]s.\n     */\n    _stringEncodedNumeralDynamicMask?: Float32Array;\n}\n\n/**\n * Converts an [[InterpolatedPropertyDefinition]] to a [[JsonExpr]].\n *\n * @param property A valid [[InterpolatedPropertyDefinition]]\n */\nexport function interpolatedPropertyDefinitionToJsonExpr(\n    property: InterpolatedPropertyDefinition<any>\n): JsonExpr {\n    if (property.interpolation === undefined || property.interpolation === \"Discrete\") {\n        const step: JsonExpr = [\"step\", [\"zoom\"], property.values[0]];\n        for (let i = 1; i < property.zoomLevels.length; ++i) {\n            step.push(property.zoomLevels[i], property.values[i]);\n        }\n        return step;\n    }\n    const interpolation: JsonExpr = [\"interpolate\"];\n    switch (property.interpolation) {\n        case \"Linear\":\n            interpolation.push([\"linear\"]);\n            break;\n        case \"Cubic\":\n            interpolation.push([\"cubic\"]);\n            break;\n        case \"Exponential\":\n            interpolation.push([\n                \"exponential\",\n                property.exponent !== undefined ? property.exponent : 2\n            ]);\n            break;\n        default:\n            throw new Error(`interpolation mode '${property.interpolation}' is not supported`);\n    } //switch\n    interpolation.push([\"zoom\"]);\n    for (let i = 0; i < property.zoomLevels.length; ++i) {\n        interpolation.push(property.zoomLevels[i], property.values[i]);\n    }\n    return interpolation;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass MercatorProjection extends Projection {\n    protected static clamp(val: number, min: number, max: number): number {\n        return Math.min(Math.max(min, val), max);\n    }\n\n    protected static latitudeClamp(latitude: number): number {\n        return MercatorProjection.clamp(\n            latitude,\n            -MercatorConstants.MAXIMUM_LATITUDE,\n            MercatorConstants.MAXIMUM_LATITUDE\n        );\n    }\n\n    private static latitudeProject(latitude: number): number {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    }\n\n    private static latitudeClampProject(latitude: number): number {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    }\n\n    private static unprojectLatitude(y: number): number {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / this.unitScale - 0.5));\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        result.y =\n            (MercatorProjection.latitudeClampProject(geoPoint.latitudeInRadians) * 0.5 + 0.5) *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            MercatorProjection.unprojectLatitude((worldPoint.y / this.unitScale - 0.5) * 2.0),\n            (worldPoint.x / this.unitScale) * 2 * Math.PI - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(geoBox.center);\n        const worldNorth =\n            (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldSouth =\n            (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldYCenter = (worldNorth + worldSouth) * 0.5;\n\n        worldCenter.y = worldYCenter;\n\n        const latitudeSpan = worldNorth - worldSouth;\n        const longitudeSpan = (geoBox.longitudeSpan / 360) * this.unitScale;\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - longitudeSpan * 0.5;\n            result.min.y = worldCenter.y - latitudeSpan * 0.5;\n            result.max.x = worldCenter.x + longitudeSpan * 0.5;\n            result.max.y = worldCenter.y + latitudeSpan * 0.5;\n            const altitudeSpan = geoBox.altitudeSpan;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = longitudeSpan * 0.5;\n            result.extents.y = latitudeSpan * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (geoBox.altitudeSpan || 0) * 0.5);\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        // this implementation of [[reprojectPoint]] supports both\n        // [[WebMercatorProjection]] and [[MercatorProjection]]. The only\n        // difference betweeen these two variants of WEB Mercator\n        // is in the orientation of the Y axis, so we just flip Y coordinates\n        // when reprojecting between them.\n        if (\n            sourceProjection !== this &&\n            (sourceProjection === webMercatorProjection || sourceProjection === mercatorProjection)\n        ) {\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = worldPos.x;\n            result.y = this.unitScale - worldPos.y;\n            result.z = worldPos.z;\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n}\n\nclass WebMercatorProjection extends MercatorProjection {\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        /*\n         * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n         * might be a concrete class which is not available at runtime.\n         * Consider the following example:\n         *\n         *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n         *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n         *\n         * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n         */\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        const sy = Math.sin(MercatorProjection.latitudeClamp(geoPoint.latitudeInRadians));\n        result.y = (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) * this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const x = worldPoint.x / this.unitScale - 0.5;\n        const y = 0.5 - worldPoint.y / this.unitScale;\n\n        const longitude = 360 * x;\n        const latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n\n        return new GeoCoordinates(latitude, longitude, worldPoint.z);\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const r = super.projectBox(geoBox, result);\n        if (isBox3Like(r)) {\n            // Invert the y axis for web mercator, this means that max => min & min => max\n            const maxY = r.max.y;\n            r.max.y = this.unitScale - r.min.y;\n            r.min.y = this.unitScale - maxY;\n        } else if (isOrientedBox3Like(r)) {\n            MathUtils.newVector3(1, 0, 0, r.xAxis);\n            MathUtils.newVector3(0, -1, 0, r.yAxis);\n            MathUtils.newVector3(0, 0, -1, r.zAxis);\n            r.position.y = this.unitScale - r.position.y;\n        }\n        return r;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = new GeoBox(\n            new GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude),\n            new GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude)\n        );\n        return geoBox;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, -1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, -1, result.zAxis);\n        return result;\n    }\n}\n\nexport class MercatorConstants {\n    // Math.atan(Math.sinh(Math.PI))\n    static readonly MAXIMUM_LATITUDE: number = 1.4844222297453323;\n}\n\n/**\n * Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const mercatorProjection: Projection = new MercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n\n/**\n * Web Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const webMercatorProjection: Projection = new WebMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass QuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(): number {\n        return 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n}\n\n/**\n * [[SubdivisionScheme]] representing a quadtree.\n */\nexport const quadTreeSubdivisionScheme: SubdivisionScheme = new QuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @hidden */\nconst powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x4000000000000,\n    0x8000000000000,\n    0x10000000000000 // Math.pow(2, 52), highest bit that can be set correctly.\n];\n\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nexport class TileKey {\n    /**\n     * Creates a tile key.\n     *\n     * @param row The requested row. Must be less than 2 to the power of level.\n     * @param column The requested column. Must be less than 2 to the power of level.\n     * @param level The requested level.\n     */\n    static fromRowColumnLevel(row: number, column: number, level: number): TileKey {\n        return new TileKey(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromQuadKey(quadkey: string): TileKey {\n        const level = quadkey.length;\n        let row = 0;\n        let column = 0;\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < quadkey.length; ++i) {\n            const mask = 1 << i;\n            const d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 The Morton code to be converted.\n     * @returns A new instance of [[TileKey]].\n     */\n    static fromMortonCode(quadKey64: number): TileKey {\n        let level = 0;\n        let row = 0;\n        let column = 0;\n        let quadKey = quadKey64;\n        // tslint:disable:no-bitwise\n        while (quadKey > 1) {\n            const mask: number = 1 << level;\n\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        // tslint:enable:no-bitwise\n        const result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    }\n\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromHereTile(quadkey64: string): TileKey {\n        const result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    }\n\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    static columnsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    static rowsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level The level for the tile key.\n     * @param coordX The X coordinate.\n     * @param coordY The Y coordinate.\n     * @param totalWidth The maximum X coordinate.\n     * @param totalHeight The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    static atCoords(\n        level: number,\n        coordX: number,\n        coordY: number,\n        totalWidth: number,\n        totalHeight: number\n    ): TileKey {\n        return TileKey.fromRowColumnLevel(\n            Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))),\n            Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))),\n            level\n        );\n    }\n\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    static parentMortonCode(mortonCode: number): number {\n        return Math.floor(mortonCode / 4);\n    }\n\n    private m_mortonCode?: number;\n    private m_hereTile?: string;\n\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, [[TileKey.fromRowColumnLevel]] should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row Represents the row in the quadtree.\n     * @param column Represents the column in the quadtree.\n     * @param level Represents the level in the quadtree.\n     */\n    constructor(readonly row: number, readonly column: number, readonly level: number) {}\n\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    parent(): TileKey {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        // tslint:disable-next-line:no-bitwise\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    }\n\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta The numeric difference between the current level and the requested level.\n     */\n    changedLevelBy(delta: number): TileKey {\n        const level = Math.max(0, this.level + delta);\n        let row = this.row;\n        let column = this.column;\n\n        // tslint:disable:no-bitwise\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        } else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level The requested level.\n     */\n    changedLevelTo(level: number): TileKey {\n        return this.changedLevelBy(level - this.level);\n    }\n\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    mortonCode(): number {\n        if (this.m_mortonCode === undefined) {\n            let column = this.column;\n            let row = this.row;\n\n            // tslint:disable:no-bitwise\n            let result = powerOfTwo[this.level << 1];\n            for (let i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n            // tslint:enable:no-bitwise\n\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    toHereTile(): string {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    toQuadKey(): string {\n        let result: string = \"\";\n\n        // tslint:disable:no-bitwise\n        for (let i = this.level; i > 0; --i) {\n            const mask = 1 << (i - 1);\n\n            const col = (this.column & mask) !== 0;\n            const row = (this.row & mask) !== 0;\n\n            if (col && row) {\n                result += \"3\";\n            } else if (row) {\n                result += \"2\";\n            } else if (col) {\n                result += \"1\";\n            } else {\n                result += \"0\";\n            }\n        }\n        // tslint:enable:no-bitwise\n\n        return result;\n    }\n\n    /**\n     * Equality operator.\n     *\n     * @param qnr The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    equals(qnr: TileKey): boolean {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubKey(sub: string): TileKey {\n        const subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubHereTile(sub: string): TileKey {\n        const subQuad = TileKey.fromHereTile(sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta The number of levels relative to its parent quadkey. Must be greater or equal to\n     * 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    getSubHereTile(delta: number): string {\n        const key = this.mortonCode();\n        // tslint:disable-next-line:no-bitwise\n        const msb = 1 << (delta * 2);\n        const mask = msb - 1;\n        // tslint:disable-next-line:no-bitwise\n        const result = (key & mask) | msb;\n        return result.toString();\n    }\n\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    rowCount(): number {\n        return TileKey.rowsAtLevel(this.level);\n    }\n\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    columnCount(): number {\n        return TileKey.columnsAtLevel(this.level);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"WorkerService\", { enabled: false });\n\ndeclare let self: Worker;\n\n/**\n * Response for [[WorkerService]] procession results.\n */\nexport interface WorkerServiceResponse {\n    /**\n     * Response object.\n     */\n    response: any;\n\n    /**\n     * Transfer list containing a list of [[ArrayBuffer]] which transfer ownership from web worker\n     * to UI thread.\n     */\n    transferList?: ArrayBuffer[];\n}\n\n/**\n * Header information for a [[RequestMessage]].\n */\ninterface RequestEntry {\n    /**\n     * ID of service.\n     */\n    service: string;\n\n    /**\n     * Unique ID of message.\n     */\n    messageId: number;\n\n    /**\n     * Contains `true` if message has been processed, and response has been sent.\n     */\n    responseSent: boolean;\n}\n\n/**\n * Worker Service communication helper.\n *\n * Listens to Web Worker messages from [[ConcurrentWorkerSet]] and implements:\n *  - worker service initialization\n *  - request/response scheme\n *  - error handling.\n *\n * This class should be subclassed to provide concrete like [[TileDecoderService]].\n *\n * Communication peer for [[ConcurrentWorkerSet]].\n */\nexport abstract class WorkerService {\n    private m_pendingRequests: Map<number, RequestEntry> = new Map();\n\n    /**\n     * Sets up the `WorkerService` with the specified name, and starts processing messages.\n     *\n     * @param serviceId The service id.\n     */\n    constructor(readonly serviceId: string) {\n        self.addEventListener(\"message\", this.onMessage);\n\n        const isInitializedMessage: WorkerServiceProtocol.InitializedMessage = {\n            service: serviceId,\n            type: WorkerServiceProtocol.ServiceMessageName.Initialized\n        };\n        self.postMessage(isInitializedMessage);\n    }\n\n    /**\n     * Destroy the `WorkerService`. Cancels all pending requests ad removes itself from the message\n     * queue.\n     */\n    destroy() {\n        this.cancelAllPendingRequests();\n\n        self.removeEventListener(\"message\", this.onMessage);\n    }\n\n    /**\n     * Message handler to be overridden by implementation.\n     *\n     * @param message `MessageEvent.data` as received by `WorkerService`.\n     */\n    protected handleMessage(message: any): void {\n        logger.error(`[${this.serviceId}]: Invalid message ${message.type}`);\n    }\n\n    /**\n     * Call request handler to be overridden by implementation.\n     *\n     * @param request [[RequestMessage.request]] as received by `WorkerService`.\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        throw new Error(`ServiceAdapter[${this.serviceId}]: Invalid request '${request.type}'`);\n    }\n\n    /**\n     * Central message handler for this service.\n     *\n     * Responsible for filtering message target and managing request/response sequence.\n     *\n     * @param message Message to be dispatched.\n     */\n    private onMessage = (message: MessageEvent) => {\n        if (typeof message.data.service !== \"string\" || message.data.service !== this.serviceId) {\n            return;\n        }\n\n        try {\n            if (WorkerServiceProtocol.isRequestMessage(message.data)) {\n                const request = message.data;\n                const requestEntry = {\n                    service: request.service,\n                    messageId: request.messageId,\n                    responseSent: false\n                };\n                this.m_pendingRequests.set(request.messageId, requestEntry);\n                this.tryHandleRequest(request.request)\n                    .then(response => {\n                        this.doSendResponse(\n                            requestEntry,\n                            {\n                                service: this.serviceId,\n                                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                                messageId: request.messageId,\n                                response: response.response\n                            },\n                            response.transferList\n                        );\n                    })\n                    .catch(error => {\n                        this.doSendResponse(requestEntry, {\n                            service: this.serviceId,\n                            type: WorkerServiceProtocol.ServiceMessageName.Response,\n                            messageId: request.messageId,\n                            errorMessage: error.toString(),\n                            errorStack: error.stack\n                        });\n                    });\n            } else {\n                this.tryHandleMessage(message.data);\n            }\n        } catch (err) {\n            logger.error(`[${this.serviceId}]: Unhandled exception when handling ${message.type}`);\n        }\n    };\n\n    /**\n     * Safety belt over [[handleMessage]] for correct exception handling & logging.\n     */\n    private tryHandleMessage(message: any): void {\n        try {\n            this.handleMessage(message);\n        } catch (error) {\n            logger.error(`[${this.serviceId}]: Failed, handling message ${message.type}`);\n        }\n    }\n\n    /**\n     * Safety belt over [[handleRequest]] for correct exception handling in promise chain.\n     */\n    private tryHandleRequest(request: any): Promise<WorkerServiceResponse> {\n        try {\n            return this.handleRequest(request);\n        } catch (error) {\n            // we don't log exceptions here as they are propagated to client as responses\n            logger.error(`[${this.serviceId}]: Failure`, error);\n            return Promise.reject(error);\n        }\n    }\n\n    private doSendResponse(\n        requestEntry: RequestEntry,\n        response: WorkerServiceProtocol.ResponseMessage,\n        transferList?: ArrayBuffer[]\n    ) {\n        if (requestEntry.responseSent) {\n            return;\n        }\n\n        if (transferList !== undefined) {\n            self.postMessage(response, transferList);\n        } else {\n            self.postMessage(response);\n        }\n\n        requestEntry.responseSent = true;\n        this.m_pendingRequests.delete(requestEntry.messageId);\n    }\n\n    private cancelAllPendingRequests() {\n        this.m_pendingRequests.forEach(requestEntry => {\n            this.doSendResponse(requestEntry, {\n                service: this.serviceId,\n                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                messageId: requestEntry.messageId,\n                errorMessage: \"cancelled\"\n            });\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { EarthConstants, webMercatorProjection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { OmvDecoder } from \"./OmvDecoder\";\nimport { VTJsonDataAdapterId } from \"./VTJsonDataAdapter\";\n\n/**\n * @hidden\n */\nexport function isArrayBufferLike(data: any): data is ArrayBufferLike {\n    if (typeof SharedArrayBuffer !== \"undefined\") {\n        return data instanceof ArrayBuffer || data instanceof SharedArrayBuffer;\n    } else {\n        return data instanceof ArrayBuffer;\n    }\n}\n\n/**\n * @hidden\n */\nexport function lat2tile(\n    lat: number,\n    zoom: number,\n    func: (x: number) => number = Math.floor\n): number {\n    return func(\n        ((1 -\n            Math.log(Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)) /\n                Math.PI) /\n            2) *\n            Math.pow(2, zoom)\n    );\n}\n\n/**\n * @hidden\n */\nexport function tile2lat(y: number, level: number): number {\n    const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, level);\n    return (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\nexport interface WorldTileProjectionCookie {\n    extents: number;\n    top: number;\n    left: number;\n    scale: number;\n}\n\nexport function createWorldTileTransformationCookie(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo\n) {\n    const { north, west } = decodeInfo.geoBox;\n    const N = Math.log2(extents);\n    const scale = Math.pow(2, decodeInfo.tileKey.level + N);\n    return {\n        extents,\n        scale,\n        top: lat2tile(\n            north,\n            decodeInfo.tileKey.level + N,\n            decodeInfo.adapterId === VTJsonDataAdapterId ? Math.round : Math.floor\n        ),\n        left: ((west + 180) / 360) * scale\n    };\n}\n\n/**\n * @hidden\n */\nexport function tile2world(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        ((left + position.x) / scale) * R,\n        ((top + (flipY ? -position.y : position.y)) / scale) * R\n    );\n}\n\n/**\n * @hidden\n */\nexport function world2tile(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        (position.x / R) * scale - left,\n        (flipY ? -1 : 1) * ((position.y / R) * scale - top)\n    );\n}\n\nconst tempWorldPos = new THREE.Vector2();\n\nexport function webMercatorTile2TargetWorld(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    const worldPos = tile2world(extents, decodeInfo, position, flipY, tempWorldPos);\n    target.set(worldPos.x, worldPos.y, 0);\n    decodeInfo.targetProjection.reprojectPoint(webMercatorProjection, target, target);\n}\n\nexport function webMercatorTile2TargetTile(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    webMercatorTile2TargetWorld(extents, decodeInfo, position, target, flipY);\n    target.sub(decodeInfo.center);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ExtendedTileInfo,\n    GeometryKind,\n    IndexedTechnique,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { MapEnv, StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    GeoBox,\n    OrientedBox3,\n    Projection,\n    TileKey,\n    TilingScheme,\n    webMercatorTilingScheme\n} from \"@here/harp-geoutils\";\nimport {\n    ThemedTileDecoder,\n    TileDecoderService,\n    WorkerServiceManager\n} from \"@here/harp-mapview-decoder/index-worker\";\nimport { LoggerManager, PerformanceTimer } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// tslint:disable-next-line:max-line-length\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvProtobufDataAdapter } from \"./OmvData\";\nimport {\n    ComposedDataFilter,\n    OmvFeatureFilter,\n    OmvFeatureModifier,\n    OmvGenericFeatureFilter,\n    OmvGenericFeatureModifier\n} from \"./OmvDataFilter\";\nimport { OmvDecodedTileEmitter } from \"./OmvDecodedTileEmitter\";\nimport {\n    FeatureModifierId,\n    OMV_TILE_DECODER_SERVICE_TYPE,\n    OmvDecoderOptions,\n    OmvFeatureFilterDescription\n} from \"./OmvDecoderDefs\";\nimport { OmvTileInfoEmitter } from \"./OmvTileInfoEmitter\";\nimport { OmvTomTomFeatureModifier } from \"./OmvTomTomFeatureModifier\";\nimport { WorldTileProjectionCookie } from \"./OmvUtils\";\nimport { StyleSetDataFilter } from \"./StyleSetDataFilter\";\nimport { VTJsonDataAdapter } from \"./VTJsonDataAdapter\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecoder\", { enabled: false });\n\nexport class Ring {\n    readonly winding: boolean;\n\n    /**\n     * Constructs a new [[Ring]].\n     *\n     * @param extents The extents of the enclosing layer.\n     * @param vertexStride The stride of this elements stored in 'contour'.\n     * @param contour The [[Array]] containing the projected world coordinates.\n     */\n    constructor(\n        readonly extents: number,\n        readonly vertexStride: number,\n        readonly contour: number[]\n    ) {\n        this.winding = this.area() < 0;\n    }\n\n    area(): number {\n        const points = this.contour;\n        const stride = this.vertexStride;\n        const n = points.length / stride;\n\n        let area = 0.0;\n\n        for (let p = n - 1, q = 0; q < n; p = q++) {\n            area +=\n                points[p * stride] * points[q * stride + 1] -\n                points[q * stride] * points[p * stride + 1];\n        }\n\n        return area / 2;\n    }\n}\n\nexport interface IOmvEmitter {\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        feature: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        feature: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n}\n\n/**\n * The class [[OmvDataAdapter]] prepares protobuf encoded OMV data so they\n * can be processed by [[OmvDecoder]].\n */\nexport interface OmvDataAdapter {\n    /**\n     * OmvDataAdapter's id.\n     */\n    id: string;\n\n    /**\n     * Checks if the given data can be processed by this OmvDataAdapter.\n     *\n     * @param data The raw data to adapt.\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean;\n\n    /**\n     * Process the given raw data.\n     *\n     * @param data The raw data to process.\n     * @param tileKey The TileKey of the enclosing Tile.\n     * @param geoBox The GeoBox of the enclosing Tile.\n     */\n    process(data: ArrayBufferLike | {}, tileKey: TileKey, geoBox: GeoBox): void;\n}\n\nexport class OmvDecoder implements IGeometryProcessor {\n    // The emitters are both optional now.\n    // TODO: Add option to control emitter generation.\n    private m_decodedTileEmitter: OmvDecodedTileEmitter | undefined;\n    private m_infoTileEmitter: OmvTileInfoEmitter | undefined;\n    private readonly m_dataAdapters: OmvDataAdapter[] = [];\n\n    constructor(\n        private readonly m_projection: Projection,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_showMissingTechniques: boolean,\n        private readonly m_dataFilter?: OmvFeatureFilter,\n        private readonly m_featureModifier?: OmvFeatureModifier,\n        private readonly m_gatherFeatureAttributes = false,\n        private readonly m_createTileInfo = false,\n        private readonly m_gatherRoadSegments = false,\n        private readonly m_skipShortLabels = true,\n        private readonly m_storageLevelOffset = 0,\n        private readonly m_enableElevationOverlay = false,\n        private readonly m_languages?: string[]\n    ) {\n        const styleSetDataFilter = new StyleSetDataFilter(m_styleSetEvaluator);\n        const dataPreFilter = m_dataFilter\n            ? new ComposedDataFilter([styleSetDataFilter, m_dataFilter])\n            : styleSetDataFilter;\n        // Register the default adapters.\n        this.m_dataAdapters.push(new OmvProtobufDataAdapter(this, dataPreFilter, logger));\n        this.m_dataAdapters.push(new VTJsonDataAdapter(this, dataPreFilter, logger));\n    }\n\n    get storageLevelOffset() {\n        return this.m_storageLevelOffset;\n    }\n\n    /**\n     * Given a tile and a protobuffer, it returns a decoded tile and it creates the geometries that\n     * belong to it.\n     *\n     * @param tileKey The tile to be decoded.\n     * @param data The protobuffer to decode from.\n     * @returns A [[DecodedTile]]\n     */\n    getDecodedTile(tileKey: TileKey, data: ArrayBufferLike | {}): DecodedTile {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return {\n                techniques: [],\n                geometries: []\n            };\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const tileSizeOnScreen = this.estimatedTileSizeOnScreen();\n        const decodeInfo = new OmvDecoder.DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            tileSizeOnScreen\n        );\n\n        this.m_decodedTileEmitter = new OmvDecodedTileEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            this.m_gatherFeatureAttributes,\n            this.m_skipShortLabels,\n            this.m_enableElevationOverlay,\n            this.m_languages\n        );\n        if (this.m_createTileInfo) {\n            const storeExtendedTags = true;\n            this.m_infoTileEmitter = new OmvTileInfoEmitter(\n                decodeInfo,\n                this.m_styleSetEvaluator,\n                storeExtendedTags,\n                this.m_gatherRoadSegments\n            );\n        }\n\n        dataAdapter.process(data, tileKey, decodeInfo.geoBox);\n        const decodedTile = this.m_decodedTileEmitter.getDecodedTile();\n\n        if (this.m_createTileInfo) {\n            decodedTile.tileInfo = this.m_infoTileEmitter!.getTileInfo();\n        }\n\n        return decodedTile;\n    }\n\n    getTileInfo(tileKey: TileKey, data: ArrayBufferLike | {}): ExtendedTileInfo {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return new ExtendedTileInfo(tileKey, false);\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const tileSizeOnScreen = this.estimatedTileSizeOnScreen();\n        const decodeInfo = new OmvDecoder.DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            tileSizeOnScreen\n        );\n\n        const storeExtendedTags = true;\n        this.m_infoTileEmitter = new OmvTileInfoEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            storeExtendedTags,\n            this.m_gatherRoadSegments\n        );\n\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                adapter.process(data, tileKey, decodeInfo.geoBox);\n                break;\n            }\n        }\n\n        return this.m_infoTileEmitter.getTileInfo();\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPointFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"point\"),\n            GeometryKind.Label\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPointFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessLineFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"line\"),\n            GeometryKind.Line\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processLineFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPolygonFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"polygon\"),\n            GeometryKind.Area\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPolygonFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    /**\n     * Estimate the number of screen pixels a tile will cover. The actual number of pixels will be\n     * influenced by tilt and rotation, so estimated the number here should be an upper bound.\n     *\n     * @returns {number} Estimated number of screen pixels.\n     */\n    protected estimatedTileSizeOnScreen(): number {\n        const tileSizeOnScreen = 256 * Math.pow(2, -this.m_storageLevelOffset);\n        return tileSizeOnScreen;\n    }\n\n    private getZoomLevel(storageLevel: number) {\n        return Math.max(0, storageLevel - (this.m_storageLevelOffset || 0));\n    }\n\n    private applyKindFilter(\n        techniques: IndexedTechnique[],\n        defaultKind: GeometryKind\n    ): IndexedTechnique[] {\n        if (this.m_dataFilter !== undefined && this.m_dataFilter.hasKindFilter) {\n            techniques = techniques.filter(technique => {\n                return technique.kind === undefined\n                    ? this.m_dataFilter!.wantsKind(defaultKind)\n                    : this.m_dataFilter!.wantsKind(technique.kind as GeometryKind);\n            });\n        }\n        return techniques;\n    }\n}\n\nexport namespace OmvDecoder {\n    export class DecodeInfo {\n        /**\n         * The [[GeoBox]] of the Tile to decode.\n         */\n        readonly geoBox: GeoBox;\n\n        readonly projectedBoundingBox = new OrientedBox3();\n\n        /**\n         * The tile bounds in the OMV tile space [[webMercatorTilingScheme]].\n         */\n        readonly tileBounds = new THREE.Box3();\n\n        /**\n         * The tile size in the OMV tile space [[webMercatorTilingScheme]].\n         */\n        readonly tileSize = new THREE.Vector3();\n\n        /**\n         * The center of the Tile in the target [[Projection]] space.\n         * Geometries generated by decoding the OMV tile must be relative\n         * to this position.\n         */\n        readonly center = new THREE.Vector3();\n\n        /**\n         * The tile bounds in the world space of the\n         * target projection [[DecodeInfo.targetProjection]].\n         *\n         * @deprecated\n         */\n        readonly projectedTileBounds = new THREE.Box3();\n\n        worldTileProjectionCookie?: WorldTileProjectionCookie;\n\n        /**\n         * Constructs a new [[DecodeInfo]].\n         *\n         * @param adapterId The id of the [[OmvDataAdapter]] used for decoding.\n         * @param targetProjection The [[Projection]]\n         * @param tileKey The [[TileKey]] of the Tile to decode.\n         * @param tileSizeOnScreen The estimated size of the Tile in pixels.\n         */\n        constructor(\n            readonly adapterId: string,\n            readonly targetProjection: Projection,\n            readonly tileKey: TileKey,\n            readonly tileSizeOnScreen: number\n        ) {\n            this.geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n            this.targetProjection.projectBox(this.geoBox, this.projectedTileBounds);\n\n            this.targetProjection.projectBox(this.geoBox, this.projectedBoundingBox);\n            this.projectedBoundingBox.getCenter(this.center);\n\n            this.tilingScheme.getWorldBox(tileKey, this.tileBounds);\n            this.tileBounds.getSize(this.tileSize);\n        }\n\n        /**\n         * The [[TilingScheme]] of the OMV data, currenly it is defined\n         * to be [[webMercatorTilingScheme]].\n         */\n        get tilingScheme(): TilingScheme {\n            return webMercatorTilingScheme;\n        }\n\n        /**\n         * The [[Projection]] of OMV tiled data, currenly it is defined\n         * to be [[webMercatorProjection]].\n         */\n        get sourceProjection(): Projection {\n            return this.tilingScheme.projection;\n        }\n    }\n}\n\nexport class OmvTileDecoder extends ThemedTileDecoder {\n    private m_showMissingTechniques: boolean = false;\n    private m_featureFilter?: OmvFeatureFilter;\n    private m_featureModifier?: OmvFeatureModifier;\n    private m_gatherFeatureAttributes: boolean = false;\n    private m_createTileInfo: boolean = false;\n    private m_gatherRoadSegments: boolean = false;\n    private m_skipShortLabels: boolean = true;\n    private m_enableElevationOverlay: boolean = false;\n\n    /** @override */\n    connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    /** @override */\n    decodeThemedTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        const startTime = PerformanceTimer.now();\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifier,\n            this.m_gatherFeatureAttributes,\n            this.m_createTileInfo,\n            this.m_gatherRoadSegments,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const decodedTile = decoder.getDecodedTile(tileKey, data);\n\n        decodedTile.decodeTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(decodedTile);\n    }\n\n    /** @override */\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        const startTime = PerformanceTimer.now();\n\n        const styleSetEvaluator = this.m_styleSetEvaluator;\n        if (styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"no theme loaded\"));\n        }\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifier,\n            this.m_gatherFeatureAttributes,\n            this.m_createTileInfo,\n            this.m_gatherRoadSegments,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const tileInfo = decoder.getTileInfo(tileKey, data);\n\n        tileInfo.setupTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(tileInfo);\n    }\n\n    /** @override */\n    configure(\n        styleSet: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        super.configure(styleSet, definitions, languages, options);\n\n        if (options) {\n            const omvOptions = options as OmvDecoderOptions;\n\n            if (omvOptions.showMissingTechniques !== undefined) {\n                this.m_showMissingTechniques = omvOptions.showMissingTechniques === true;\n            }\n\n            if (omvOptions && omvOptions.filterDescription !== undefined) {\n                if (omvOptions.filterDescription !== null) {\n                    // create new filter/modifier from description\n                    this.m_featureFilter = new OmvGenericFeatureFilter(\n                        omvOptions.filterDescription\n                    );\n                    this.m_featureModifier = this.createFeatureModifier(\n                        omvOptions.filterDescription,\n                        omvOptions.featureModifierId\n                    );\n                } else {\n                    // null is the signal to clear the filter/modifier\n                    this.m_featureFilter = undefined;\n                    this.m_featureModifier = undefined;\n                }\n            }\n\n            if (omvOptions.gatherFeatureAttributes !== undefined) {\n                this.m_gatherFeatureAttributes = omvOptions.gatherFeatureAttributes === true;\n            }\n            if (omvOptions.createTileInfo !== undefined) {\n                this.m_createTileInfo = omvOptions.createTileInfo === true;\n            }\n            if (omvOptions.gatherRoadSegments !== undefined) {\n                this.m_gatherRoadSegments = omvOptions.gatherRoadSegments === true;\n            }\n            if (omvOptions.skipShortLabels !== undefined) {\n                this.m_skipShortLabels = omvOptions.skipShortLabels;\n            }\n            if (omvOptions.enableElevationOverlay !== undefined) {\n                this.m_enableElevationOverlay = omvOptions.enableElevationOverlay;\n            }\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n    }\n\n    private createFeatureModifier(\n        filterDescription: OmvFeatureFilterDescription,\n        featureModifierId?: FeatureModifierId\n    ): OmvFeatureModifier {\n        if (featureModifierId === FeatureModifierId.tomTom) {\n            return new OmvTomTomFeatureModifier(filterDescription);\n        } else {\n            return new OmvGenericFeatureModifier(filterDescription);\n        }\n    }\n}\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTileDecoderService {\n    /**\n     * Register[[OmvTileDecoder]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILE_DECODER_SERVICE_TYPE,\n            factory: (serviceId: string) =>\n                TileDecoderService.start(serviceId, new OmvTileDecoder())\n        });\n    }\n}\n\n/**\n * Starts an OMV decoder service.\n *\n * @deprecated Please use [[OmvTileDecoderService.start]].\n */\nexport default class OmvWorkerClient {\n    // TODO(HARP-3651): remove this class when clients are ready\n    constructor() {\n        logger.warn(\"OmvWorkerClient class is deprecated, please use OmvTileDecoderService.start\");\n        OmvTileDecoderService.start();\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Enum log levels\n */\nexport enum LogLevel {\n    Trace,\n    Debug,\n    Log,\n    Info,\n    Warn,\n    Error\n}\n\n/**\n * Logger options to configure logger\n */\nexport class LoggerOptions {\n    enabled?: boolean;\n    level?: LogLevel;\n}\n\n/**\n * Public interface for Logger class.\n */\nexport interface ILogger extends IChannel {\n    readonly name: string;\n\n    enabled: boolean;\n\n    level: LogLevel;\n\n    /**\n     * Update logger options\n     *\n     * @param  {LoggerOptions} options Set logger options and configure internal logger.\n     */\n    update(options: LoggerOptions): void;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Resolve URI of referenced object w.r.t parent URI.\n *\n * Resolves `childUri` as it would be loaded from location specified by `parentUri`.\n *\n * If `childUri` is absolute, then it is returned unchanged.\n * If `childUri` is origin-absolute path, then only origin path is taken from `parentUri`.\n *\n * See [[baseUri]] for reference how base URL of `parentUri` is determined.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUri URI of parent resource\n * @param childUri URI of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nexport function resolveReferenceUri(parentUri: string | undefined, childUri: string): string {\n    if (absoluteUrlWithOriginRe.test(childUri)) {\n        return childUri;\n    } else if (childUri.startsWith(\"/\")) {\n        const origin = getUrlOrigin(parentUri);\n        return origin + childUri;\n    } else {\n        if (childUri.startsWith(\"./\")) {\n            childUri = childUri.substr(2);\n        }\n        const parentBaseUrl = baseUrl(parentUri);\n        return parentBaseUrl + childUri;\n    }\n}\n\nconst absoluteUrlWithOriginRe = new RegExp(\"^(?:[a-z]+:)?//\", \"i\");\n\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nexport function baseUrl(url: string | undefined) {\n    if (url === undefined) {\n        return \"./\";\n    }\n    let idx = url.indexOf(\"#\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.indexOf(\"?\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    } else {\n        return url.substring(0, idx + 1);\n    }\n}\n\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url input URL\n * @return origin of given URL\n */\nexport function getUrlOrigin(url: string | undefined): string {\n    if (url === undefined) {\n        return \"\";\n    }\n    const parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    } else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    } else if (parsed.host) {\n        return \"//\" + parsed.host;\n    } else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    } else {\n        return \"\";\n    }\n}\n\n/**\n * Parse `host` and `protocol` part from URL.\n */\nexport function getUrlHostAndProtocol(\n    url: string\n): {\n    protocol: string;\n    host: string;\n} {\n    const urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n\n    const match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(`getUrlHostAndProtocol: unable to parse URL '${url}'`);\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils/lib/math/Vector3Like\";\nimport { JsonExpr } from \"./Expr\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    DynamicProperty,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams\n} from \"./TechniqueParams\";\n\n/**\n * Map theme is used to define what features are shown and how the map is styled, for example\n * which lightning is used or whether fog should be displayed.\n */\nexport interface Theme {\n    /**\n     * The URI of the JSON schema describing themes.\n     */\n    $schema?: string;\n\n    /**\n     * The base `Theme`s or `theme` URLs to extend.\n     *\n     * If used, base themes are loaded first, and then all the properties from inherited theme\n     * overwrite these defined in base theme.\n     */\n    extends?: string | Theme | Array<string | Theme>;\n\n    /**\n     * Actual URL the theme has been loaded from.\n     */\n    url?: string;\n\n    /**\n     * Color to be used as a clear background - no map objects.\n     * @format color-hex\n     */\n    clearColor?: string;\n\n    /**\n     * Define the default text style for styling labels and texts.\n     */\n    defaultTextStyle?: TextStyleDefinition;\n\n    /**\n     * Define the lightning available on the three.js scene.\n     */\n    lights?: Light[];\n\n    /**\n     * Define the style of the sky presented in the map scene.\n     */\n    sky?: Sky;\n\n    /**\n     * Define the fog used in the map scene.\n     */\n    fog?: Fog;\n\n    /**\n     * The definitions exported by these theme.\n     */\n    definitions?: Definitions;\n\n    /**\n     * Map styles available for datasources used to render the map.\n     */\n    styles?: Styles;\n\n    /**\n     * Define the style to render different types of text used on the map.\n     */\n    textStyles?: TextStyleDefinition[];\n\n    /**\n     * List available fonts to be used while rendering text.\n     */\n    fontCatalogs?: FontCatalogConfig[];\n\n    /**\n     * Optional images to be rendered on the map view.\n     */\n    images?: ImageDefinitions;\n\n    /**\n     * Image textures to be used while rendering geometries on the map view.\n     */\n    imageTextures?: ImageTexture[];\n\n    /**\n     * Optional list of [[ThemePoiTableDef]]s.\n     */\n    poiTables?: PoiTableRef[];\n}\n\n/**\n * An array of [[Definition]]s.\n */\nexport interface Definitions {\n    [name: string]: Definition;\n}\n\n/**\n * A value definition.\n */\nexport type ValueDefinition =\n    | BooleanValueDefinition\n    | NumericValueDefinition\n    | StringValueDefinition\n    | ColorValueDefinition\n    | SelectorValueDefinition;\n\n/**\n * Checks if the given definition implements the [[ValueDefinition]] interface.\n */\nexport function isValueDefinition(def: Definition): def is ValueDefinition {\n    const valueDef = def as ValueDefinition;\n    return (\n        typeof valueDef === \"object\" &&\n        valueDef !== null &&\n        typeof valueDef.type === \"string\" &&\n        valueDef.value !== undefined\n    );\n}\n\nexport function isSelectorDefinition(def: Definition): def is SelectorValueDefinition {\n    const valueDef = def as ValueDefinition;\n    return (\n        typeof valueDef === \"object\" &&\n        valueDef !== null &&\n        valueDef.type === \"selector\" &&\n        (typeof valueDef.value === \"string\" || Array.isArray(valueDef.value))\n    );\n}\n\n/**\n * Value definition commons.\n */\nexport interface BaseValueDefinition {\n    /**\n     * The description of the definition.\n     */\n    description?: string;\n}\n\n/**\n * A boolean value definition.\n */\nexport interface BooleanValueDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"boolean\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<boolean>;\n}\n\n/**\n * A numerical value definition.\n */\nexport interface NumericValueDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"number\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<number>;\n}\n\n/**\n * A string value definition.\n */\nexport interface StringValueDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"string\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A color value definition.\n */\nexport interface ColorValueDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"color\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\nexport interface SelectorValueDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"selector\";\n\n    /**\n     * The value of the definition.\n     *\n     * See [[BaseStyle.when]].\n     */\n    value: string | JsonExpr;\n}\n\n/**\n * Base [StyleSelector] attributes required to match [Style] object against given feature.\n *\n * Contains [Style]'s members related to feature matching in [[StyleSetEvaluator]].\n */\nexport interface StyleSelector {\n    /**\n     * Condition that is applied to feature properties to check if given [[Style]] this feature\n     * should emit geometry of this style.\n     *\n     * Conditions are defined using [[Array]]s describing literals, built-in symbols and function\n     * calls:\n     *  - `[\"has\", string]` returns `true` if the given property exists.\n     *  - `[\"get\", string]` returns the value of the given feature property with the given name.\n     *  - `[\"all\", expressions...]` returns `true` if all the sub expressions evaluate to true.\n     *  - `[\"any\", expressions...]` returns `true` if any sub expression evaluates to true.\n     *  - `[\"in\", expression, [literals...]]` returns `true` if the result of evaluating the first\n     *    expression is included in the given `Array` of literals.\n     *  - `[\"!\", expression]` returns `false` if the sub expression evaluates to `true`.\n     *  - `[\"<\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than the result of evaluating the second expression.\n     *  - `[\">\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than the result of evaluating the second expression.\n     *  - `[\"<=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than or equal the result of evaluating the second expression.\n     *  - `[\">=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than or equal the result of evaluating the second expression.\n     *  - `[\"==\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is equal the result of evaluating the second expression.\n     *  - `[\"!=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is not equal to the result of evaluating the second expression.\n     *  - `[\"length\", expression]` returns the length of the given expression if it evaluates to\n     *    a `string` or an `Array`; otherwise, returns `undefined`.\n     *  - `[\"~=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression contains the `string` obtained from the\n     *    second expression; otherwise, returns `undefined`.\n     *  - `[\"^=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression starts with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     *  - `[\"$=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression ends with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     */\n    when: string | JsonExpr;\n\n    /**\n     * The layer containing the carto features processed by this style rule.\n     */\n    layer?: string;\n\n    /**\n     * Optional. If `true`, no more matching styles will be evaluated.\n     */\n    final?: boolean;\n}\n\nexport type JsonExprReference = [\"ref\", string];\n\n/**\n * Checks if the given value is a reference to a definition.\n *\n * @param value The value of a technique property.\n */\nexport function isJsonExprReference(value: any): value is JsonExprReference {\n    return (\n        Array.isArray(value) &&\n        value.length === 2 &&\n        value[0] === \"ref\" &&\n        typeof value[1] === \"string\"\n    );\n}\n\n/**\n * Like [[StyleDeclaration]], but without [[Reference]] type.\n */\nexport type ResolvedStyleDeclaration = Style & StyleSelector;\n\n/**\n * Like [[StyleSet]], but without [[Reference]] type.\n */\nexport type ResolvedStyleSet = ResolvedStyleDeclaration[];\n\n/**\n * Compound type that merges all raw [Style] with selector arguments from [BaseSelector], optionally\n * a [[Reference]].\n */\nexport type StyleDeclaration = (Style & StyleSelector) | JsonExpr;\n\nexport function isActualSelectorDefinition(def: Definition): def is Style & StyleSelector {\n    const styleDef = def as StyleDeclaration;\n    return (\n        typeof styleDef === \"object\" &&\n        styleDef !== null &&\n        !Array.isArray(styleDef) &&\n        typeof styleDef.technique === \"string\"\n    );\n}\n\n/**\n * An array of [[StyleSelector]]s that are used together to define how a [[DataSource]] should be\n * rendered. `StyleSet`s are applied to sources providing vector tiles via their method\n * `setStyleSet`. This is also handle internally when a whole theme is passed to a [[MapView]] via\n * `mapview.theme`.\n */\nexport type StyleSet = StyleDeclaration[];\n\n/**\n * The object that defines what way an item of a [[DataSource]] should be decoded to assemble a\n * tile. [[Style]] is describing which features are shown on a map and in what way they are being\n * shown.\n */\nexport interface BaseStyle {\n    /**\n     * Human readable description.\n     */\n    description?: string;\n\n    /**\n     * Technique name. See the classes extending from this class to determine what possible\n     * techniques are possible, includes `\"line\"`, `\"fill\"`, `\"solid-line\"`, `\"extruded-line\"`,\n     * `\"extruded-polygon\"`, `\"text\"`, `\"none\"`.\n     */\n    technique?: string;\n\n    /**\n     * Specify `renderOrder` of value.\n     *\n     * @default If not specified in style file, `renderOrder` will be assigned with monotonically\n     * increasing values according to style position in file.\n     */\n    renderOrder?: number | JsonExpr;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number | JsonExpr;\n\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number | JsonExpr;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this style creates. Default is\n     * `false`.\n     */\n    transient?: boolean;\n\n    /**\n     * Optional: If `true`, the objects with matching `when` statement will be printed to the\n     * console.\n     */\n    debug?: boolean;\n\n    // TODO: Make pixel units default.\n    /**\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     *\n     * @deprecated use \"string encoded numerals\" as documented in TODO, wher eis the doc ?\n     */\n    metricUnit?: \"Meter\" | \"Pixel\";\n\n    /**\n     * XYZ defines the property to display as text label of a feature in the styles.\n     */\n    labelProperty?: string;\n}\n\n/**\n *\n * @defaultSnippets [\n *     {\n *         \"label\": \"New solid-line\",\n *         \"description\": \"Add a new 'solid-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"secondaryColor\": \"#$4ddd\",\n *                 \"secondaryWidth\": \"^${5:2}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New dashed-line\",\n *         \"description\": \"Add a new 'dashed-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"gapSize\": \"^${4:10}\",\n *                 \"dashSize\": \"^${5:10}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New fill\",\n *         \"description\": \"Add a new 'fill' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"fill\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:0}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New text\",\n *         \"description\": \"Add a new 'text' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"text\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New labeled-icon\",\n *         \"description\": \"Add a new 'labeled-icon' marker styling\",\n *         \"body\": {\n *             \"technique\": \"labeled-icon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line-marker\",\n *         \"description\": \"Add a new 'line-marker' marker styling\",\n *         \"body\": {\n *             \"technique\": \"line-marker\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line\",\n *         \"description\": \"Add a new 'line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New segments\",\n *         \"description\": \"Add a new 'segments' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"segments\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New standard\",\n *         \"description\": \"Add a new 'standard' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"standard\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-line\",\n *         \"description\": \"Add a new 'extruded-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"shading\": \"${2:standard}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"lineWidth\": \"^${4:1}\",\n *                 \"caps\": \"${5:Circle}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-polygon\",\n *         \"description\": \"Add a new 'extruded-polygon' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-polygon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\",\n *                 \"lineWidth\": \"^${7:1}\",\n *                 \"lineColor\": \"#${8:c0f}\",\n *                 \"defaultHeight\": \"^${9:20}\",\n *                 \"animateExtrusion\": \"^${10:true}\",\n *                 \"animateExtrusionDuration\": \"^${11:300}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New none\",\n *         \"description\": \"Add a new 'none' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"none\",\n *             \"when\": \"$1\",\n *             \"attr\": {}\n *         }\n *     },\n *     {\n *         \"label\": \"New shader\",\n *         \"description\": \"Add a new 'shader' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"shader\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"primitive\": \"${2:mesh}\",\n *                 \"params\": {}\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New squares\",\n *         \"description\": \"Add a new 'squares' point styling\",\n *         \"body\": {\n *             \"technique\": \"squares\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New circles\",\n *         \"description\": \"Add a new 'circles' point styling\",\n *         \"body\": {\n *             \"technique\": \"circles\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     }\n * ]\n *\n */\nexport type AllStyles =\n    | SquaresStyle\n    | CirclesStyle\n    | PoiStyle\n    | LineMarkerStyle\n    | LineStyle\n    | SegmentsStyle\n    | SolidLineStyle\n    | LabelRejectionLineStyle\n    | FillStyle\n    | StandardStyle\n    | BasicExtrudedLineStyle\n    | StandardExtrudedLineStyle\n    | ExtrudedPolygonStyle\n    | ShaderStyle\n    | TerrainStyle\n    | TextTechniqueStyle\n    | NoneStyle;\n\nexport type Style = AllStyles;\n/**\n * A dictionary of [[StyleSet]]s.\n */\nexport interface Styles {\n    [styleSetName: string]: StyleSet;\n}\n\n/**\n * Possible values for `definitions` element of [Theme].\n */\nexport type Definition = ValueDefinition | StyleDeclaration;\n\n/**\n * A reference to a style definition.\n *\n * Use as value `attrs` to reference value from `definitions`.\n *\n * Example of usage:\n * ```json\n * {\n *   \"definitions\": {\n *     \"roadColor\": { \"type\": \"color\", \"value\": \"#f00\" }\n *   },\n *   \"styles\": { \"tilezen\": [\n *      {\n *       \"when\": \"kind == 'road\",\n *       \"technique\": \"solid-line\",\n *       \"attr\": {\n *         \"lineColor\": { \"$ref\": \"roadColor\" }\n *       }\n *     }\n *   ] }\n * }\n * ```\n */\n\n/**\n * The attributes of a technique.\n */\nexport type Attr<T> = { [P in keyof T]?: T[P] | JsonExpr };\n\n/**\n * Render feature as set of squares rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface SquaresStyle extends BaseStyle {\n    technique: \"squares\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as set of circles rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface CirclesStyle extends BaseStyle {\n    technique: \"circles\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as POIs (icons and text) rendered in screen space.\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface PoiStyle extends BaseStyle {\n    technique: \"labeled-icon\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line markers, which is a recurring marker along a line (usually road).\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerStyle extends BaseStyle {\n    technique: \"line-marker\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line.\n */\nexport interface LineStyle extends BaseStyle {\n    technique: \"line\";\n    secondaryRenderOrder?: number;\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as segments.\n */\nexport interface SegmentsStyle extends BaseStyle {\n    technique: \"segments\";\n    attr?: Attr<SegmentsTechniqueParams>;\n}\n\nexport interface SolidLineStyle extends BaseStyle {\n    technique: \"solid-line\" | \"dashed-line\";\n    secondaryRenderOrder?: number;\n    attr?: Attr<SolidLineTechniqueParams>;\n}\n\nexport interface LabelRejectionLineStyle extends BaseStyle {\n    technique: \"label-rejection-line\";\n    attr?: Attr<BaseTechniqueParams>;\n}\n\nexport interface FillStyle extends BaseStyle {\n    technique: \"fill\";\n    attr?: Attr<FillTechniqueParams>;\n}\n\nexport interface StandardStyle extends BaseStyle {\n    technique: \"standard\";\n    attr?: Attr<StandardTechniqueParams>;\n}\n\nexport interface TerrainStyle extends BaseStyle {\n    technique: \"terrain\";\n    attr?: Attr<TerrainTechniqueParams>;\n}\n\nexport interface BasicExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading?: \"basic\";\n    attr?: Attr<BasicExtrudedLineTechniqueParams>;\n}\n\nexport interface StandardExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading: \"standard\";\n    attr?: Attr<StandardExtrudedLineTechniqueParams>;\n}\n\n/**\n * Style used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonStyle extends BaseStyle {\n    technique: \"extruded-polygon\";\n    attr?: Attr<ExtrudedPolygonTechniqueParams>;\n}\n\nexport interface ShaderStyle extends BaseStyle {\n    technique: \"shader\";\n    attr?: Attr<ShaderTechniqueParams>;\n}\n\nexport interface TextTechniqueStyle extends BaseStyle {\n    technique: \"text\";\n    attr?: Attr<TextTechniqueParams>;\n}\n\nexport interface NoneStyle extends BaseStyle {\n    technique: \"none\";\n    attr?: {\n        [name: string]: any;\n    };\n}\n\n/**\n * Possible lights used for light the map.\n */\nexport type Light = AmbientLight | DirectionalLight;\n\nexport interface BaseLight {\n    type: string;\n    name: string;\n}\n\n/**\n * Light type: ambient.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Ambient Light\",\n *         \"description\": \"Adds a new Ambient Light\",\n *         \"body\": {\n *             \"type\": \"ambient\",\n *             \"name\": \"${1:ambient light}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\"\n *         }\n *     }\n * ]\n */\nexport interface AmbientLight extends BaseLight {\n    type: \"ambient\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity?: number;\n}\n\n/**\n * Light type: directional.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Directional Light\",\n *         \"description\": \"Adds a new Directional Light\",\n *         \"body\": {\n *             \"type\": \"directional\",\n *             \"name\": \"${1:directional-light$:1}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\",\n *             \"direction\": {\n *                 \"x\": \"^${4:1}\",\n *                 \"y\": \"^${5:0}\",\n *                 \"z\": \"^${6:0}\"\n *             }\n *         }\n *     }\n * ]\n */\nexport interface DirectionalLight extends BaseLight {\n    type: \"directional\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity: number;\n    direction: Vector3Like;\n    castShadow?: boolean;\n}\n\n/**\n * Various text styles used with labels and texts.\n */\nexport interface TextStyleDefinition {\n    name?: string;\n    fontCatalogName?: string;\n\n    fontName?: string;\n    size?: number;\n    backgroundSize?: number;\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    rotation?: number;\n    /**\n     * @format color-hex\n     */\n    color?: string;\n    /**\n     * @format color-hex\n     */\n    backgroundColor?: string;\n    opacity?: number;\n    backgroundOpacity?: number;\n\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: \"None\" | \"Character\" | \"Word\";\n    hAlignment?: \"Left\" | \"Center\" | \"Right\";\n    vAlignment?: \"Above\" | \"Center\" | \"Below\";\n}\n\n/**\n * Interface that defines a procedural gradient sky.\n */\nexport interface GradientSky {\n    /** Sky type. */\n    type: \"gradient\";\n    /**\n     * Color of the upper part of the gradient.\n     * @format color-hex\n     */\n    topColor: string;\n    /**\n     * Color of bottom part of the gradient.\n     * @format color-hex\n     */\n    bottomColor: string;\n    /**\n     * Color of the ground plane.\n     * @format color-hex\n     */\n    groundColor: string;\n    /** Texture's gradient power. */\n    monomialPower?: number;\n}\n\n/**\n * Interface that defines a cubemap sky.\n */\nexport interface CubemapSky {\n    /** Sky type. */\n    type: \"cubemap\";\n    /** Positive X cube map face. */\n    positiveX: string;\n    /** Negative X cube map face. */\n    negativeX: string;\n    /** Positive Y cube map face. */\n    positiveY: string;\n    /** Negative Y cube map face. */\n    negativeY: string;\n    /** Positive Z cube map face. */\n    positiveZ: string;\n    /** Negative Z cube map face. */\n    negativeZ: string;\n}\n\n/**\n * Interface that defines the options to configure the sky.\n */\nexport type Sky = GradientSky | CubemapSky;\n\n/**\n * Interface that defines the options to configure fog.\n */\nexport interface Fog {\n    /** Fog's color. */\n    color: string;\n    /** Distance ratio to far plane at which the linear fog begins. */\n    startRatio: number;\n}\n\n/**\n * Define an image (e.g. icon).\n */\nexport interface ImageDefinition {\n    /** Url to load content from. */\n    url: string;\n    /** `true` to start loading at init tile, `false` to lazily wait until required. */\n    preload: boolean;\n    /** Url of JSON file containing the texture atlas */\n    atlas?: string;\n}\n\nexport interface ImageDefinitions {\n    /** Name of Image. */\n    [name: string]: ImageDefinition;\n}\n\n/**\n * Can be used to create a texture atlas.\n */\nexport interface ImageTexture {\n    /** Name of ImageTexture. Used to reference texture in the styles. */\n    name: string;\n    /** Name of ImageDefinition to use. */\n    image: string;\n    /** Origin of image, defaults to \"topleft\" */\n    origin?: string;\n    /** Specify sub-region: Defaults to 0. */\n    xOffset?: number;\n    /** Specify sub-region: Defaults to 0. */\n    yOffset?: number;\n    /** Specify sub-region:  Defaults to 0, meaning width is taken from loaded image. */\n    width?: number;\n    /** Specify sub-region:  Defaults to 0, meaning height is taken from loaded image. */\n    height?: number;\n    /** Defaults to false. */\n    flipH?: boolean;\n    /** Defaults to false. */\n    flipV?: boolean;\n    /** Defaults to 1. */\n    opacity?: number;\n}\n\n/**\n * Definition for a [[PoiTable]] reference as part of the [[Theme]] object.\n */\nexport interface PoiTableRef {\n    /** Required name of the [[PoiTable]] for later reference. */\n    name: string;\n    /**\n     * Required URL from where to load [[PoiTable]].\n     *\n     * Should refer to JSON that is matched [[PoiTableDef]] interface.\n     */\n    url: string;\n    /**\n     * If set to `true`, the list of values in the field \"altNames\" will be used as names for this\n     * POI.\n     */\n    useAltNamesForKey: boolean;\n}\n\n/**\n * Interface for the JSON description of the [[PoiTable]]. It is being implemented in [[PoiTable]].\n */\nexport interface PoiTableDef {\n    /** Name of the `PoiTable`. Must be unique. */\n    name?: string;\n    /**\n     * Stores the list of [[PoiTableEntry]]s.\n     */\n    poiList?: PoiTableEntryDef[];\n}\n\n/**\n * Interface for the JSON description of the [[PoiTableEntry]]. The interface is being implemented\n * as [[PoiTableEntry]].\n */\nexport interface PoiTableEntryDef {\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: string;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n}\n\n/**\n * Fonts used for all text related rendering.\n */\nexport interface FontCatalogConfig {\n    url: string;\n    name: string;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    isTextureBuffer,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    PolygonalTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams,\n    TextureCoordinateType\n} from \"./TechniqueParams\";\n\nimport { Expr, JsonExpr } from \"./Expr\";\nimport { InterpolatedProperty, InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    AttrScope,\n    mergeTechniqueDescriptor,\n    TechniqueDescriptor,\n    TechniqueDescriptorRegistry\n} from \"./TechniqueDescriptor\";\n/**\n * Names of the supported texture properties.\n */\nexport const TEXTURE_PROPERTY_KEYS = [\n    \"map\",\n    \"normalMap\",\n    \"displacementMap\",\n    \"roughnessMap\",\n    \"emissiveMap\",\n    \"alphaMap\",\n    \"metalnessMap\",\n    \"bumpMap\"\n];\n\n/**\n * Names of the properties controlling transparency.\n */\nexport const TRANSPARENCY_PROPERTY_KEYS = [\"opacity\", \"transparent\"];\n\n// TODO: Can be removed, when all when interpolators are implemented as [[Expr]]s\nexport type RemoveInterpolatedPropDef<T> = T | InterpolatedPropertyDefinition<any> extends T\n    ? Exclude<T, InterpolatedPropertyDefinition<any>>\n    : T;\nexport type RemoveJsonExpr<T> = T | JsonExpr extends T ? Exclude<T, JsonExpr> : T;\n\n/**\n * Make runtime representation of technique attributes from JSON-compatible typings.\n *\n * Translates\n *  - InterpolatedPropertyDefinition -> InterpolatedProperty\n *  - JsonExpr -> Expr\n */\nexport type MakeTechniqueAttrs<T> = {\n    [P in keyof T]: T[P] | JsonExpr extends T[P]\n        ? RemoveInterpolatedPropDef<RemoveJsonExpr<T[P]>> | Expr | InterpolatedProperty\n        : T[P];\n};\n\nexport const techniqueDescriptors: TechniqueDescriptorRegistry = {};\n\nexport const baseTechniqueParamsDescriptor: TechniqueDescriptor<BaseTechniqueParams> = {\n    // TODO: Choose which techniques should support color with transparency.\n    // For now we chosen all, but it maybe not suitable for text or line marker techniques.\n    attrTransparencyColor: \"color\",\n    attrScopes: {\n        renderOrder: AttrScope.TechniqueGeometry,\n        renderOrderOffset: AttrScope.TechniqueGeometry,\n        enabled: AttrScope.TechniqueGeometry,\n        kind: AttrScope.TechniqueGeometry,\n        transient: AttrScope.TechniqueGeometry,\n        fadeFar: AttrScope.TechniqueRendering,\n        fadeNear: AttrScope.TechniqueRendering\n    }\n};\n\nexport const pointTechniquePropTypes = mergeTechniqueDescriptor<PointTechniqueParams>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            texture: AttrScope.TechniqueGeometry,\n            enablePicking: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueGeometry\n        }\n    }\n);\n\n/**\n * Runtime representation of [[SquaresStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface SquaresTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"squares\";\n}\n\nexport const squaresTechniquePropTypes = mergeTechniqueDescriptor<SquaresTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.squares = squaresTechniquePropTypes;\n\n/**\n * Runtime representation of [[CirclesStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface CirclesTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"circles\";\n}\n\nexport const circlesTechniquePropTypes = mergeTechniqueDescriptor<CirclesTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.circles = circlesTechniquePropTypes;\n\n/**\n * Runtime representation of [[PoiStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface PoiTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"labeled-icon\";\n}\n\n/**\n * Runtime representation of [[LineMarkerStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"line-marker\";\n}\n\nconst lineMarkerTechniquePropTypes = mergeTechniqueDescriptor<LineMarkerTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            priority: AttrScope.TechniqueGeometry,\n            textMinZoomLevel: AttrScope.TechniqueGeometry,\n            textMaxZoomLevel: AttrScope.TechniqueGeometry,\n            iconMinZoomLevel: AttrScope.TechniqueGeometry,\n            iconMaxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            textMayOverlap: AttrScope.TechniqueGeometry,\n            iconMayOverlap: AttrScope.TechniqueGeometry,\n            textReserveSpace: AttrScope.TechniqueGeometry,\n            iconReserveSpace: AttrScope.TechniqueGeometry,\n            renderTextDuringMovements: AttrScope.TechniqueGeometry,\n            alwaysOnTop: AttrScope.TechniqueGeometry,\n            textIsOptional: AttrScope.TechniqueGeometry,\n            showOnMap: AttrScope.TechniqueGeometry,\n            stackMode: AttrScope.TechniqueGeometry,\n            minDistance: AttrScope.TechniqueGeometry,\n            iconIsOptional: AttrScope.TechniqueGeometry,\n            iconFadeTime: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            iconXOffset: AttrScope.TechniqueGeometry,\n            iconYOffset: AttrScope.TechniqueGeometry,\n            iconScale: AttrScope.TechniqueGeometry,\n            screenHeight: AttrScope.TechniqueGeometry,\n            screenWidth: AttrScope.TechniqueGeometry,\n            poiTable: AttrScope.TechniqueGeometry,\n            poiName: AttrScope.FeatureGeometry,\n            poiNameField: AttrScope.TechniqueGeometry,\n            imageTexture: AttrScope.FeatureGeometry,\n            imageTextureField: AttrScope.TechniqueGeometry,\n            imageTexturePrefix: AttrScope.TechniqueGeometry,\n            imageTexturePostfix: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"line-marker\"] = lineMarkerTechniquePropTypes;\ntechniqueDescriptors[\"labeled-icon\"] = lineMarkerTechniquePropTypes;\n\n/**\n * Runtime representation of [[SegmentsStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SegmentsTechniqueParams]].\n */\nexport interface SegmentsTechnique extends MakeTechniqueAttrs<SegmentsTechniqueParams> {\n    name: \"segments\";\n}\n\nconst polygonalTechniqueDescriptor: TechniqueDescriptor<PolygonalTechniqueParams> = {\n    attrScopes: {\n        polygonOffset: AttrScope.TechniqueRendering,\n        polygonOffsetFactor: AttrScope.TechniqueRendering,\n        polygonOffsetUnits: AttrScope.TechniqueRendering,\n        lineColor: AttrScope.TechniqueRendering,\n        lineFadeFar: AttrScope.TechniqueRendering,\n        lineFadeNear: AttrScope.TechniqueRendering\n    }\n};\n/**\n * Runtime representation of [[BasicExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[BasicExtrudedLineTechniqueParams]].\n */\nexport interface BasicExtrudedLineTechnique\n    extends MakeTechniqueAttrs<BasicExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[StandardExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[StandardExtrudedLineTechniqueParams]].\n */\nexport interface StandardExtrudedLineTechnique\n    extends MakeTechniqueAttrs<StandardExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[SolidLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SolidLineTechniqueParams]].\n */\nexport interface SolidLineTechnique extends MakeTechniqueAttrs<SolidLineTechniqueParams> {\n    name: \"solid-line\" | \"dashed-line\";\n}\n\nexport const solidLineTechniqueDescriptor = mergeTechniqueDescriptor<SolidLineTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            clipping: AttrScope.TechniqueGeometry,\n            secondaryRenderOrder: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            secondaryWidth: AttrScope.TechniqueRendering,\n            secondaryColor: AttrScope.TechniqueRendering,\n            dashSize: AttrScope.TechniqueRendering,\n            gapSize: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"solid-line\"] = solidLineTechniqueDescriptor;\n// TODO: Remove deprecated \"dashed-line\" support in future releases.\ntechniqueDescriptors[\"dashed-line\"] = solidLineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[LineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[LineTechniqueParams]].\n */\nexport interface LineTechnique extends MakeTechniqueAttrs<LineTechniqueParams> {\n    name: \"line\";\n}\n\nexport const lineTechniqueDescriptor = mergeTechniqueDescriptor<LineTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            // TODO, check, which are really dynamic !\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.FeatureGeometry\n        }\n    }\n);\n\ntechniqueDescriptors.line = lineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[FillStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[FillTechniqueParams]].\n */\nexport interface FillTechnique extends MakeTechniqueAttrs<FillTechniqueParams> {\n    name: \"fill\";\n}\n\nconst fillTechniqueDescriptor = mergeTechniqueDescriptor<FillTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.fill = fillTechniqueDescriptor;\n\n/**\n * Technique used to render a mesh geometry.\n * For technique parameters see [[StandardTechniqueParams]].\n */\nexport interface StandardTechnique extends MakeTechniqueAttrs<StandardTechniqueParams> {\n    name: \"standard\";\n}\nconst standardTechniqueDescriptor = mergeTechniqueDescriptor<StandardTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.FeatureGeometry,\n            vertexColors: AttrScope.FeatureGeometry,\n            wireframe: AttrScope.TechniqueRendering,\n            roughness: AttrScope.TechniqueRendering,\n            metalness: AttrScope.TechniqueRendering,\n            alphaTest: AttrScope.TechniqueRendering,\n            depthTest: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            emissive: AttrScope.TechniqueRendering,\n            emissiveIntensity: AttrScope.TechniqueRendering,\n            refractionRatio: AttrScope.TechniqueRendering,\n            map: AttrScope.TechniqueGeometry,\n            mapProperties: AttrScope.TechniqueGeometry,\n            normalMap: AttrScope.TechniqueGeometry,\n            normalMapProperties: AttrScope.TechniqueGeometry,\n            displacementMap: AttrScope.TechniqueGeometry,\n            displacementMapProperties: AttrScope.TechniqueGeometry,\n            roughnessMap: AttrScope.TechniqueGeometry,\n            roughnessMapProperties: AttrScope.TechniqueGeometry,\n            emissiveMap: AttrScope.TechniqueGeometry,\n            emissiveMapProperties: AttrScope.TechniqueGeometry,\n            bumpMap: AttrScope.TechniqueGeometry,\n            bumpMapProperties: AttrScope.TechniqueGeometry,\n            metalnessMap: AttrScope.TechniqueGeometry,\n            metalnessMapProperties: AttrScope.TechniqueGeometry,\n            alphaMap: AttrScope.TechniqueGeometry,\n            alphaMapProperties: AttrScope.TechniqueGeometry\n        }\n    }\n);\ntechniqueDescriptors.standard = standardTechniqueDescriptor;\n\n/**\n * Runtime representation of [[ExtrudedPolygonStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[ExtrudedPolygonTechniqueParams]].\n */\nexport interface ExtrudedPolygonTechnique\n    extends MakeTechniqueAttrs<ExtrudedPolygonTechniqueParams> {\n    name: \"extruded-polygon\";\n}\n\nconst extrudedPolygonTechniqueDescriptor = mergeTechniqueDescriptor<ExtrudedPolygonTechnique>(\n    baseTechniqueParamsDescriptor,\n    standardTechniqueDescriptor,\n    {\n        attrScopes: {\n            height: AttrScope.FeatureGeometry,\n            floorHeight: AttrScope.FeatureGeometry,\n            color: AttrScope.FeatureGeometry,\n            defaultColor: AttrScope.FeatureGeometry,\n            defaultHeight: AttrScope.FeatureGeometry,\n            constantHeight: AttrScope.FeatureGeometry,\n            boundaryWalls: AttrScope.FeatureGeometry,\n            footprint: AttrScope.FeatureGeometry,\n            maxSlope: AttrScope.FeatureGeometry,\n            enableDepthPrePass: AttrScope.TechniqueGeometry,\n            animateExtrusionDuration: AttrScope.TechniqueGeometry,\n            animateExtrusion: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            lineFadeNear: AttrScope.TechniqueRendering,\n            lineFadeFar: AttrScope.TechniqueRendering,\n            lineColorMix: AttrScope.TechniqueGeometry,\n            lineColor: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"extruded-polygon\"] = extrudedPolygonTechniqueDescriptor;\n/**\n * Runtime representation of [[TextStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[TextTechniqueParams]].\n */\nexport interface TextTechnique extends MakeTechniqueAttrs<TextTechniqueParams> {\n    name: \"text\";\n}\n\nconst textTechniqueDescriptor = mergeTechniqueDescriptor<TextTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n\n            minZoomLevel: AttrScope.TechniqueGeometry,\n            maxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            mayOverlap: AttrScope.TechniqueGeometry,\n            reserveSpace: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            priority: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.text = textTechniqueDescriptor;\n\n/**\n * Special technique for user-defined shaders.\n * For technique parameters see [[ShaderTechniqueParams]].\n */\nexport interface ShaderTechnique extends MakeTechniqueAttrs<ShaderTechniqueParams> {\n    name: \"shader\";\n}\n\nconst shaderTechniqueDescriptor = mergeTechniqueDescriptor<ShaderTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            primitive: AttrScope.TechniqueGeometry,\n            params: AttrScope.TechniqueRendering\n        }\n    }\n);\n\ntechniqueDescriptors.shader = shaderTechniqueDescriptor;\n\n/**\n * Technique used to render a terrain geometry with textures.\n * For technique parameters see [[TerrainTechniqueParams]].\n */\nexport interface TerrainTechnique extends MakeTechniqueAttrs<TerrainTechniqueParams> {\n    name: \"terrain\";\n}\n\n/**\n * Technique to avoid label rendering on top of certain line geometries.\n * For technique parameters see [[BaseTechniqueParams]].\n */\nexport interface LabelRejectionLineTechnique extends MakeTechniqueAttrs<BaseTechniqueParams> {\n    name: \"label-rejection-line\";\n}\n\n/**\n * Possible techniques that can be used to draw a geometry on the map.\n */\nexport type Technique =\n    | SquaresTechnique\n    | CirclesTechnique\n    | PoiTechnique\n    | LineMarkerTechnique\n    | LineTechnique\n    | SegmentsTechnique\n    | SolidLineTechnique\n    | FillTechnique\n    | StandardTechnique\n    | TerrainTechnique\n    | BasicExtrudedLineTechnique\n    | StandardExtrudedLineTechnique\n    | ExtrudedPolygonTechnique\n    | ShaderTechnique\n    | TextTechnique\n    | LabelRejectionLineTechnique;\n\n/**\n * Additional params used for optimized usage of `Techniques`.\n */\nexport interface IndexedTechniqueParams {\n    /**\n     * Optimization: Index into table in [[StyleSetEvaluator]] or in [[DecodedTile]].\n     * @hidden\n     */\n    _index: number;\n\n    /**\n     * Unique technique key derived from all dynamic expressions that were input to this particular\n     * technique instance.\n     * @hidden\n     */\n    _key: string;\n\n    /**\n     * Optimization: Unique [[Technique]] index of [[Style]] from which technique was derived.\n     * @hidden\n     */\n    _styleSetIndex: number;\n}\n\n/**\n * For efficiency, [[StyleSetEvaluator]] returns [[Techniques]] additional params as defined in\n * [[IndexedTechniqueParams]].\n */\nexport type IndexedTechnique = Technique & IndexedTechniqueParams;\n\n/**\n * Type guard to check if an object is an instance of [[CirclesTechnique]].\n */\nexport function isCirclesTechnique(technique: Technique): technique is CirclesTechnique {\n    return technique.name === \"circles\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SquaresTechnique]].\n */\nexport function isSquaresTechnique(technique: Technique): technique is SquaresTechnique {\n    return technique.name === \"squares\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[PoiTechnique]].\n */\nexport function isPoiTechnique(technique: Technique): technique is PoiTechnique {\n    return technique.name === \"labeled-icon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineMarkerTechnique]].\n */\nexport function isLineMarkerTechnique(technique: Technique): technique is LineMarkerTechnique {\n    return technique.name === \"line-marker\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineTechnique]].\n */\nexport function isLineTechnique(technique: Technique): technique is LineTechnique {\n    return technique.name === \"line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]].\n */\nexport function isSolidLineTechnique(technique: Technique): technique is SolidLineTechnique {\n    return technique.name === \"solid-line\" || technique.name === \"dashed-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SegmentsTechnique]].\n */\nexport function isSegmentsTechnique(technique: Technique): technique is SegmentsTechnique {\n    return technique.name === \"segments\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]]\n * or [[StandardExtrudedLineTechnique]].\n */\nexport function isExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique | StandardExtrudedLineTechnique {\n    return technique.name === \"extruded-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]].\n */\nexport function isBasicExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"basic\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardExtrudedLineTechnique]].\n */\nexport function isStandardExtrudedLineTechnique(\n    technique: Technique\n): technique is StandardExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[FillTechnique]].\n */\nexport function isFillTechnique(technique: Technique): technique is FillTechnique {\n    return technique.name === \"fill\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ExtrudedPolygonTechnique]].\n */\nexport function isExtrudedPolygonTechnique(\n    technique: Technique\n): technique is ExtrudedPolygonTechnique {\n    return technique.name === \"extruded-polygon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardTechnique]].\n */\nexport function isStandardTechnique(technique: Technique): technique is StandardTechnique {\n    return technique.name === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TerrainTechnique]].\n */\nexport function isTerrainTechnique(technique: Technique): technique is TerrainTechnique {\n    return technique.name === \"terrain\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TextTechnique]].\n */\nexport function isTextTechnique(technique: Technique): technique is TextTechnique {\n    return technique.name === \"text\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ShaderTechnique]].\n */\nexport function isShaderTechnique(technique: Technique): technique is ShaderTechnique {\n    return technique.name === \"shader\";\n}\n\nexport function isLabelRejectionLineTechnique(\n    technique: Technique\n): technique is LabelRejectionLineTechnique {\n    return technique.name === \"label-rejection-line\";\n}\n\n/**\n * Check if vertex normals should be generated for this technique (if no normals are in the data).\n * @param technique Technique to check.\n */\nexport function needsVertexNormals(technique: Technique): boolean {\n    return (\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isTerrainTechnique(technique) ||\n        isStandardExtrudedLineTechnique(technique)\n    );\n}\n\n/**\n * Get the texture coordinate type if the technique supports it.\n */\nexport function textureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n    if (isStandardTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isExtrudedPolygonTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isTerrainTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Add all the buffers of the technique to the transfer list.\n */\nexport function addBuffersToTransferList(technique: Technique, transferList: ArrayBuffer[]) {\n    if (\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    ) {\n        for (const texturePropertyKey of TEXTURE_PROPERTY_KEYS) {\n            const textureProperty = (technique as any)[texturePropertyKey];\n            if (isTextureBuffer(textureProperty)) {\n                if (textureProperty.buffer instanceof ArrayBuffer) {\n                    transferList.push(textureProperty.buffer);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Compose full texture name for given image name with technique specified.\n * Some techniques allows to add prefix/postfix to icons names specified, this\n * function uses technique information to create fully qualified texture name.\n * @param imageName base name of the marker icon.\n * @param technique the technique describing POI or line marker.\n * @returns fully qualified texture name for loading from atlas (without extension).\n */\nexport function composeTechniqueTextureName(\n    imageName: string,\n    technique: PoiTechnique | LineMarkerTechnique\n): string {\n    let textureName = imageName;\n    if (typeof technique.imageTexturePrefix === \"string\") {\n        textureName = technique.imageTexturePrefix + textureName;\n    }\n    if (typeof technique.imageTexturePostfix === \"string\") {\n        textureName = textureName + technique.imageTexturePostfix;\n    }\n    return textureName;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/StyleSetEvaluator\";\nexport * from \"./lib/Extruder\";\nexport * from \"./lib/IMeshBuffers\";\nexport * from \"./lib/Outliner\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/ThreeBufferUtils\";\nexport * from \"./lib/GeoJsonDataType\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class for the default console channel.\n */\n\nexport class ConsoleChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.error(message, ...optionalParams);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.debug(message, ...optionalParams);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.info(message, ...optionalParams);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.log(message, ...optionalParams);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.trace(message, ...optionalParams);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.warn(message, ...optionalParams);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\n\n/**\n * Logger class.\n */\nexport class Logger implements ILogger {\n    enabled: boolean = true;\n    level: LogLevel = LogLevel.Trace;\n\n    constructor(readonly name: string, private m_channel: IChannel, options?: LoggerOptions) {\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Error) {\n            this.m_channel.error(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Debug) {\n            this.m_channel.debug(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Info) {\n            this.m_channel.info(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Log) {\n            this.m_channel.log(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Trace) {\n            this.m_channel.trace(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Warn) {\n            this.m_channel.warn(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    update(options: LoggerOptions) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    }\n\n    private get prefix(): string {\n        return this.name + \":\";\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { LogLevel } from \"./ILogger\";\n\ndeclare let self: Worker;\n\nexport const WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n\n/**\n * The interface for the messages of the WorkerChannel.\n */\nexport interface IWorkerChannelMessage {\n    message: any[];\n    type: \"worker-channel-message\";\n    level: LogLevel;\n}\n\n/**\n * The class for the worker channel.\n */\nexport class WorkerChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @hidden\n */\nexport type Value = null | boolean | number | string | object;\n\n/**\n * @hidden\n */\nexport interface ValueMap {\n    [name: string]: Value;\n}\n\n/**\n * @hidden\n */\nexport class Env {\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     */\n    lookup(_name: string): Value | undefined {\n        return undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap(): ValueMap {\n        return {};\n    }\n}\n\n/**\n * Adds access to map specific environment properties.\n */\nexport class MapEnv extends Env {\n    constructor(readonly entries: ValueMap, private readonly parent?: Env) {\n        super();\n    }\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     * @override\n     */\n    lookup(name: string): Value | undefined {\n        if (this.entries.hasOwnProperty(name)) {\n            const value = this.entries[name];\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     * @override\n     */\n    unmap(): ValueMap {\n        const obj: any = this.parent ? this.parent.unmap() : {};\n        for (const key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { assert } from \"@here/harp-utils\";\nimport { Color } from \"three\";\nimport { ColorUtils } from \"./ColorUtils\";\n\nconst tmpColor = new Color();\n\n/**\n * Enumeration of supported string encoded numerals.\n */\nexport enum StringEncodedNumeralType {\n    Meters,\n    Pixels,\n    Hex,\n    RGB,\n    RGBA,\n    HSL\n}\n\n/**\n * Interface containing information about a [[StringEncodedNumeral]] format, component size and\n * evaluation.\n */\nexport interface StringEncodedNumeralFormat {\n    readonly type: StringEncodedNumeralType;\n    readonly size: number;\n    readonly regExp: RegExp;\n    mask?: number;\n    decoder: (encodedValue: string, target: number[]) => boolean;\n}\nconst StringEncodedMeters: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Meters,\n    size: 1,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))m$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedMeters.regExp.exec(encodedValue);\n        return match ? (target[0] = Number(match[1])) !== undefined : false;\n    }\n};\nconst StringEncodedPixels: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Pixels,\n    size: 1,\n    mask: 1.0,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedPixels.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        target[0] = Number(match[1]);\n        return true;\n    }\n};\nconst StringEncodedHex: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Hex,\n    size: 4,\n    regExp: /^\\#((?:[0-9A-Fa-f][0-9A-Fa-f]){3,4}|[0-9A-Fa-f]{3,4})$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedHex.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        const hex = match[1];\n        const size = hex.length;\n        // Only few sizes are possible for given reg-exp.\n        assert(\n            size === 3 || size === 4 || size === 6 || size === 8,\n            `Matched incorrect hex format: ${encodedValue}`\n        );\n        // Note that we simply ignore alpha channel value.\n        // TODO: To be resolved with HARP-7517\n        if (size === 3 || size === 4) {\n            // #RGB or #RGBA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            target[1] = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            target[2] = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            target[3] = size === 4 ? parseInt(hex.charAt(3) + hex.charAt(3), 16) / 255 : 1;\n        } else if (size === 6 || size === 8) {\n            // #RRGGBB or #RRGGBBAA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            target[1] = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            target[2] = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            target[3] = size === 8 ? parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255 : 1;\n        }\n        return true;\n    }\n};\nconst StringEncodedRGB: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGB,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgb\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5])) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGB.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        return true;\n    }\n};\nconst StringEncodedRGBA: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGBA,\n    size: 4,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgba\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:(0(?:\\.[0-9]+)?|1(?:\\.0+)?)) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGBA.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        target[3] = parseInt(channels[4], 10);\n        return true;\n    }\n};\nconst StringEncodedHSL: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.HSL,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^hsl\\( ?((?:[0-9]|[1-9][0-9]|1[0-9]{1,2}|2[0-9]{1,2}|3[0-5][0-9]|360)), ?(?:([0-9]|[1-9][0-9]|100)%), ?(?:([0-9]|[1-9][0-9]|100)%) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedHSL.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        tmpColor.setHSL(\n            parseInt(channels[1], 10) / 360,\n            parseInt(channels[2], 10) / 100,\n            parseInt(channels[3], 10) / 100\n        );\n        target[0] = tmpColor.r;\n        target[1] = tmpColor.g;\n        target[2] = tmpColor.b;\n        return true;\n    }\n};\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing sizes, lengths and distances.\n */\nexport const StringEncodedMetricFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedMeters,\n    StringEncodedPixels\n];\n\nconst StringEncodedMetricFormatMaxSize = StringEncodedMetricFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing color data.\n */\nexport const StringEncodedColorFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedHex,\n    StringEncodedRGB,\n    StringEncodedRGBA,\n    StringEncodedHSL\n];\n\nconst StringEncodedColorFormatMaxSize = StringEncodedColorFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of supported [[StringEncodedNumeralFormat]]s (intended to be indexed with\n * [[StringEncodedNumeralType]] enum).\n */\nexport const StringEncodedNumeralFormats: StringEncodedNumeralFormat[] = [\n    ...StringEncodedMetricFormats,\n    ...StringEncodedColorFormats\n];\n\nexport const StringEncodedNumeralFormatMaxSize = Math.max(\n    StringEncodedColorFormatMaxSize,\n    StringEncodedMetricFormatMaxSize\n);\n\nconst tmpBuffer: number[] = new Array(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Parse string encoded numeral values using all known [[StringEncodedNumeralFormats]].\n *\n * @param numeral The string representing numeric value.\n * @param pixelToMeters The ratio used to convert from meters to pixels (default 1.0).\n * @returns Number parsed or __undefined__ if non of the numeral patterns matches the expression\n * provided in [[numeral]].\n */\nexport function parseStringEncodedNumeral(\n    numeral: string,\n    pixelToMeters: number = 1.0\n): number | undefined {\n    let result: number | undefined;\n    const formatMatch = (format: StringEncodedNumeralFormat) => {\n        if (format.decoder(numeral, tmpBuffer)) {\n            switch (format.type) {\n                case StringEncodedNumeralType.Meters:\n                    result = tmpBuffer[0];\n                    break;\n                case StringEncodedNumeralType.Pixels:\n                    result = tmpBuffer[0] * pixelToMeters;\n                    break;\n                case StringEncodedNumeralType.Hex:\n                case StringEncodedNumeralType.RGBA:\n                    result = ColorUtils.getHexFromRgba(\n                        tmpBuffer[0],\n                        tmpBuffer[1],\n                        tmpBuffer[2],\n                        tmpBuffer[3]\n                    );\n                case StringEncodedNumeralType.RGB:\n                case StringEncodedNumeralType.HSL:\n                    result = ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n                    break;\n                default:\n                    result = tmpBuffer[0];\n                    break;\n            }\n            return true;\n        }\n        return false;\n    };\n    StringEncodedNumeralFormats.some(formatMatch);\n    return result;\n}\n\n/**\n * Parse string encoded color value using all known [[StringEncodedColorFormats]].\n *\n * @param color The string encoded color expression (i.e. '#FFF', 'rgb(255, 0, 0)', etc.).\n * @returns The color parsed or __undefined__ if non of the known representations matches\n * the expression provided in [[color]].\n */\nexport function parseStringEncodedColor(color: string): number | undefined {\n    const matchedFormat = matchFormat(StringEncodedColorFormats, color, tmpBuffer);\n    if (matchedFormat === undefined) {\n        return undefined;\n    }\n    switch (matchedFormat.type) {\n        case StringEncodedNumeralType.Hex:\n        case StringEncodedNumeralType.RGBA:\n            return ColorUtils.getHexFromRgba(\n                tmpBuffer[0],\n                tmpBuffer[1],\n                tmpBuffer[2],\n                tmpBuffer[3]\n            );\n        case StringEncodedNumeralType.RGB:\n        case StringEncodedNumeralType.HSL:\n            return ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n        default:\n            return tmpBuffer[0];\n    }\n}\n\nfunction matchFormat(\n    formats: StringEncodedNumeralFormat[],\n    numeral: string,\n    result: number[]\n): StringEncodedNumeralFormat | undefined {\n    return formats.find(format => {\n        return format.decoder(numeral, result) ? true : false;\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\n\n/**\n * Available line caps types(`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n * Default is `\"Round\"`.\n */\nexport type LineCaps = \"Square\" | \"Round\" | \"None\" | \"TriangleOut\" | \"TriangleIn\";\n\n/**\n * The kind of geometry is used to\n *\n * a) Group objects together, allowing the group to be hidden or displayed.\n *\n * b) Assigning the objects a loading phase. If a [[PhasedTileGeometryManager]] is used, techniques\n *      without a `GeometryKind` may not be processed (at the desired phase).\n *\n * Any string can be used to specify the kind of the technique in a style in the theme file. Is is\n * suggested to specify multiple kinds for specific types of data. For a highway, the following list\n * of kinds is suggested:\n *\n *    [\"line\", \"road\", \"road:highway\"]\n *\n * If it is a tunnel for a highway:\n *\n *    [\"line\", \"road\", \"road:highway\", \"tunnel\", \"road:tunnel\", \"road:highway:tunnel\"]\n *\n * If specified in this way, specific types of data (here: highway roads) can be enabled and/or\n * disabled.\n */\nexport enum GeometryKind {\n    /**\n     * Used in the enabledKinds/disabledKinds filter to match any kind.\n     */\n    All = \"_all_\",\n\n    /**\n     * Background geometry.\n     */\n    Background = \"background\",\n\n    /**\n     * Terrain geometry.\n     */\n    Terrain = \"terrain\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Area = \"area\",\n\n    /**\n     * Default value for all line techniques.\n     */\n    Line = \"line\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Water = \"water\",\n\n    /**\n     * Political borders.\n     */\n    Border = \"border\",\n\n    /**\n     * Basis for all roads.\n     */\n    Road = \"road\",\n\n    /**\n     * Default value for the ExtrudedPolygonTechnique.\n     */\n    Building = \"building\",\n\n    /**\n     * Default value for the TextTechnique, LineMarkerTechnique and the PoiTechnique.\n     */\n    Label = \"label\",\n\n    /**\n     * Anything that may show up last.\n     */\n    Detail = \"detail\"\n}\n\n/**\n * Decorate property type with possible dynamic variants.\n */\nexport type DynamicProperty<T> = T | JsonExpr | InterpolatedPropertyDefinition<T>;\n\n/*\n * Description of length units inside a style. Supports literal values (interpreted as `m`), `m` and\n * `px`(i.e. `80`, `14px`, `0.6m`, etc.).\n */\nexport type StyleLength = string | number;\n\n/**\n * Description of colors inside a style. Supports hex values as well as CSS hex, rgb and hsl values\n * (i.e. `0xffffff`, `#f00fab`, `#aaa`, `rgb(255, 0 120)`, `hsl(360, 100%, 100%)`, etc.).\n */\nexport type StyleColor = string | number;\n\n/**\n * A set of [[GeometryKind]]s.\n */\nexport class GeometryKindSet extends Set {\n    /**\n     * Return `true` if the Set is a superset of the set 'subset'.\n     */\n    isSuperset(subset: Set<any>): boolean {\n        for (const elem of subset) {\n            if (!this.has(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the Set intersects Set 'set'.\n     */\n    hasIntersection(set: any) {\n        for (const elem of set) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the Set either intersects Set 'set' (if set is a Set), of has element 'set'\n     * if set is not a Set.\n     */\n    hasOrIntersects(set: any) {\n        if (set instanceof Set) {\n            return this.hasIntersection(set);\n        }\n        return this.has(set);\n    }\n\n    /**\n     * Return `true` if this set and the array of elements share at least a single element.\n     */\n    hasOrIntersectsArray(subset: any[]) {\n        for (const elem of subset) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Common attributes or all [[Technique]]s.\n */\nexport interface BaseTechniqueParams {\n    /**\n     * The name used to identify materials created from this technique.\n     */\n    id?: string;\n\n    /**\n     * The render order of the objects created using this technique.\n     *\n     * If not specified in style file, [[StyleSetEvaluator]] will assign monotonically increasing\n     * values according to style position in file.\n     */\n    renderOrder: number;\n\n    /**\n     *\n     */\n    renderOrderOffset?: number;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this technique creates.\n     */\n    transient?: boolean;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object start\n     * fading out (opacity decreases).\n     */\n    fadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object has zero\n     * opacity and stops fading out. An undefined value disables fading.\n     */\n    fadeFar?: DynamicProperty<number>;\n\n    /**\n     * Specified kind of geometry. One kind is set as default in the technique, and can be\n     * overridden in the style.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * Set to `true` if this `Technique`s kind is in the set of enabled [[GeometryKind]]s, set to\n     * `false` if is in the disabled [[GeometryKind]]s. Disabling overrules enabling.\n     */\n    enabled?: boolean;\n}\n\nexport enum TextureCoordinateType {\n    /**\n     * Texture coordinates are in tile space.\n     * SW of the tile will have (0,0) and NE will have (1,1).\n     */\n    TileSpace = \"tile-space\",\n    /**\n     * Texture coordinates are in equirectangular space.\n     * (u, v) = ( (longitude+180) / 360, (latitude+90) / 180).\n     */\n    EquirectangularSpace = \"equirectangular-space\"\n}\n\n/**\n * Standard technique parameters.\n */\nexport interface StandardTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of the feature in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.color.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.wireframe.\n     */\n    wireframe?: boolean;\n    /**\n     * If `vertexColors` is `true`, every vertex has color information, which is interpolated\n     * between vertices.\n     * See https://threejs.org/docs/#api/en/materials/Material.vertexColors.\n     */\n    vertexColors?: boolean;\n    /**\n     * How rough the material appears. `0.0` means a smooth mirror reflection. `1.0` means fully\n     * diffuse. Default is `1.0`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughness.\n     */\n    roughness?: DynamicProperty<number>;\n    /**\n     * How much the material is like a metal. Nonmetallic materials such as wood or stone use `0.0`,\n     * metallic ones use `1.0`, with nothing (usually) in between. Default is `0.0`. A value between\n     * `0.0` and `1.0` can be used for a rusty metal look. If `metalnessMap` is also provided, both\n     * values are multiplied.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalness.\n     */\n    metalness?: DynamicProperty<number>;\n    /**\n     * The material will not be rendered if the opacity is lower than this value.\n     * See https://threejs.org/docs/#api/en/materials/Material.alphaTest.\n     */\n    alphaTest?: DynamicProperty<number>;\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     */\n    depthTest?: boolean;\n    /**\n     * Set to 'true' if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     * See https://threejs.org/docs/#api/en/materials/Material.opacity.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Emissive (light) color of the material, essentially a solid color unaffected by other\n     * lighting. Default is black.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissive.\n     * @format color-hex\n     */\n    emissive?: DynamicProperty<StyleColor>;\n    /**\n     * Intensity of the emissive light. Modulates the emissive color. Default is `1`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveIntensity.\n     */\n    emissiveIntensity?: DynamicProperty<number>;\n    /**\n     * The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of\n     * the material. It is used with environment mapping modes `THREE.CubeRefractionMapping` and\n     * `THREE.EquirectangularRefractionMapping`. The refraction ratio should not exceed `1`. Default\n     *  is `0.98`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.refractionRatio.\n     */\n    refractionRatio?: DynamicProperty<number>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if any texture assigned (e.g. `map`, `normalMap`, ...).\n     */\n    textureCoordinateType?: TextureCoordinateType;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.map\n     */\n    map?: string | TextureBuffer;\n    mapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as normal map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.normalMap\n     */\n    normalMap?: string | TextureBuffer;\n    normalMapType?: number;\n    normalMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as displacement map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.displacementMap\n     */\n    displacementMap?: string | TextureBuffer;\n    displacementMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as roughness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughnessMap\n     */\n    roughnessMap?: string | TextureBuffer;\n    roughnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as emissive map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveMap\n     */\n    emissiveMap?: string | TextureBuffer;\n    emissiveMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as bump map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.bumpMap\n     */\n    bumpMap?: string | TextureBuffer;\n    bumpMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as metalness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalnessMap\n     */\n    metalnessMap?: string | TextureBuffer;\n    metalnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as alpha map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.alphaMap\n     */\n    alphaMap?: string | TextureBuffer;\n    alphaMapProperties?: TextureProperties;\n}\n\n/**\n * Possible parameters of [[PointTechnique]].\n */\nexport interface PointTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a point in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * URL of a texture image to be loaded.\n     */\n    texture?: string;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Size of point in pixels.\n     */\n    size?: number;\n    /**\n     * Whether to enable picking on these points.\n     */\n    enablePicking?: boolean;\n}\n\n/**\n * Define the stacking option. Enum values for theme file are in \"kebab-case\".\n */\nexport enum PoiStackMode {\n    /**\n     * Show in a stack.\n     */\n    Show = \"show-in-stack\",\n    /**\n     * Do not show in a stack.\n     */\n    Hide = \"hide-in-stack\",\n    /**\n     * Show category parent in the stack.\n     */\n    ShowParent = \"show-parent\"\n}\n\n/**\n * Technique that describes icons with labels. Used in [[PoiTechnique]] and [[LineMarkerTechnique]]\n * (for road shields).\n */\nexport interface MarkerTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted)\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language\n     *  - `[\"get\", \"name\"]`\n     *\n     * See [[ExtendedTileInfo.getFeatureText]]\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of marker, defaults to `0`. Markers with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: number;\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: number;\n    /**\n     * Scaling factor of icon. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `false`, text may overlap markers.\n     * @default `false`\n     */\n    textMayOverlap?: boolean;\n    /**\n     * If `false`, the icon may overlap text and other icons of lower priority. If not defined, the\n     * property value from `textMayOverlap` will be used.\n     * @default `false`\n     */\n    iconMayOverlap?: boolean;\n    /**\n     * If `false`, text will not reserve screen space, other markers will be able to overlap.\n     * @default `true`\n     */\n    textReserveSpace?: boolean;\n    /**\n     * If `false`, icon will not reserve screen space, other markers will be able to overlap. If not\n     * defined, the property value from `iconReserveSpace` will be used.\n     * @default `true`\n     */\n    iconReserveSpace?: boolean;\n    /**\n     * If `false`, text will not be rendered during animations. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n    /**\n     * If `true`, the label will always be rendered on top. If overlapping with other labels with\n     * this flag set, the render order is undefined.\n     * @default `false`\n     */\n    alwaysOnTop?: boolean;\n    /**\n     * If `true`, icon will appear even if the text part is blocked by other labels. Defaults to\n     * `false`.\n     */\n    textIsOptional?: boolean;\n    /**\n     * Should be displayed on map or not. Defaults to `true`.\n     */\n    showOnMap?: boolean;\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n    /**\n     * Minimal distance between markers in screen pixels.\n     */\n    minDistance?: number;\n    /**\n     * If true, the text will appear even if the icon cannot be rendered because of missing icon\n     * graphics. Defaults to `true`.\n     */\n    iconIsOptional?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Fading time for icons in seconds.\n     */\n    iconFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: DynamicProperty<number>;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    iconXOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    iconYOffset?: DynamicProperty<number>;\n    /**\n     * Scaling factor of icon.\n     */\n    iconScale?: number;\n    /**\n     * Vertical height in pixels, controls vertical scaling. Overrides `iconScale`.\n     */\n    screenHeight?: DynamicProperty<number>;\n    /**\n     * Horizontal height in pixels, controls horizontal scaling. Overrides `iconScale`.\n     */\n    screenWidth?: DynamicProperty<number>;\n    /**\n     * Name of the POI table which should be used for this POI.\n     */\n    poiTable?: string;\n    /**\n     * Fixed name to identify POI options in the POI table. If `poiName` has a value, this value\n     * supercedes any value read from the field referenced in `poiNameField`.\n     */\n    poiName?: string;\n    /**\n     * Name of the field to evaluate to get the name of the POI options in the POI table.\n     */\n    poiNameField?: string;\n    /**\n     * Name of [[ImageTexture]] definition to use.\n     */\n    imageTexture?: string;\n    /**\n     * Field name to extract imageTexture content from.\n     */\n    imageTextureField?: string;\n    /**\n     * Prefix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePrefix?: string;\n    /**\n     * Postfix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePostfix?: string;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\nexport interface LineTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to true if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in pixels. WebGL implementations will normally render all lines with 1 pixel\n     * width, and ignore this value.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a geometry as a segment.\n */\nexport interface SegmentsTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of segments in a hexadecimal notation, for example: `\"#e4e9ec\"` or `\"#fff\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of a line in meters.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a polygon.\n */\nexport interface PolygonalTechniqueParams {\n    /**\n     * Whether to use polygon offset. Default is false. This corresponds to the\n     * GL_POLYGON_OFFSET_FILL WebGL feature.\n     *\n     * PolygonOffset is used to raise the geometry towards the geometry (for depth calculation\n     * only). Default is false.\n     *\n     * See here: https://sites.google.com/site/threejstuts/home/polygon_offset\n     *\n     * To activate polygonOffset these values have to be set to pull the line \"forwards\":\n     *\n     * transparent: true\n     *\n     * polygonOffset: true\n     *\n     * polygonOffsetFactor : -1.0, (as an example, see link above)\n     *\n     * polygonOffsetUnits: -1 (as an example, see link above)\n     */\n    polygonOffset?: boolean;\n\n    /**\n     * Sets the polygon offset factor. Default is 0.\n     */\n    polygonOffsetFactor?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon offset units. Default is 0.\n     */\n    polygonOffsetUnits?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon outline color.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a basic extruded line.\n */\nexport interface BasicExtrudedLineTechniqueParams\n    extends BaseTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are \"Basic\" and \"Standard\". Default\n     * is \"Basic\".\n     *\n     * `\"basic\"`   : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"`: Elaborate shading, with metalness, and roughness.\n     *\n     * TODO: is this TechniqueParams or Style prop ?\n     */\n    shading?: \"basic\";\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a standard extruded line.\n */\nexport interface StandardExtrudedLineTechniqueParams\n    extends StandardTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are `\"basic\"` and `\"standard\"`.\n     * Default is `\"basic\"`.\n     *\n     * `\"basic\"` : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"` : Elaborate shading, with metalness, and roughness.\n     */\n    shading: \"standard\";\n    /**\n     * Width of a line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a solid line.\n */\nexport interface SolidLineTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Color of a line outline in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    outlineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    // TODO: Make pixel units default.\n    /**\n     * @deprecated Specify metrics units as part of the value instead.\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     */\n    metricUnit?: string;\n    /**\n     * Width of a line in `metricUnit` for different zoom levels.\n     */\n    lineWidth: DynamicProperty<StyleLength>;\n    /**\n     * Outline width of a line in `metricUnit`s for different zoom levels.\n     */\n    outlineWidth?: DynamicProperty<StyleLength>;\n    /**\n     * Clip the line outside the tile if `true`.\n     */\n    clipping?: boolean;\n    /**\n     * Describes line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    caps?: LineCaps;\n    /**\n     * Color of secondary line geometry in hexadecimal or CSS-style notation, for example:\n     * `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    secondaryColor?: DynamicProperty<StyleColor>;\n    /**\n     * Width of secondary line geometry in `metricUnit`s for different zoom levels.\n     */\n    secondaryWidth?: DynamicProperty<StyleLength>;\n    /**\n     * The render order of the secondary line geometry object created using this technique.\n     */\n    secondaryRenderOrder?: number;\n    /**\n     * Describes secondary line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`,\n     * `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    secondaryCaps?: LineCaps;\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n    /**\n     * Color of a line dashes in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    dashColor?: DynamicProperty<StyleColor>;\n    /**\n     * Length of a line in meters for different zoom levels.\n     */\n    dashSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size of a gap between lines in meters for different zoom levels.\n     */\n    gapSize?: DynamicProperty<StyleLength>;\n}\n\n/**\n * Technique used to draw filled polygons.\n */\nexport interface FillTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Renders the footprint lines if set to 'true'.\n     */\n    footprint?: boolean;\n    /**\n     * Set to a negative value to remove all the vertical lines, and to a value between 0.0 and 1.0\n     * to modulate the amount of vertical lines rendered.\n     */\n    maxSlope?: number;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Mix value between the lineColor(0.0) and the geometry's vertex colors(1.0).\n     */\n    lineColorMix?: number;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Height above ground in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"get\", \"height\"]`.\n     */\n    height?: number;\n\n    /**\n     * Height of \"floor\" of extruded polygon in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"number\", [\"get\", \"min_height\"], 0]`.\n     */\n    floorHeight?: number;\n\n    /**\n     * In some data sources, for example Tilezen, building extrusion information might be missing.\n     * This attribute allows to define a default height of an extruded polygon in the theme.\n     *\n     * @deprecated use [[height]]\n     */\n    defaultHeight?: number;\n\n    /**\n     * Default color used if feature doesn't provide color attribute\n     * and [[MapEnv]] did not return it too.\n     * @format color-hex\n     */\n    defaultColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * If `true`, the height of the extruded buildings will not be modified by the mercator\n     * projection distortion that happens around the poles.\n     *\n     * @default `false`\n     */\n    constantHeight?: boolean;\n\n    /**\n     * If `false`, wall geometry will not be added along the tile boundaries.\n     * @default `true`\n     */\n    boundaryWalls?: boolean;\n\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    animateExtrusion?: DynamicProperty<boolean>;\n\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    animateExtrusionDuration?: number;\n\n    /**\n     * Control rendering of depth prepass before the actual geometry.\n     *\n     * Depth prepass is a method to render translucent meshes, hence only the visible front faces of\n     * a mesh are actually rendered, removing artifacts caused by blending with internal faces of\n     * the mesh. This method is used for drawing translucent buildings over map background.\n     *\n     * By default, each [[DataSource]] determines how/if enable the depth pre-pass. A value of\n     * `false` forcefully disables depth prepass.\n     */\n    enableDepthPrePass?: boolean;\n}\n\nexport interface ShaderTechniqueMaterialParameters {\n    [name: string]: any;\n}\n\n/**\n * Special technique for user-defined shaders. See\n * https://threejs.org/docs/#api/harp-materials/ShaderMaterial for details.\n */\nexport interface ShaderTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Parameters for shader. See `THREE.ShaderMaterialParameters`.\n     */\n    params: ShaderTechniqueMaterialParameters;\n\n    /**\n     * Type of primitive for the shader technique. Valid values are \"point\" | \"line\" | \"segments\" |\n     * \"mesh\"\n     */\n    primitive: \"point\" | \"line\" | \"segments\" | \"mesh\";\n}\n\n/**\n * Technique used to render a terrain geometry with a texture.\n * When using this technique, the datasource will produce texture coordinates in\n * local tile space (i.e. [0,0] at south-west and [1,1] at north-east tile corner).\n */\nexport interface TerrainTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Colors to be applied at different heights (as a results of a `displacementMap`).\n     */\n    heightBasedColors?: HeightBasedColors;\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the interpolation method used to\n     * generate the height-based gradient texture (defaults to `Discrete`).\n     */\n    heightGradientInterpolation?: \"Discrete\" | \"Linear\" | \"Cubic\";\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the width (in pixels) of the generated\n     * gradient texture (defaults to `128`).\n     */\n    heightGradientWidth?: number;\n}\n\n/**\n * Render geometry as a text.\n */\nexport interface TextTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted);\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true;\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true;\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language;\n     *  - `[\"get\", \"name\"]`.\n     *\n     * See [[ExtendedTileInfo.getFeatureText]].\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of text, defaults to `0`. Elements with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number;\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number;\n    /**\n     * Scaling factor of the text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     * @default `false`\n     */\n    mayOverlap?: boolean;\n    /**\n     * If `true`, element will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @default `true`\n     */\n    reserveSpace?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: number;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: number;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\n/**\n * Buffer holding a texture.\n */\nexport interface TextureBuffer {\n    /**\n     * Buffer containing the (compressed) image or the raw texture data.\n     */\n    buffer: ArrayBuffer;\n\n    /**\n     * Mime type of the image or 'image/raw' in case of raw texture data.\n     */\n    type: string;\n\n    /**\n     * Properties for creating a three.js DataTexture\n     * (https://threejs.org/docs/#api/en/textures/DataTexture).\n     */\n    dataTextureProperties?: DataTextureProperties;\n}\n\n/**\n * Type guard to check if an object is an instance of `TextureBuffer`.\n */\nexport function isTextureBuffer(object: any): object is TextureBuffer {\n    return object && object.buffer && typeof object.type === \"string\";\n}\n\n/**\n * Properties of a DataTexture (https://threejs.org/docs/#api/en/textures/DataTexture).\n */\nexport interface DataTextureProperties {\n    width: number;\n    height: number;\n\n    format?: PixelFormat;\n    type?: TextureDataType;\n}\n\n/**\n * Properties of a Texture (https://threejs.org/docs/#api/en/textures/Texture).\n */\nexport interface TextureProperties {\n    /**\n     * Texture horizontal wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapS.\n     */\n    wrapS?: WrappingMode;\n\n    /**\n     * Texture vertical wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapT.\n     */\n    wrapT?: WrappingMode;\n\n    /**\n     * Texture magnification filter.\n     */\n    magFilter?: MagFilter;\n\n    /**\n     * Texture minification filter.\n     */\n    minFilter?: MinFilter;\n\n    /**\n     * Flip texture vertically.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.flipY.\n     */\n    flipY?: boolean;\n\n    /**\n     * Texture horizontal repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatU?: number;\n\n    /**\n     * Texture vertical repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatV?: number;\n}\n\n/**\n * Interface containing the definition of different colors to be used at different heights with the\n * [[TerrainTechnique]].\n */\nexport interface HeightBasedColors {\n    heightArray: number[];\n    colorArray: string[];\n}\n\nexport type PixelFormat =\n    | \"Alpha\"\n    | \"RGB\"\n    | \"RGBA\"\n    | \"Luminance\"\n    | \"LuminanceAlpha\"\n    | \"RGBE\"\n    | \"Depth\"\n    | \"DepthStencil\"\n    | \"Red\";\n\nexport type TextureDataType =\n    | \"UnsignedByte\"\n    | \"Byte\"\n    | \"Short\"\n    | \"UnsignedShort\"\n    | \"Int\"\n    | \"UnsignedInt\"\n    | \"Float\"\n    | \"HalfFloat\";\n\n/**\n * Available texture wrapping modes.\n */\nexport type WrappingMode = \"clamp\" | \"repeat\" | \"mirror\";\n\n/**\n * Available texture magnification filters.\n */\nexport type MagFilter = \"nearest\" | \"linear\";\n\n/**\n * Available texture minification filters.\n */\nexport type MinFilter =\n    | \"nearest\"\n    | \"nearestMipMapNearest\"\n    | \"nearestMipMapLinear\"\n    | \"linear\"\n    | \"linearMipMapNearest\"\n    | \"linearMipMapLinear\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Technique } from \"./Techniques\";\n\nexport enum AttrScope {\n    /**\n     * Attributes that affect generation of feature geometry and thus must be resolved at decoding\n     * time.\n     *\n     * They may have huge variancy as they are implemented as vertex attributes or embedded in\n     * generated meshes.\n     *\n     * These attributes are available only in decoding scope.\n     */\n    FeatureGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * These attributes affect generated geometry and  thus must be resolved at decoding time.\n     *\n     * They shouldn't have big variancy and evaluate to at least dozens of values as each\n     * combination of these attributes consitute new technique and material.\n     *\n     * These attributes are available in decoding and rendering scope.\n     */\n    TechniqueGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * Attributes that can be changed in resulting object/material from frame to frame. They are\n     * usually implemented as uniforms.\n     *\n     * These attributes may be available only at rendering scope.\n     */\n    TechniqueRendering\n}\n\n/**\n * Extract  property names from [[Technique]]-like interface (excluding `name`) as union of string\n * literals.\n *\n * TechniquePropName<Base\n *\n */\nexport type TechniquePropNames<T> = T extends { name: any } ? keyof Omit<T, \"name\"> : keyof T;\n\nexport type TechniquePropScopes<T> = {\n    [P in TechniquePropNames<T>]?: AttrScope;\n};\n\nexport interface TechniqueDescriptor<T> {\n    attrTransparencyColor?: string;\n    attrScopes: TechniquePropScopes<T>;\n}\n\ntype OneThatMatches<T, P> = T extends P ? T : never;\ntype TechniqueByName<K extends Technique[\"name\"]> = OneThatMatches<Technique, { name: K }>;\n\nexport type TechniqueDescriptorRegistry = {\n    [P in Technique[\"name\"]]?: TechniqueDescriptor<TechniqueByName<P>>;\n};\n\nexport function mergeTechniqueDescriptor<T>(\n    ...descriptors: Array<Partial<TechniqueDescriptor<T>>>\n): TechniqueDescriptor<T> {\n    const result: TechniqueDescriptor<T> = {\n        attrScopes: {}\n    };\n    for (const descriptor of descriptors) {\n        if (descriptor.attrTransparencyColor !== undefined) {\n            result.attrTransparencyColor = descriptor.attrTransparencyColor;\n        }\n        if (descriptor.attrScopes !== undefined) {\n            result.attrScopes = { ...result.attrScopes, ...descriptor.attrScopes };\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    equirectangularProjection,\n    mercatorProjection,\n    normalizedEquirectangularProjection,\n    OrientedBox3,\n    Projection,\n    sphereProjection,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\nimport { Technique } from \"./Techniques\";\nimport { TileInfo } from \"./TileInfo\";\n\n/**\n * This object has geometry data in the form of geometries buffers ready to be used by WebGL.\n * These geometries are not `three.js` objects. They are pure data stored as `ArrayBuffer`s and\n * metadata describing these buffers.\n */\nexport interface DecodedTile {\n    techniques: Technique[];\n    geometries: Geometry[];\n    pathGeometries?: PathGeometry[];\n    textPathGeometries?: TextPathGeometry[];\n    textGeometries?: TextGeometry[]; // ### deprecate\n    poiGeometries?: PoiGeometry[];\n    tileInfo?: TileInfo;\n    maxGeometryHeight?: number;\n    decodeTime?: number; // time used to decode (in ms)\n\n    /**\n     * The default bounding box in [[Tile]] is based on the geo box of the tile.\n     * For data-sources that have 3d data this is not sufficient so the data-source can provide a\n     * more accurate bounding box once the data is decoded.\n     */\n    boundingBox?: OrientedBox3;\n\n    /**\n     * Tile data Copyright holder identifiers.\n     *\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * @see [[CopyrightInfo]]\n     */\n    copyrightHolderIds?: string[];\n}\n\n/**\n * This object keeps the path of the geometry. Space of the path depends on the\n * use case, so could be either world or local tile space.\n */\nexport interface PathGeometry {\n    path: Vector3Like[];\n}\n\n/**\n * Attributes corresponding to some decoded geometry. It may be either a map\n * of multiple attributes or just a number with the geometry's feature id.\n */\nexport type AttributeMap = {} | number;\n\n/**\n * This object keeps textual data together with metadata to place it on the map.\n */\nexport interface TextPathGeometry {\n    path: number[];\n    pathLengthSqr: number;\n    text: string;\n    technique: number;\n    objInfos?: AttributeMap;\n}\n\n/**\n * Returns an array with the data type specified as parameter.\n *\n * @param attr specifies which type of data is being stored in the array\n */\nexport function getArrayConstructor(attr: BufferElementType) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint8\":\n            return Uint8Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n        case \"int8\":\n            return Int8Array;\n        case \"int16\":\n            return Int16Array;\n        case \"int32\":\n            return Int32Array;\n    }\n}\n\n/**\n * Structured clone compliant WebGL interleaved buffer with its metadata attached.\n */\nexport interface InterleavedBufferAttribute {\n    buffer: ArrayBufferLike;\n    stride: number;\n    type: BufferElementType;\n    attributes: Array<{\n        name: string;\n        itemSize: number;\n        offset: number;\n    }>;\n}\n\n/**\n * Geometry types supported by [[Geometry]] objects.\n */\nexport enum GeometryType {\n    Unspecified = 0,\n    Point,\n    Line,\n    SolidLine,\n    Text,\n    TextPath,\n    ExtrudedLine,\n    Polygon,\n    ExtrudedPolygon,\n    Object3D,\n    Other = 1000\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object, consisting of buffers with\n * metadata for map features and objects for example roads, trees or parks.\n */\nexport interface Geometry {\n    type: GeometryType;\n    vertexAttributes: BufferAttribute[];\n    interleavedVertexAttributes?: InterleavedBufferAttribute[];\n    index?: BufferAttribute;\n    edgeIndex?: BufferAttribute;\n    groups: Group[];\n    uuid?: string;\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    featureStarts?: number[];\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n}\n\n/**\n * The data stored in Buffers' elements can be of the following elementary types: float, signed or\n * unsigned integers (8-bit, 16-bit or 32-bit long).\n */\nexport type BufferElementType =\n    | \"float\"\n    | \"uint8\"\n    | \"uint16\"\n    | \"uint32\"\n    | \"int8\"\n    | \"int16\"\n    | \"int32\";\n\n/**\n * Structured clone compliant WebGL buffer and its metadata.\n */\nexport interface BufferAttribute {\n    name: string;\n    buffer: ArrayBufferLike;\n    type: BufferElementType;\n    itemCount: number;\n    normalized?: boolean;\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with text to be rendered.\n * It is composed of buffers with metadata for text objects.\n */\nexport interface TextGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with points of interest (POIs)\n * to be rendered. It is composed of buffers with metadata for POI objects.\n */\nexport interface PoiGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    /**\n     * Names of the image texture or the name of the POI as indices into the array `stringCatalog`.\n     */\n    imageTextures?: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant WebGL group object and its metadata.\n * Its purpose is to make working with groups of objects easier.\n */\nexport interface Group {\n    start: number;\n    count: number;\n    technique: number;\n\n    /**\n     * Offset added to [[Technique]]'s [[renderOrder]] when calculating final `renderOrder` of\n     * geometry object from given group.\n     */\n    renderOrderOffset?: number;\n    featureId?: number;\n\n    /**\n     * Contains tile offsets if its [[Geometry]] has been created.\n     */\n    createdOffsets?: number[];\n}\n\n/**\n * Returns the projection object specified in the parameter.\n *\n * @param projectionName string describing projection to be used\n */\nexport function getProjection(projectionName: string): Projection | never {\n    switch (projectionName) {\n        case \"mercator\":\n            return mercatorProjection;\n        case \"webMercator\":\n            return webMercatorProjection;\n        case \"sphere\":\n            return sphereProjection;\n        case \"normalizedEquirectangular\":\n            return normalizedEquirectangularProjection;\n        case \"equirectangular\":\n            return equirectangularProjection;\n        default:\n            throw new Error(`Unknown projection ${projectionName}`);\n    } // switch\n}\n\n/**\n * String with the projection's name.\n *\n * @param projection `Projection` object containing the name of the projection to retrieve\n */\nexport function getProjectionName(projection: Projection): string | never {\n    if (projection === mercatorProjection) {\n        return \"mercator\";\n    } else if (projection === webMercatorProjection) {\n        return \"webMercator\";\n    } else if (projection === sphereProjection) {\n        return \"sphere\";\n    } else if (projection === normalizedEquirectangularProjection) {\n        return \"normalizedEquirectangular\";\n    } else if (projection === equirectangularProjection) {\n        return \"equirectangular\";\n    }\n    throw new Error(\"Unknown projection\");\n}\n\n/**\n * @returns Feature id from the provided attribute map.\n */\nexport function getFeatureId(attributeMap: AttributeMap | undefined): number {\n    if (attributeMap === undefined) {\n        return 0;\n    }\n\n    if (typeof attributeMap === \"number\") {\n        return attributeMap;\n    }\n\n    if (attributeMap.hasOwnProperty(\"$id\")) {\n        return (attributeMap as any).$id as number;\n    }\n\n    return 0;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `GeoCoordinates` like interface.\n */\nexport interface GeoCoordinatesLike {\n    /** The latitude in degrees. */\n    latitude: number;\n\n    /** The longitude in degrees. */\n    longitude: number;\n\n    /** The optional altitude in meters. */\n    altitude?: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[GeoCoordinatesLike]] data interface.\n */\nexport function isGeoCoordinatesLike(object: any): object is GeoCoordinatesLike {\n    return (\n        object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\")\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An [[Array]] following the order longitude, latitude, altitude.\n */\nexport type GeoPointLike = [number, number, number?];\n\n/**\n * Type guard to assert that `object` conforms to [[GeoPointLike]] interface.\n */\nexport function isGeoPointLike(geoPoint: any): geoPoint is GeoPointLike {\n    if (Array.isArray(geoPoint)) {\n        const [longitude, latitude, altitude] = geoPoint;\n        return (\n            typeof longitude === \"number\" &&\n            typeof latitude === \"number\" &&\n            (altitude === undefined || typeof altitude === \"number\")\n        );\n    }\n    return false;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `LatLng` like interface.\n */\nexport interface LatLngLike {\n    /** The latitude in degrees. */\n    lat: number;\n\n    /** The longitude in degrees. */\n    lng: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[LatLngLike]] interface.\n */\nexport function isLatLngLike(object: any): object is LatLngLike {\n    return object && typeof object.lat === \"number\" && typeof object.lng === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass EquirectangularProjection extends Projection {\n    static geoToWorldScale: number = 1.0 / (2.0 * Math.PI);\n    static worldToGeoScale: number = (2.0 * Math.PI) / 1.0;\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale / 2;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (result === undefined) {\n            /*\n             * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n             * might be a concrete class which is not available at runtime.\n             * Consider the following example:\n             *\n             *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n             *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n             *\n             * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n             */\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x =\n            (THREE.Math.degToRad(geoPoint.longitude) + Math.PI) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.y =\n            (THREE.Math.degToRad(geoPoint.latitude) + Math.PI * 0.5) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            (worldPoint.y * EquirectangularProjection.worldToGeoScale) / this.unitScale -\n                Math.PI * 0.5,\n            (worldPoint.x * EquirectangularProjection.worldToGeoScale) / this.unitScale - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(\n            new GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0)\n        );\n        const { latitudeSpanInRadians, longitudeSpanInRadians, altitudeSpan } = geoBox;\n        const sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        const sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - sizeX * 0.5 * this.unitScale;\n            result.min.y = worldCenter.y - sizeY * 0.5 * this.unitScale;\n            result.max.x = worldCenter.x + sizeX * 0.5 * this.unitScale;\n            result.max.y = worldCenter.y + sizeY * 0.5 * this.unitScale;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = sizeX * 0.5 * this.unitScale;\n            result.extents.y = sizeY * 0.5 * this.unitScale;\n            result.extents.z = Math.max(Number.EPSILON, (altitudeSpan || 0) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to unit coordinates and vice\n * versa.\n */\nexport const normalizedEquirectangularProjection: Projection = new EquirectangularProjection(1);\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexport const equirectangularProjection: Projection = new EquirectangularProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\n/**\n *\n * https://en.wikipedia.org/wiki/Transverse_Mercator_projection\n * http://mathworld.wolfram.com/MercatorProjection.html\n *\n */\nclass TransverseMercatorProjection extends Projection {\n    /**\n     * Like in regular Mercator projection, there are two points on sphere\n     * with radius about 5 degrees, that is out of projected space.\n     *\n     *\n     * in regular Mercator these points are:\n     *     (90, any), (-90, any)\n     *\n     * and in transverse Mercator:\n     *     (0, 90), (0, -90)\n     *\n     * So, in transverse we need to compute distnce to poles, and clamp if\n     * radius is exceeded\n     */\n    static clampGeoPoint(geoPoint: GeoCoordinatesLike, unitScale: number) {\n        const lat = geoPoint.latitude;\n        const lon = geoPoint.longitude;\n\n        const r = TransverseMercatorUtils.POLE_RADIUS;\n        const rsq = TransverseMercatorUtils.POLE_RADIUS_SQ;\n\n        const nearestQuarter = Math.round(lon / 90);\n        const deltaLon = nearestQuarter * 90 - lon;\n        if (nearestQuarter % 2 === 0 || Math.abs(deltaLon) > r) {\n            return geoPoint;\n        }\n\n        const deltaLat = lat - 0;\n        const distanceToPoleSq = deltaLon * deltaLon + deltaLat * deltaLat;\n        if (distanceToPoleSq < rsq) {\n            const distanceToPole = Math.sqrt(distanceToPoleSq);\n            const scale = (r - distanceToPole) / distanceToPole;\n            // const quarter = ((nearestQuarter % 4) + 4) % 4;\n            // const dir = quarter === 1 ? -1 : quarter === 3 ? 1 : 0;\n            const dir = 1;\n            const offsetLon = deltaLon === 0 && deltaLat === 0 ? r * dir : deltaLon;\n            return new GeoCoordinates(lat + deltaLat * scale, lon + offsetLon * scale);\n        }\n\n        return geoPoint;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    private m_phi0: number = 0;\n    private m_lambda0: number = 0;\n\n    constructor(readonly unitScale: number) {\n        super(unitScale);\n    }\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh((worldPoint.x / this.unitScale - 0.5) * 2 * Math.PI);\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        const clamped = TransverseMercatorProjection.clampGeoPoint(geoPoint, this.unitScale);\n        const normalLon = clamped.longitude / 360 + 0.5;\n        const offset = normalLon === 1 ? 0 : Math.floor(normalLon);\n        const phi = MathUtils.degToRad(clamped.latitude);\n        const lambda = MathUtils.degToRad(clamped.longitude - offset * 360) - this.m_lambda0;\n\n        const B = Math.cos(phi) * Math.sin(lambda);\n        // result.x = 1/2 * Math.log((1 + B) / (1 - B));\n        result.x = Math.atanh(B);\n        result.y = Math.atan2(Math.tan(phi), Math.cos(lambda)) - this.m_phi0;\n\n        const outScale = 0.5 / Math.PI;\n        result.x = this.unitScale * (MathUtils.clamp(result.x * outScale + 0.5, 0, 1) + offset);\n        result.y = this.unitScale * MathUtils.clamp(result.y * outScale + 0.5, 0, 1);\n\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const tau = Math.PI * 2;\n        const nx = worldPoint.x / this.unitScale;\n        const ny = worldPoint.y / this.unitScale;\n        const offset = nx === 1 ? 0 : Math.floor(nx);\n        const x = tau * (nx - 0.5 - offset);\n        const y = tau * (ny - 0.5);\n        const z = worldPoint.z || 0;\n\n        const D = y + this.m_phi0;\n\n        const phi = Math.asin(Math.sin(D) / Math.cosh(x));\n        const lambda = this.m_lambda0 + Math.atan2(Math.sinh(x), Math.cos(D)) + offset * tau;\n\n        const geoPoint = GeoCoordinates.fromRadians(phi, lambda, z);\n        return geoPoint;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const { north, south, east, west } = geoBox;\n\n        const pointsToCheck = [\n            geoBox.center,\n            geoBox.northEast,\n            geoBox.southWest,\n            new GeoCoordinates(south, east),\n            new GeoCoordinates(north, west)\n        ];\n\n        const E = TransverseMercatorUtils.POLE_EDGE_DEG;\n\n        const containsWestCut = west < -90 && east > -90;\n        const containsEastCut = west < 90 && east > 90;\n        const containsCenterX = west < 0 && east > 0;\n        const containsCenterY = west < E && east > -E && north > 0 && south < 0;\n\n        if (containsWestCut) {\n            pointsToCheck.push(new GeoCoordinates(north, -90));\n            pointsToCheck.push(new GeoCoordinates(south, -90));\n        }\n\n        if (containsEastCut) {\n            pointsToCheck.push(new GeoCoordinates(north, 90));\n            pointsToCheck.push(new GeoCoordinates(south, 90));\n        }\n\n        if (containsCenterX) {\n            pointsToCheck.push(new GeoCoordinates(north, 0));\n            pointsToCheck.push(new GeoCoordinates(south, 0));\n        }\n\n        if (containsCenterY) {\n            pointsToCheck.push(new GeoCoordinates(0, west));\n            pointsToCheck.push(new GeoCoordinates(0, east));\n        }\n\n        TransverseMercatorUtils.alignLatitude(pointsToCheck, pointsToCheck[0]);\n\n        const projected = pointsToCheck.map(p => this.projectPoint(p));\n        const vx = projected.map(p => p.x);\n        const vy = projected.map(p => p.y);\n        const vz = projected.map(p => p.z);\n\n        const minX = Math.min(...vx);\n        const minY = Math.min(...vy);\n        const minZ = Math.min(...vz);\n        const maxX = Math.max(...vx);\n        const maxY = Math.max(...vy);\n        const maxZ = Math.max(...vz);\n\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = minX;\n            result.min.y = minY;\n            result.min.z = minZ;\n            result.max.x = maxX;\n            result.max.y = maxY;\n            result.max.z = maxZ;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (minX + maxX) / 2;\n            result.position.y = (minY + maxY) / 2;\n            result.position.z = (minZ + maxZ) / 2;\n            result.extents.x = (maxX - minX) / 2;\n            result.extents.y = (maxY - minY) / 2;\n            result.extents.z = (maxZ - minZ) / 2;\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /**\n     * There are 8 sub-regions on entire projection space\n     * where both longitude and latitude preserve direction.\n     * If bounding box hits more than one region, it should be splitted\n     * into sub-boxes by regions, (un)projected and then united again.\n     *\n     *\n     * directions in form [latitude / longitude]:\n     *    1 ┌─────────|─────────┐\n     *      │ dr / dl | dl / ul │\n     * 0.75 ----------|----------\n     *      │ ur / dr | ul / ur │\n     * 0.5  ----------|----------\n     *      │ ul / ur | ur / dr │\n     * 0.25 ----------|----------\n     *      │ dl / ul | dr / dl │\n     *      └─────────|─────────┘\n     *     0         0.5        1\n     *     @override\n     */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const s = this.unitScale;\n\n        const min = worldBox.min;\n        const max = worldBox.max;\n        const pointsToCheck = [\n            { x: (min.x + max.x) / 2, y: (min.y + max.y) / 2, z: 0 },\n            min,\n            max,\n            { x: min.x, y: max.y, z: 0 },\n            { x: max.x, y: min.y, z: 0 }\n        ];\n\n        const center = 0.5 * s;\n        const lowerQ = 0.25 * s;\n        const upperQ = 0.75 * s;\n\n        const containsCenterX = min.x < center && max.x > center;\n        const containsCenterY = min.y < center && max.y > center;\n        const containsLowerQY = min.y < lowerQ && max.y > lowerQ;\n        const containsUpperQY = min.y < upperQ && max.y > upperQ;\n\n        if (containsCenterY) {\n            pointsToCheck.push({ x: min.x, y: center, z: 0 });\n            pointsToCheck.push({ x: max.x, y: center, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: center, z: 0 });\n            }\n        }\n        if (containsLowerQY) {\n            pointsToCheck.push({ x: min.x, y: lowerQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: lowerQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: lowerQ, z: 0 });\n            }\n        }\n        if (containsUpperQY) {\n            pointsToCheck.push({ x: min.x, y: upperQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: upperQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: upperQ, z: 0 });\n            }\n        }\n\n        const geoPoints = pointsToCheck.map(p => this.unprojectPoint(p));\n        TransverseMercatorUtils.alignLongitude(geoPoints, geoPoints[0]);\n\n        const latitudes = geoPoints.map(g => g.latitude);\n        const longitudes = geoPoints.filter(g => Math.abs(g.latitude) < 90).map(g => g.longitude);\n        const altitudes = geoPoints.map(g => g.altitude || 0);\n\n        const minGeo = new GeoCoordinates(\n            Math.min(...latitudes),\n            Math.min(...longitudes),\n            Math.min(...altitudes)\n        );\n\n        const maxGeo = new GeoCoordinates(\n            Math.max(...latitudes),\n            Math.max(...longitudes),\n            Math.max(...altitudes)\n        );\n\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n}\n\nexport class TransverseMercatorUtils {\n    static POLE_EDGE: number = 1.4844222297453323;\n    static POLE_EDGE_DEG: number = MathUtils.radToDeg(TransverseMercatorUtils.POLE_EDGE);\n    static POLE_RADIUS: number = 90 - TransverseMercatorUtils.POLE_EDGE_DEG;\n    static POLE_RADIUS_SQ: number = Math.pow(TransverseMercatorUtils.POLE_RADIUS, 2);\n\n    /**\n     * There are two regions on projected space that have same geo coordinates,\n     * it's the entire lines   { x: [0..1], y: 0 } and { x: [0..1], y: 1 }\n     * they both have geo coordinates of   (0, [-90..+90])\n     * and should be aligned somehow to fall into first or second region\n     * to make proper bounding boxes, tile bounds, etc.\n     */\n    static alignLatitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const EPSILON = 1e-9;\n\n        for (const point of points) {\n            if (point.latitude === 0) {\n                point.latitude = referencePoint.latitude * EPSILON;\n            }\n        }\n    }\n\n    /**\n     * There are two regions on projected plane,\n     * { x: 0.5, y: [0..0.25] }    and    { x: 0.5, y: [0.75..1] }\n     * that represent longitude edge where -180 and +180 met.\n     * Points falling in this regions should be aligned to get proper boxes etc.\n     */\n    static alignLongitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const bad = referencePoint.longitude < 0 ? 180 : -180;\n        const good = referencePoint.longitude < 0 ? -180 : 180;\n\n        for (const point of points) {\n            if (point.longitude === bad) {\n                point.longitude = good;\n            }\n        }\n    }\n}\n\n/**\n * Transverse Mercator [[Projection]] used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const transverseMercatorProjection: Projection = new TransverseMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nexport class FlatTileBoundingBoxGenerator {\n    private readonly m_tilingScheme: TilingScheme;\n    private readonly m_worldDimensions: Vector3Like;\n    private readonly m_worldBox: Box3Like;\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme The [[TilingScheme]] used to compute bounding boxes.\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     */\n    constructor(\n        readonly tilingScheme: TilingScheme,\n        readonly minElevation: number = 0,\n        readonly maxElevation: number = 0\n    ) {\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        const { min, max } = this.m_worldBox;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n\n    /**\n     * Returns the [[Projection]] of the [[TilingScheme]].\n     */\n    get projection(): Projection {\n        return this.m_tilingScheme.projection;\n    }\n\n    /**\n     * Returns the [[SubdivisionScheme]] of the [[TilingScheme]].\n     */\n    get subdivisionScheme(): SubdivisionScheme {\n        return this.m_tilingScheme.subdivisionScheme;\n    }\n\n    /**\n     * Returns the bounding box in world coordinates of the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey The TileKey.\n     * @param result The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        const level = tileKey.level;\n        const levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        const levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        const sizeX = this.m_worldDimensions.x / levelDimensionX;\n        const sizeY = this.m_worldDimensions.y / levelDimensionY;\n        const originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        const originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n\n        if (!result) {\n            result = MathUtils.newEmptyBox3();\n        }\n\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey The [[TileKey]].\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        const worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass HalfQuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(level: number): number {\n        return level === 0 ? 1 : 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return level !== 0 ? 1 << (level - 1) : 1;\n    }\n}\n\n/**\n * A [[SubdivisionScheme]] used to represent half quadtrees. This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexport const halfQuadTreeSubdivisionScheme: SubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"./TileKey\";\n\nexport class SubTiles implements Iterable<TileKey> {\n    constructor(public tileKey: TileKey, public sizeX: number, public sizeY: number) {}\n\n    [Symbol.iterator](): Iterator<TileKey> {\n        return this.sizeX === 2 && this.sizeY === 2\n            ? SubTiles.ZCurveIterator(this.tileKey)\n            : SubTiles.RowColumnIterator(this.tileKey, this.sizeX, this.sizeY);\n    }\n}\n\nexport namespace SubTiles {\n    export function* RowColumnIterator(\n        parentKey: TileKey,\n        sizeX: number,\n        sizeY: number\n    ): Iterator<TileKey> {\n        for (let y = 0; y < sizeY; y++) {\n            for (let x = 0; x < sizeX; x++) {\n                yield TileKey.fromRowColumnLevel(\n                    parentKey.row * sizeY + y,\n                    parentKey.column * sizeX + x,\n                    parentKey.level + 1\n                );\n            }\n        }\n    }\n\n    export function* ZCurveIterator(parentKey: TileKey): Iterator<TileKey> {\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < 4; i++) {\n            yield TileKey.fromRowColumnLevel(\n                (parentKey.row << 1) | (i >> 1),\n                (parentKey.column << 1) | (i & 1),\n                parentKey.level + 1\n            );\n        }\n        // tslint:enableno-bitwise\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nexport class TileKeyUtils {\n    static geoCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        geoPoint: GeoCoordinatesLike,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const worldPoint = projection.projectPoint(geoPoint);\n\n        return this.worldCoordinatesToTileKey(tilingScheme, worldPoint, level);\n    }\n\n    static worldCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        worldPoint: Vector3Like,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const subdivisionScheme = tilingScheme.subdivisionScheme;\n\n        const cx = subdivisionScheme.getLevelDimensionX(level);\n        const cy = subdivisionScheme.getLevelDimensionY(level);\n\n        const { min, max } = projection.worldExtent(0, 0);\n        const worldSizeX = max.x - min.x;\n        const worldSizeY = max.y - min.y;\n\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n\n        const column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        const row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    static geoRectangleToTileKeys(\n        tilingScheme: TilingScheme,\n        geoBox: GeoBox,\n        level: number\n    ): TileKey[] {\n        const wrap = (value: number, lower: number, upper: number) => {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n\n            return lower + ((value - lower) % (upper - lower));\n        };\n\n        const clamp = (x: number, minVal: number, maxVal: number) => {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n\n        // Clamp at the poles and wrap around the international date line.\n        const southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        const southWestLatitude = clamp(\n            geoBox.southWest.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        const northEastLatitude = clamp(\n            geoBox.northEast.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const minTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude),\n            level\n        );\n        const maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude),\n            level\n        );\n        const columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n\n        const minColumn = minTileKey.column;\n        let maxColumn = maxTileKey.column;\n\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            } else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n\n        const minRow = Math.min(minTileKey.row, maxTileKey.row);\n        const maxRow = Math.max(minTileKey.row, maxTileKey.row);\n\n        const keys = new Array<TileKey>();\n\n        for (let row = minRow; row <= maxRow; ++row) {\n            for (let column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n\n        return keys;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { SubTiles } from \"./SubTiles\";\nimport { TileKey } from \"./TileKey\";\n\nexport class TileTreeTraverse {\n    private m_subdivisionScheme: SubdivisionScheme;\n\n    constructor(subdivisionScheme: SubdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n\n    subTiles(tileKey: TileKey): Iterable<TileKey> {\n        const divX = this.m_subdivisionScheme.getSubdivisionX(tileKey.level);\n        const divY = this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n\n        return new SubTiles(tileKey, divX, divY);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    isJsonExpr,\n    JsonExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ExprPool } from \"./ExprPool\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedProperty\";\nimport { interpolatedPropertyDefinitionToJsonExpr } from \"./InterpolatedPropertyDefs\";\nimport { AttrScope, mergeTechniqueDescriptor, TechniquePropNames } from \"./TechniqueDescriptor\";\nimport { IndexedTechnique, Technique, techniqueDescriptors } from \"./Techniques\";\nimport {\n    Definitions,\n    isActualSelectorDefinition,\n    isJsonExprReference,\n    LineStyle,\n    Style,\n    StyleDeclaration,\n    StyleSelector,\n    StyleSet\n} from \"./Theme\";\n\nconst logger = LoggerManager.instance.create(\"StyleSetEvaluator\");\n\nconst emptyTechniqueDescriptor = mergeTechniqueDescriptor<Technique>({});\n\ninterface StyleInternalParams {\n    /**\n     * Optimization: Lazy creation and storage of expression in a style object.\n     */\n    _whenExpr?: Expr;\n    _minZoomLevelExpr?: Expr;\n    _maxZoomLevelExpr?: Expr;\n\n    _staticAttributes?: Array<[string, Value]>;\n\n    /**\n     * These attributes are used to instantiate Technique variants.\n     *\n     * @see [[TechiqueDescriptor.techniquePropNames]]\n     */\n    _dynamicTechniqueAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes must be evaluated basing with feature env.\n     *\n     * They are not propagated to rendering scope.\n     *\n     * @see [[TechniqueAttrScope.Feature]]\n     */\n    _dynamicFeatureAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes are forwarded as serialized by decoder to main thread, so they are resolved\n     * directly in render loop.\n     *\n     * Will contain attributes from these lists\n     *  - interpolants from [[TechiqueDescriptor.techniquePropNames]]\n     *  - expressions [[TechniqueDescriptor.dynamicPropNames]] (Future)\n     */\n    _dynamicForwardedAttributes?: Array<[string, Expr]>;\n    _dynamicTechniques?: Map<string, IndexedTechnique>;\n\n    /**\n     * Optimization: Index into table in StyleSetEvaluator.\n     * @hidden\n     */\n    _staticTechnique?: IndexedTechnique;\n\n    /**\n     * Optimization: StyleSet index.\n     * @hidden\n     */\n    _styleSetIndex?: number;\n\n    /**\n     * Optimization: Requested $geometryType.\n     * @hidden\n     */\n    _geometryType?: string;\n}\n\ntype InternalStyle = Style & StyleSelector & StyleInternalParams;\n\n/**\n * [[StyleConditionClassifier]] searches for usages of `$layer` in `when` conditions\n * associated with styling rules.\n *\n * @hidden\n */\nclass StyleConditionClassifier implements ExprVisitor<Expr | undefined, Expr | undefined> {\n    private _style!: InternalStyle;\n\n    classify(style: InternalStyle) {\n        if (style._whenExpr) {\n            const savedStyle = this.switchStyle(style);\n            style._whenExpr = style._whenExpr.accept(this, undefined);\n            this._style = savedStyle;\n        }\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitContainsExpr(expr: ContainsExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCaseExpr(expr: CaseExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCallExpr(call: CallExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        if (call.op === \"all\") {\n            // processing of an `[\"all\", e1, e2, ... eN]` expression. In this case\n            // search for expressions matching comparison of `$layer` and string literals\n            // in the sub expressions.\n            const children = call.args\n                .map(childExpr => childExpr.accept(this, call))\n                .filter(childExpr => childExpr !== undefined) as Expr[];\n\n            return new CallExpr(call.op, children);\n        } else if (enclosingExpr) {\n            // `call` is a direct child expression of an `\"all\"` operator.\n            const matched = this.matchVarStringComparison(call);\n\n            if (matched) {\n                if (this._style.layer === undefined && matched.name === \"$layer\") {\n                    // found a subexpression `[\"==\", [\"get\", \"$layer\"], \"some layer name\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $layer in\n                    // [[StyleInternalParams]].\n\n                    this._style.layer = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                } else if (\n                    this._style._geometryType === undefined &&\n                    matched.name === \"$geometryType\"\n                ) {\n                    // found a subexpression `[\"==\", [\"get\", \"$geometryType\"], \"geometry\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $geometryType in\n                    // [[StyleInternalParams]].\n\n                    this._style._geometryType = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                }\n            }\n        }\n\n        return call;\n    }\n\n    /**\n     * Tests if the given `call` matches the structure [\"==\", [\"get\", name], value].\n     * If a match is found returns an object containing the `name` and the `value`;\n     *\n     * @param call The expression to match.\n     */\n    private matchVarStringComparison(call: CallExpr) {\n        if (call.op === \"==\") {\n            const left = call.args[0];\n            const right = call.args[1];\n\n            if (left instanceof VarExpr && right instanceof StringLiteralExpr) {\n                return { name: left.name, value: right.value };\n            }\n\n            if (right instanceof VarExpr && left instanceof StringLiteralExpr) {\n                return { name: right.name, value: left.value };\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sets the given `style` as current.\n     *\n     * @returns The previous `style`.\n     */\n    private switchStyle(style: InternalStyle) {\n        const saved = this._style;\n        this._style = style;\n        return saved;\n    }\n}\n\nclass OptimizedSubSetKey {\n    key: string;\n    layer: string | undefined;\n    geometryType: string | undefined;\n\n    cachedStyleSet?: InternalStyle[];\n\n    constructor(layer?: string | undefined, geometryType?: string | undefined) {\n        this.key = \"\";\n        this.set(layer, geometryType);\n    }\n\n    set(\n        layer: string | undefined,\n        geometryType: string | undefined,\n        env?: Env\n    ): OptimizedSubSetKey {\n        let keyUpdateNeeded: boolean = false;\n        if (layer === undefined) {\n            const envLayer = env !== undefined ? env.lookup(\"$layer\") : undefined;\n            layer = typeof envLayer === \"string\" ? envLayer : undefined;\n        }\n        if (this.layer !== layer) {\n            this.layer = layer;\n            keyUpdateNeeded = true;\n        }\n\n        if (geometryType === undefined) {\n            const envGeometryType = env !== undefined ? env.lookup(\"$geometryType\") : undefined;\n            geometryType = typeof envGeometryType === \"string\" ? envGeometryType : undefined;\n        }\n        if (this.geometryType !== geometryType) {\n            this.geometryType = geometryType;\n            keyUpdateNeeded = true;\n        }\n\n        if (keyUpdateNeeded) {\n            this.updateKey();\n        }\n        return this;\n    }\n\n    private updateKey() {\n        if (this.layer !== undefined) {\n            // tslint:disable-next-line:prefer-conditional-expression\n            if (this.geometryType !== undefined) {\n                this.key = `${this.layer}:${this.geometryType}`;\n            } else {\n                this.key = `${this.layer}:`;\n            }\n        } else {\n            if (this.geometryType !== undefined) {\n                this.key = `:${this.geometryType}`;\n            } else {\n                this.key = \"all\";\n            }\n        }\n        this.cachedStyleSet = undefined;\n    }\n}\n\n/**\n * Combine data from datasource and apply the rules from a specified theme to show it on the map.\n */\nexport class StyleSetEvaluator {\n    readonly styleSet: InternalStyle[];\n\n    private readonly m_techniques: IndexedTechnique[] = [];\n    private readonly m_exprPool = new ExprPool();\n    private readonly m_cachedResults = new Map<Expr, Value>();\n    private readonly m_styleConditionClassifier = new StyleConditionClassifier();\n    private readonly m_subStyleSetCache = new Map<string, InternalStyle[]>();\n    private readonly m_definitions?: Definitions;\n    private readonly m_definitionExprCache = new Map<string, Expr>();\n    private readonly m_tmpOptimizedSubSetKey: OptimizedSubSetKey = new OptimizedSubSetKey();\n    private readonly m_emptyEnv = new Env();\n    private m_layer: string | undefined;\n    private m_geometryType: string | undefined;\n    private m_zoomLevel: number | undefined;\n\n    constructor(styleSet: StyleSet, definitions?: Definitions) {\n        this.m_definitions = definitions;\n        this.styleSet = resolveReferences(styleSet, definitions);\n        computeDefaultRenderOrder(this.styleSet);\n        this.compileStyleSet();\n    }\n\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     * @param layer The optional layer name used to filter techniques.\n     * @param geometryType The optional geometryType used to filter techniques.\n     */\n    getMatchingTechniques(\n        env: Env,\n        layer?: string | undefined,\n        geometryType?: string | undefined\n    ): IndexedTechnique[] {\n        const result: IndexedTechnique[] = [];\n        this.m_cachedResults.clear();\n\n        const optimizedSubSetKey = this.m_tmpOptimizedSubSetKey;\n        optimizedSubSetKey.set(layer, geometryType, env);\n\n        // get the requested $layer and $geometryType, if any.\n        this.m_layer = optimizedSubSetKey.layer;\n        this.m_geometryType = optimizedSubSetKey.geometryType;\n        this.m_zoomLevel = env.lookup(\"$zoom\") as number | undefined;\n\n        const searchedStyleSet = this.getOptimizedStyleSet(optimizedSubSetKey);\n\n        for (const currStyle of searchedStyleSet) {\n            if (this.processStyle(env, currStyle, result)) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to `layer`.\n     *\n     * @param layer name of layer\n     */\n    wantsLayer(layer: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, undefined)).length > 0\n        );\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to particular `[layer, geometryType]` pair.\n     *\n     * @param layer name of layer\n     * @param geometryType type of layer - `point`, `line` or `polygon`\n     */\n    wantsFeature(layer: string, geometryType?: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, geometryType))\n                .length > 0\n        );\n    }\n\n    /**\n     * Get the expression evaluation cache, for further feature processing.\n     *\n     * This object is valid until next `getMatchingTechniques` call.\n     */\n    get expressionEvaluatorCache() {\n        return this.m_cachedResults;\n    }\n\n    /**\n     * Reset array of techniques.\n     *\n     * Cleans technique array and indices, so it doesn't accumulate accross several decoding runs.\n     */\n    resetTechniques() {\n        for (const techinque of this.m_techniques) {\n            techinque._index = undefined!;\n        }\n        this.m_techniques.length = 0;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get techniques(): IndexedTechnique[] {\n        return this.m_techniques;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get decodedTechniques(): IndexedTechnique[] {\n        return this.m_techniques.map(makeDecodedTechnique);\n    }\n\n    private getOptimizedStyleSet(subSetKey: OptimizedSubSetKey): InternalStyle[] {\n        if (subSetKey.cachedStyleSet !== undefined) {\n            return subSetKey.cachedStyleSet;\n        }\n        let optimizedStyleSet = this.m_subStyleSetCache.get(subSetKey.key);\n        if (optimizedStyleSet !== undefined) {\n            subSetKey.cachedStyleSet = optimizedStyleSet;\n            return optimizedStyleSet;\n        }\n        optimizedStyleSet = this.createPreFilteredStyleSet(subSetKey);\n        this.m_subStyleSetCache.set(subSetKey.key, optimizedStyleSet);\n        subSetKey.cachedStyleSet = optimizedStyleSet;\n        return optimizedStyleSet;\n    }\n\n    private createPreFilteredStyleSet(subSetKey: OptimizedSubSetKey) {\n        const { layer, geometryType } = subSetKey;\n\n        return this.styleSet.filter(style => {\n            if (layer !== undefined && style.layer !== undefined && style.layer !== layer) {\n                return false;\n            }\n            if (\n                geometryType !== undefined &&\n                style._geometryType !== undefined &&\n                style._geometryType !== geometryType\n            ) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Compile the `when` conditions found when traversting the styling rules.\n     */\n    private compileStyleSet() {\n        this.styleSet.forEach(style => this.compileStyle(style));\n\n        // Create optimized styleSets for each `layer` & `geometryType` tuple.\n        this.styleSet.forEach(style => {\n            this.getOptimizedStyleSet(\n                this.m_tmpOptimizedSubSetKey.set(style.layer, style._geometryType)\n            );\n        });\n    }\n\n    /**\n     * Compile the `when` conditions reachable from the given `style`.\n     *\n     * @param style The current style.\n     */\n    private compileStyle(style: InternalStyle) {\n        if (style.when !== undefined) {\n            try {\n                style._whenExpr = Array.isArray(style.when)\n                    ? Expr.fromJSON(style.when, this.m_definitions, this.m_definitionExprCache)\n                    : Expr.parse(style.when);\n\n                // search for usages of '$layer' and any other\n                // special symbol that can be used to speed up the evaluation\n                // of the `when` conditions associated to this `style`.\n                this.m_styleConditionClassifier.classify(style);\n\n                if (style._whenExpr !== undefined) {\n                    style._whenExpr = style._whenExpr.intern(this.m_exprPool);\n                }\n\n                if (isJsonExpr(style.minZoomLevel)) {\n                    style._minZoomLevelExpr = Expr.fromJSON(style.minZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n\n                if (isJsonExpr(style.maxZoomLevel)) {\n                    style._maxZoomLevelExpr = Expr.fromJSON(style.maxZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n            } catch (err) {\n                logger.log(\n                    \"failed to evaluate expression\",\n                    JSON.stringify(style.when),\n                    \"error\",\n                    String(err)\n                );\n            }\n        }\n    }\n\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param style Current style (could also be top of stack).\n     * @param result The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    private processStyle(env: Env, style: InternalStyle, result: Technique[]): boolean {\n        if (!this.checkZoomLevel(env, style)) {\n            return false;\n        }\n\n        if (\n            this.m_layer !== undefined &&\n            style.layer !== undefined &&\n            style.layer !== this.m_layer\n        ) {\n            return false;\n        }\n        if (\n            this.m_geometryType !== undefined &&\n            style._geometryType !== undefined &&\n            style._geometryType !== this.m_geometryType\n        ) {\n            return false;\n        }\n\n        if (style._whenExpr) {\n            try {\n                if (!style._whenExpr.evaluate(env, ExprScope.Condition, this.m_cachedResults)) {\n                    // Stop processing this styling rule. The `when` condition\n                    // associated with the current `style` evaluates to false so\n                    // no techinque defined by this style should be applied.\n                    return false;\n                }\n            } catch (error) {\n                logger.error(\n                    `failed to evaluate expression '${JSON.stringify(style.when)}': ${error}`\n                );\n                return false;\n            }\n        }\n\n        if (style.technique === undefined) {\n            return false;\n        }\n        // we found a technique!\n        if (style.technique !== \"none\") {\n            result.push(this.getTechniqueForStyleMatch(env, style));\n        }\n        // stop processing if \"final\" is set\n        return style.final === true;\n    }\n\n    private checkZoomLevel(env: Env, style: InternalStyle) {\n        if (style.minZoomLevel === undefined && style.maxZoomLevel === undefined) {\n            return true;\n        }\n\n        const zoomLevel = this.m_zoomLevel;\n        if (zoomLevel === undefined) {\n            return true;\n        }\n\n        if (style.minZoomLevel !== undefined) {\n            let minZoomLevel: Value = style.minZoomLevel;\n\n            if (style._minZoomLevelExpr) {\n                // the constraint is defined as expression, evaluate it and\n                // use its value\n                try {\n                    minZoomLevel = style._minZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._minZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n                return false;\n            }\n        }\n\n        if (style.maxZoomLevel !== undefined) {\n            let maxZoomLevel: Value = style.maxZoomLevel;\n\n            if (style._maxZoomLevelExpr) {\n                try {\n                    maxZoomLevel = style._maxZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._maxZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof maxZoomLevel === \"number\" && zoomLevel > maxZoomLevel) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private getTechniqueForStyleMatch(env: Env, style: InternalStyle) {\n        this.checkStyleDynamicAttributes(style);\n\n        let technique: IndexedTechnique | undefined;\n        if (style._dynamicTechniques !== undefined) {\n            const dynamicAttributes = this.evaluateTechniqueProperties(style, env);\n            const key = this.getDynamicTechniqueKey(style, dynamicAttributes);\n            technique = style._dynamicTechniques!.get(key);\n            if (technique === undefined) {\n                technique = this.createTechnique(style, key, dynamicAttributes);\n                style._dynamicTechniques!.set(key, technique);\n            }\n        } else {\n            technique = style._staticTechnique;\n            if (technique === undefined) {\n                style._staticTechnique = technique = this.createTechnique(\n                    style,\n                    `${style._styleSetIndex}`,\n                    []\n                ) as IndexedTechnique;\n            }\n        }\n\n        if (technique._index === undefined) {\n            technique._index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n        }\n        return technique;\n    }\n\n    private getDynamicTechniqueKey(\n        style: InternalStyle,\n        dynamicAttributes: Array<[string, Value]>\n    ) {\n        const dynamicAttrKey = dynamicAttributes\n            .map(([_attrName, attrValue]) => {\n                if (attrValue === undefined) {\n                    return \"U\";\n                } else {\n                    return JSON.stringify(attrValue);\n                }\n            })\n            .join(\":\");\n        return `${style._styleSetIndex!}:${dynamicAttrKey}`;\n    }\n\n    private checkStyleDynamicAttributes(style: InternalStyle) {\n        if (style._dynamicTechniqueAttributes !== undefined || style.technique === \"none\") {\n            return;\n        }\n\n        style._dynamicTechniqueAttributes = [];\n        style._dynamicFeatureAttributes = [];\n        style._dynamicForwardedAttributes = [];\n        style._staticAttributes = [];\n\n        const dynamicFeatureAttributes = style._dynamicFeatureAttributes;\n        const dynamicTechniqueAttributes = style._dynamicTechniqueAttributes;\n        const dynamicForwardedAttributes = style._dynamicForwardedAttributes;\n        const targetStaticAttributes = style._staticAttributes;\n\n        const techniqueDescriptor =\n            techniqueDescriptors[style.technique] || emptyTechniqueDescriptor;\n\n        const processAttribute = (\n            attrName: TechniquePropNames<Technique>,\n            attrValue: Value | JsonExpr | undefined\n        ) => {\n            if (attrValue === undefined) {\n                return;\n            }\n\n            if (isJsonExpr(attrValue)) {\n                attrValue = Expr.fromJSON(\n                    attrValue,\n                    this.m_definitions,\n                    this.m_definitionExprCache\n                ).intern(this.m_exprPool);\n            } else if (isInterpolatedPropertyDefinition(attrValue)) {\n                // found a property using an object-like interpolation definition.\n                attrValue = Expr.fromJSON(\n                    interpolatedPropertyDefinitionToJsonExpr(attrValue)\n                ).intern(this.m_exprPool);\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const deps = attrValue.dependencies();\n\n                if (!deps.zoom && deps.properties.size === 0) {\n                    // no data-dependencies detected.\n                    attrValue = attrValue.evaluate(this.m_emptyEnv);\n                }\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                let attrScope: AttrScope | undefined = (techniqueDescriptor.attrScopes as any)[\n                    attrName as any\n                ];\n\n                if (attrScope === undefined) {\n                    // Use [[AttrScope.TechniqueGeometry]] as default scope for the attribute.\n                    attrScope = AttrScope.TechniqueGeometry;\n                }\n\n                const deps = attrValue.dependencies();\n\n                switch (attrScope) {\n                    case AttrScope.FeatureGeometry:\n                        dynamicFeatureAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueGeometry:\n                        dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueRendering:\n                        if (deps.properties.size === 0) {\n                            dynamicForwardedAttributes.push([attrName, attrValue]);\n                        } else {\n                            dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        }\n                        break;\n                }\n            } else if (attrValue !== undefined && attrValue !== null) {\n                targetStaticAttributes.push([attrName, attrValue]);\n            }\n        };\n\n        processAttribute(\"renderOrder\", style.renderOrder);\n\n        // TODO: What the heck is that !?\n        processAttribute(\"label\", style.labelProperty);\n\n        // line & solid-line secondaryRenderOrder should be generic attr\n        // TODO: maybe just warn and force move it to `attr` ?\n        processAttribute(\"secondaryRenderOrder\", (style as LineStyle).secondaryRenderOrder);\n\n        if (style.attr !== undefined) {\n            for (const attrName in style.attr) {\n                if (!style.attr.hasOwnProperty(attrName)) {\n                    continue;\n                }\n                processAttribute(\n                    attrName as TechniquePropNames<Technique>,\n                    (style.attr as any)[attrName]\n                );\n            }\n        }\n\n        if (dynamicTechniqueAttributes.length > 0) {\n            style._dynamicTechniques = new Map();\n        }\n    }\n\n    private evaluateTechniqueProperties(style: InternalStyle, env: Env): Array<[string, Value]> {\n        if (style._dynamicTechniqueAttributes === undefined) {\n            return [];\n        }\n\n        const instantiationContext = { env };\n\n        return style._dynamicTechniqueAttributes.map(([attrName, attrExpr]) => {\n            try {\n                if (attrExpr.isDynamic()) {\n                    const reducedExpr = attrExpr.instantiate(instantiationContext);\n                    return [attrName, reducedExpr];\n                }\n\n                const evaluatedValue = attrExpr.evaluate(\n                    env,\n                    ExprScope.Value,\n                    this.m_cachedResults\n                );\n                return [attrName, evaluatedValue];\n            } catch (error) {\n                logger.error(`failed to evaluate expression '${attrExpr.toJSON()}': ${error}`);\n                return [attrName, null];\n            }\n        });\n    }\n\n    private createTechnique(\n        style: InternalStyle,\n        key: string,\n        dynamicAttrs: Array<[string, Value]>\n    ) {\n        const technique: any = {};\n        technique.name = style.technique;\n        if (style._staticAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._staticAttributes) {\n                if (attrValue !== null) {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n        for (const [attrName, attrValue] of dynamicAttrs) {\n            if (attrValue !== null) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicFeatureAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicFeatureAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicForwardedAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicForwardedAttributes) {\n                // tslint:disable-next-line: prefer-conditional-expression\n                if (Expr.isExpr(attrValue)) {\n                    technique[attrName] = attrValue.toJSON();\n                } else {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n\n        technique._index = this.m_techniques.length;\n        technique._styleSetIndex = style._styleSetIndex!;\n        technique._key = key;\n        this.m_techniques.push(technique as IndexedTechnique);\n        return technique as IndexedTechnique;\n    }\n}\n\nfunction computeDefaultRenderOrder(styleSet: InternalStyle[]) {\n    let techniqueRenderOrder = 0;\n    let styleSetIndex = 0;\n    for (const style of styleSet) {\n        style._styleSetIndex = styleSetIndex++;\n        if (style.technique !== undefined && style.renderOrder === undefined) {\n            style.renderOrder = techniqueRenderOrder++;\n        }\n    }\n}\n\nfunction resolveReferences(styleSet: StyleDeclaration[], definitions: Definitions | undefined) {\n    return styleSet.map(style => resolveStyleReferences(style, definitions));\n}\n\nfunction resolveStyleReferences(\n    style: StyleDeclaration,\n    definitions: Definitions | undefined\n): InternalStyle {\n    if (isJsonExpr(style)) {\n        if (!isJsonExprReference(style)) {\n            throw new Error(\"invalid expression in this context, only 'ref's are supported\");\n        }\n        // expand and instantiate references to style definitions.\n        const definitionName = style[1];\n        const def = definitions && definitions[definitionName];\n        if (!def) {\n            throw new Error(`invalid reference '${definitionName}' - not found`);\n        }\n        if (!isActualSelectorDefinition(def)) {\n            throw new Error(`invalid reference '${definitionName}' - expected style definition`);\n        }\n        // instantiate the style\n        return resolveStyleReferences(def, definitions);\n    }\n\n    return { ...style };\n}\n\n/**\n * Create transferable representation of dynamic technique.\n *\n * As for now, we remove all `Expr` as they are not supported on other side.\n */\nexport function makeDecodedTechnique(technique: IndexedTechnique): IndexedTechnique {\n    const result: Partial<IndexedTechnique> = {};\n    for (const attrName in technique) {\n        if (!technique.hasOwnProperty(attrName)) {\n            continue;\n        }\n        let attrValue: any = (technique as any)[attrName];\n        if (Expr.isExpr(attrValue)) {\n            attrValue = attrValue.toJSON();\n        }\n        (result as any)[attrName] = attrValue;\n    }\n    return (result as any) as IndexedTechnique;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { Env, Expr, ExprScope, MapEnv, Value } from \"./Expr\";\nimport { getPropertyValue, isInterpolatedProperty } from \"./InterpolatedProperty\";\nimport { InterpolatedProperty } from \"./InterpolatedPropertyDefs\";\n\nconst logger = LoggerManager.instance.create(\"TechniqueAttr\");\n\nexport interface AttrEvaluationContext {\n    /**\n     * Expression evaluation environment containing variable bindings.\n     */\n    env: MapEnv;\n\n    /**\n     * Storage level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    storageLevel: number;\n\n    /**\n     * Zoom level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    zoomLevel: number;\n\n    /**\n     * Optional, cache of expression results.\n     *\n     * @see [[Expr.evaluate]]\n     */\n    cachedExprResults?: Map<Expr, Value>;\n}\n\n/**\n * Evaluate feature attr _without_ default value.\n *\n * @returns actual value or `undefined`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | InterpolatedProperty | undefined\n): T | undefined;\n\n/**\n * Evaluate feature attr _with_ default value.\n *\n * @returns actual value or `defaultValue`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | InterpolatedProperty | undefined,\n    defaultValue: T\n): T;\n\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | InterpolatedProperty | undefined,\n    defaultValue?: T\n): T | undefined {\n    const env = context instanceof Env ? context : context.env;\n\n    let evaluated: Value | undefined;\n    if (Expr.isExpr(attrValue)) {\n        try {\n            evaluated = attrValue.evaluate(\n                env,\n                ExprScope.Dynamic,\n                !(context instanceof Env) ? context.cachedExprResults : undefined\n            );\n        } catch (error) {\n            logger.error(`failed to evaluate expression '${JSON.stringify(attrValue)}': ${error}`);\n            evaluated = undefined;\n        }\n    } else if (isInterpolatedProperty(attrValue)) {\n        const storageLevel =\n            context instanceof Env ? (context.lookup(\"$zoom\") as number) : context.zoomLevel;\n        evaluated = getPropertyValue(attrValue, storageLevel) as any;\n    } else {\n        evaluated = (attrValue as unknown) as Value;\n    }\n    if (evaluated === undefined || evaluated === null) {\n        return defaultValue;\n    } else {\n        return (evaluated as unknown) as T;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ThemedTileDecoder\";\nexport * from \"./lib/TileDecoderService\";\nexport * from \"./lib/TilerService\";\nexport * from \"./lib/WorkerService\";\nexport * from \"./lib/WorkerServiceManager\";\nexport * from \"./lib/GeoJsonTiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson, ITiler } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n\n// tslint:disable-next-line:no-var-requires\nconst geojsonvtExport = require(\"geojson-vt\");\n// to be able to run tests on nodejs\nconst geojsonvt = geojsonvtExport.default || geojsonvtExport;\n\ninterface GeoJsonVtIndex {\n    geojson: GeoJson;\n    getTile(level: number, column: number, row: number): any;\n}\n\nexport class GeoJsonTiler implements ITiler {\n    indexes: Map<string, GeoJsonVtIndex>;\n\n    constructor() {\n        this.indexes = new Map();\n    }\n\n    dispose() {\n        /* */\n    }\n\n    async connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    async registerIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (this.indexes.has(indexId)) {\n            return;\n        }\n        return this.updateIndex(indexId, input);\n    }\n\n    async updateIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (input instanceof URL) {\n            const response = await fetch(input.href);\n            if (!response.ok) {\n                throw new Error(\n                    `GeoJsonTiler: Unable to fetch ${input.href}: ${response.statusText}`\n                );\n            }\n            input = await response.json();\n        } else {\n            input = input as GeoJson;\n        }\n\n        const index = geojsonvt(input, {\n            maxZoom: 20, // max zoom to preserve detail on\n            indexMaxZoom: 5, // max zoom in the tile index\n            indexMaxPoints: 100000, // max number of points per tile in the tile index\n            tolerance: 3, // simplification tolerance (higher means simpler)\n            extent: 4096, // tile extent\n            buffer: 0, // tile buffer on each side\n            lineMetrics: false, // whether to calculate line metrics\n            promoteId: null, // name of a feature property to be promoted to feature.id\n            generateId: true, // whether to generate feature ids. Cannot be used with promoteId\n            debug: 0 // logging level (0, 1 or 2)\n        });\n        index.geojson = input;\n\n        this.indexes.set(indexId, index);\n    }\n\n    async getTile(indexId: string, tileKey: TileKey): Promise<{}> {\n        const index = this.indexes.get(indexId);\n        if (index === undefined) {\n            throw new Error(\"Tile not found\");\n        }\n        const tile = index.getTile(tileKey.level, tileKey.column, tileKey.row);\n        if (tile !== null) {\n            tile.layer = indexId;\n            for (const feature of tile.features) {\n                feature.originalGeometry = this.getOriginalGeometry(feature, index.geojson);\n            }\n        }\n        return tile || {};\n    }\n\n    private getOriginalGeometry(feature: any, geojson: GeoJson): any {\n        switch (geojson.type) {\n            case \"Point\":\n            case \"MultiPoint\":\n            case \"LineString\":\n            case \"MultiLineString\":\n            case \"Polygon\":\n            case \"MultiPolygon\":\n            case \"GeometryCollection\":\n                return geojson;\n            case \"Feature\":\n                return geojson.geometry;\n            case \"FeatureCollection\":\n                return geojson.features[feature.id].geometry;\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    FeatureGeometry,\n    GeometryCollection,\n    MapEnv,\n    ValueMap\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { GeoBox, GeoCoordinates, TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport { Vector2 } from \"three\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\n\nconst VT_JSON_EXTENTS = 4096;\n\ntype VTJsonPosition = [number, number];\n\nenum VTJsonGeometryType {\n    Unknown,\n    Point,\n    LineString,\n    Polygon\n}\n\ninterface VTJsonFeatureInterface {\n    geometry: VTJsonPosition[] | VTJsonPosition[][];\n    originalGeometry: FeatureGeometry | GeometryCollection;\n    id: string;\n    tags: ValueMap;\n    type: VTJsonGeometryType;\n}\n\ninterface VTJsonSourceInterface {\n    geometry: number[];\n    length: number;\n    id: string;\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    tags: ValueMap;\n    type: string;\n}\n\ninterface VTJsonTileInterface {\n    features: VTJsonFeatureInterface[];\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    numFeatures: number;\n    numPoints: number;\n    numSimplified: number;\n    source: VTJsonSourceInterface[];\n    transformed: boolean;\n    x: number;\n    y: number;\n    z: number;\n    layer: string;\n}\n\n/**\n * [[OmvDataAdapter]] id for [[VTJsonDataAdapter]].\n */\nexport const VTJsonDataAdapterId: string = \"vt-json\";\n\n/**\n * The class [[VTJsonDataAdapter]] converts VT-json data to geometries for the given\n * [[IGeometryProcessor]].\n */\nexport class VTJsonDataAdapter implements OmvDataAdapter {\n    id = VTJsonDataAdapterId;\n\n    constructor(\n        readonly m_processor: IGeometryProcessor,\n        private m_dataFilter?: OmvFeatureFilter,\n        readonly m_logger?: ILogger\n    ) {}\n\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        if (isArrayBufferLike(data)) {\n            return false;\n        }\n\n        const tile = data as VTJsonTileInterface;\n        if (\n            tile.features === undefined ||\n            tile.source === undefined ||\n            tile.x === undefined ||\n            tile.y === undefined ||\n            tile.z === undefined\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    process(tile: VTJsonTileInterface, tileKey: TileKey, geoBox: GeoBox) {\n        for (const feature of tile.features) {\n            const env = new MapEnv({\n                $layer: tile.layer,\n                $geometryType: this.convertGeometryType(feature.type),\n                $level: tileKey.level,\n                $zoom: Math.max(0, tileKey.level - (this.m_processor.storageLevelOffset || 0)),\n                $id: feature.id,\n                ...feature.tags\n            });\n\n            switch (feature.type) {\n                case VTJsonGeometryType.Point: {\n                    for (const pointGeometry of feature.geometry) {\n                        const x = (pointGeometry as VTJsonPosition)[0];\n                        const y = (pointGeometry as VTJsonPosition)[1];\n\n                        const position = new Vector2(x, y);\n\n                        this.m_processor.processPointFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [position],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.LineString: {\n                    let untiledPositions: GeoCoordinates[] | undefined;\n                    if (feature.originalGeometry.type === \"LineString\") {\n                        untiledPositions = [];\n                        for (const [x, y] of feature.originalGeometry.coordinates) {\n                            untiledPositions.push(new GeoCoordinates(y, x));\n                        }\n                    } else if (feature.originalGeometry.type === \"MultiLineString\") {\n                        untiledPositions = [];\n                        for (const lineGeometry of feature.originalGeometry\n                            .coordinates as VTJsonPosition[][]) {\n                            for (const [x, y] of lineGeometry) {\n                                untiledPositions.push(new GeoCoordinates(y, x));\n                            }\n                        }\n                    }\n\n                    for (const lineGeometry of feature.geometry as VTJsonPosition[][]) {\n                        const line: ILineGeometry = { positions: [], untiledPositions };\n                        for (const [x, y] of lineGeometry) {\n                            const position = new Vector2(x, y);\n                            line.positions.push(position);\n                        }\n\n                        this.m_processor.processLineFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [line],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.Polygon: {\n                    const polygon: IPolygonGeometry = { rings: [] };\n                    for (const outline of feature.geometry as VTJsonPosition[][]) {\n                        const ring: Vector2[] = [];\n                        for (const [currX, currY] of outline) {\n                            const position = new Vector2(currX, currY);\n                            ring.push(position);\n                        }\n                        polygon.rings.push(ring);\n                    }\n\n                    this.m_processor.processPolygonFeature(\n                        tile.layer,\n                        VT_JSON_EXTENTS,\n                        [polygon],\n                        env,\n                        tileKey.level\n                    );\n\n                    break;\n                }\n                case VTJsonGeometryType.Unknown: {\n                    break;\n                }\n            }\n        }\n    }\n\n    private convertGeometryType(type: VTJsonGeometryType): string {\n        switch (type) {\n            case VTJsonGeometryType.Point:\n                return \"point\";\n            case VTJsonGeometryType.LineString:\n                return \"line\";\n            case VTJsonGeometryType.Polygon:\n                return \"polygon\";\n            default:\n                return \"unknown\";\n        }\n    }\n}\n","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    OmvFeatureFilterDescription,\n    OmvFilterDescription,\n    OmvFilterFeatureAttribute,\n    OmvFilterString,\n    OmvGeometryType,\n    OmvLayerFilterDescription\n} from \"./OmvDecoderDefs\";\n\n/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for\n * example, `OmvDecoder`). Returning `false` from any of the calls terminates processing of that\n * layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features,\n * because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to\n * filter for individual features.\n */\nexport interface OmvFeatureFilter {\n    /**\n     * Returns `true` if the filter contains rules for specific kinds.\n     */\n    hasKindFilter: boolean;\n\n    /**\n     * Return `false` if the layer should not be processed.\n     *\n     * @param layer Current layer.\n     * @param level Level of tile.\n     */\n    wantsLayer(layer: string, level: number): boolean;\n\n    /**\n     * Return `false` if the point feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the line feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the polygon feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if kind of object is not enabled and the geometry should not be created.\n     *\n     * @param {(string | string[])} kind Tag \"kind\" of the tag.\n     * @returns {boolean}\n     */\n    wantsKind(kind: string | string[]): boolean;\n}\n\n/**\n * The `OmvFeatureModifier` can be used to filter individual features. It gets passed in the [[Env]]\n * of the feature, which contains all the values that can be searched for in a style. If a filter\n * function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the\n * feature, or even add new properties to the feature, for example, traffic states. The\n * `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with\n * the modified feature properties.\n */\nexport interface OmvFeatureModifier {\n    /**\n     * Check if the point feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of point feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the line feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of line feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the polygon feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of polygon feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;\n}\n\n/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well\n * as an [[OmvFeatureModifier]].\n *\n */\nexport class OmvFeatureFilterDescriptionBuilder {\n    private m_processLayersDefault: boolean = true;\n    private m_processPointsDefault: boolean = true;\n    private m_processLinesDefault: boolean = true;\n    private m_processPolygonsDefault: boolean = true;\n\n    private readonly m_layersToProcess = new Array<OmvLayerFilterDescription>();\n    private readonly m_layersToIgnore = new Array<OmvLayerFilterDescription>();\n    private readonly m_pointsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_ignoredPoints = new Array<OmvFilterDescription>();\n    private readonly m_linesToProcess = new Array<OmvFilterDescription>();\n    private readonly m_linesToIgnore = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToIgnore = new Array<OmvFilterDescription>();\n\n    private m_kindsToProcess: string[] = [];\n    private m_kindsToIgnore: string[] = [];\n\n    /**\n     * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as\n     * well as an [[OmvFeatureModifier]].\n     *\n     * @param processLayersDefault If `true`, all unspecified layers will be processed. If `false`,\n     * all unspecified layers will be ignored.\n     * @param processPointsDefault If `true`, all unspecified point features will be processed. If\n     * `false`, all unspecified point features will be ignored.\n     * @param processLinesDefault If `true`, all unspecified line features will be processed. If\n     * `false`, all unspecified line features will be ignored.\n     * @param processPolygonsDefault If `true`, all unspecified polygon features will be processed.\n     * If `false`, all unspecified polygon features will be ignored.\n     */\n    constructor(\n        options?: OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions\n    ) {\n        if (options) {\n            this.m_processLayersDefault =\n                options.processLayersDefault !== undefined ? options.processLayersDefault : true;\n            this.m_processPointsDefault =\n                options.processPointsDefault !== undefined ? options.processPointsDefault : true;\n            this.m_processLinesDefault =\n                options.processLinesDefault !== undefined ? options.processLinesDefault : true;\n            this.m_processPolygonsDefault =\n                options.processPolygonsDefault !== undefined\n                    ? options.processPolygonsDefault\n                    : true;\n        }\n    }\n\n    /**\n     * Add a layer that should be processed.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    processLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToProcess.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a layer that should be ignored.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    ignoreLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToIgnore.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a valid point feature.\n     *\n     * @param options Feature options.\n     */\n    processPoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add valid point features.\n     *\n     * @param options Multi feature options.\n     */\n    processPoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add a point feature that should be ignored.\n     *\n     * @param options Feature options.\n     */\n    ignorePoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add point features that should be ignored.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add a valid line feature.\n     *\n     * @param options Feature options.\n     */\n    processLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Add valid line features.\n     *\n     * @param options Multi feature options.\n     */\n    processLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Ignore a line feature.\n     *\n     * @param options Feature options.\n     */\n    ignoreLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Ignore line features.\n     *\n     * @param options Multi feature options.\n     */\n    ignoreLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Add a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    processPolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Add valid polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    processPolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Ignore a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    ignorePolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Ignore polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Add all the specified strings as \"enabledKinds\".\n     *\n     * @param {string[]} enabledKinds List of kinds that should be generated.\n     */\n    processKinds(enabledKinds: string[]) {\n        this.m_kindsToProcess = this.m_kindsToProcess.concat(enabledKinds);\n    }\n\n    /**\n     * Add all the specified strings as \"disabledKinds\".\n     *\n     * @param {string[]} disabledKinds List of kinds that should _not_ be generated.\n     */\n    ignoreKinds(disabledKinds: string[]) {\n        this.m_kindsToIgnore = this.m_kindsToIgnore.concat(disabledKinds);\n    }\n\n    /**\n     * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n     */\n    createDescription(): OmvFeatureFilterDescription {\n        return {\n            processLayersDefault: this.m_processLayersDefault,\n            processPointsDefault: this.m_processPointsDefault,\n            processLinesDefault: this.m_processLinesDefault,\n            processPolygonsDefault: this.m_processPolygonsDefault,\n\n            layersToProcess: this.m_layersToProcess,\n            layersToIgnore: this.m_layersToIgnore,\n            pointsToProcess: this.m_pointsToProcess,\n            pointsToIgnore: this.m_ignoredPoints,\n            linesToProcess: this.m_linesToProcess,\n            linesToIgnore: this.m_linesToIgnore,\n            polygonsToProcess: this.m_polygonsToProcess,\n            polygonsToIgnore: this.m_polygonsToIgnore,\n\n            kindsToProcess: this.m_kindsToProcess,\n            kindsToIgnore: this.m_kindsToIgnore\n        };\n    }\n\n    private addItem(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.FeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomType !== undefined\n                    ? Array.isArray(options.geomType)\n                        ? options.geomType\n                        : [options.geomType]\n                    : undefined,\n            classes: [\n                {\n                    value: options.featureClass,\n                    match:\n                        options.matchClass === undefined\n                            ? OmvFilterString.StringMatch.Match\n                            : options.matchClass\n                }\n            ],\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n\n    private addItems(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomTypes !== undefined\n                    ? Array.isArray(options.geomTypes)\n                        ? options.geomTypes\n                        : [options.geomTypes]\n                    : undefined,\n            classes: options.featureClasses,\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n}\n\nexport namespace OmvFeatureFilterDescriptionBuilder {\n    /**\n     * Options for `OmvFeatureFilterDescriptionBuilder`.\n     */\n    export interface OmvFeatureFilterDescriptionBuilderOptions {\n        /**\n         * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers\n         * will be ignored.\n         */\n        processLayersDefault?: boolean;\n        /**\n         * If `true`, all unspecified point features will be processed. If `false`, all unspecified\n         * point features will be ignored.\n         */\n        processPointsDefault?: boolean;\n        /**\n         * If `true`, all unspecified line features will be processed. If `false`, all unspecified\n         * line\n         * features will be ignored.\n         */\n        processLinesDefault?: boolean;\n        /**\n         * If `true`, all unspecified polygon features will be processed. If `false`, all\n         * unspecified polygon features will be ignored.\n         */\n        processPolygonsDefault?: boolean;\n    }\n\n    /**\n     * Description of a single feature.\n     */\n    export interface FeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomType: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional class to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClass: string;\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Match condition for `featureClass`.\n         */\n        matchClass?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n\n    /**\n     * Description for multiple features.\n     */\n    export interface MultiFeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomTypes?: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional classes to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClasses?: OmvFilterString[];\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n}\n\n/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData`\n * features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureFilter implements OmvFeatureFilter {\n    private static matchLayer(\n        layer: string,\n        layerItems: OmvLayerFilterDescription[],\n        level: number\n    ): boolean {\n        for (const layerItem of layerItems) {\n            if (level < layerItem.minLevel || level > layerItem.maxLevel) {\n                continue;\n            }\n\n            if (OmvFilterString.matchString(layer, layerItem.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private disabledKinds: GeometryKindSet | undefined;\n    private enabledKinds: GeometryKindSet | undefined;\n\n    constructor(private description: OmvFeatureFilterDescription) {\n        if (this.description.kindsToProcess.length > 0) {\n            this.enabledKinds = new GeometryKindSet(\n                this.description.kindsToProcess as GeometryKind[]\n            );\n        }\n        if (this.description.kindsToIgnore.length > 0) {\n            this.disabledKinds = new GeometryKindSet(\n                this.description.kindsToIgnore as GeometryKind[]\n            );\n        }\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToProcess, level)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToIgnore, level)) {\n            return false;\n        }\n\n        return this.description.processLayersDefault;\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPointsDefault\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processLinesDefault\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    wantsKind(kind: string | string[]): boolean {\n        // undefined -> no way to filter\n        if (kind === undefined) {\n            return true;\n        }\n\n        return (\n            !(\n                this.disabledKinds !== undefined &&\n                this.disabledKinds.hasOrIntersects(kind as GeometryKind)\n            ) ||\n            (this.enabledKinds !== undefined &&\n                this.enabledKinds.hasOrIntersects(kind as GeometryKind))\n        );\n    }\n\n    get hasKindFilter(): boolean {\n        return this.enabledKinds !== undefined || this.disabledKinds !== undefined;\n    }\n\n    private wantsFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        geometryType: OmvGeometryType,\n        level: number,\n        defaultResult: boolean\n    ): boolean {\n        for (const item of itemsToProcess) {\n            if (level < item.minLevel || level > item.maxLevel) {\n                continue;\n            }\n\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return true;\n            }\n        }\n\n        for (const item of itemsToIgnore) {\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return false;\n            }\n        }\n\n        return defaultResult;\n    }\n}\n\n/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision\n * returning `true` for any predicate if all delegates return `true`.\n */\nexport class ComposedDataFilter implements OmvFeatureFilter {\n    constructor(readonly filters: OmvFeatureFilter[]) {}\n\n    get hasKindFilter() {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.hasKindFilter,\n            true\n        );\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLayer(layer, level),\n            true\n        );\n    }\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPointFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLineFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPolygonFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsKind(kind: string | string[]): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsKind(kind),\n            true\n        );\n    }\n}\n/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter\n * `TileData` features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureModifier implements OmvFeatureModifier {\n    static matchItems(\n        layerName: string,\n        featureClass: string,\n        items: OmvFilterDescription[]\n    ): boolean {\n        for (const item of items) {\n            if (item.classes !== undefined) {\n                if (!OmvFilterString.matchString(layerName, item.layerName)) {\n                    continue;\n                }\n                for (const matchClass of item.classes) {\n                    if (OmvFilterString.matchString(featureClass, matchClass)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    static matchAttribute(layerName: string, env: MapEnv, items: OmvFilterDescription[]): boolean {\n        for (const item of items) {\n            if (item.featureAttribute !== undefined) {\n                if (\n                    OmvFilterString.matchString(layerName, item.layerName) &&\n                    env.lookup(item.featureAttribute.key) === item.featureAttribute.value\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    constructor(private description: OmvFeatureFilterDescription) {}\n\n    doProcessPointFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            env,\n            this.description.processPointsDefault\n        );\n    }\n\n    doProcessLineFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            env,\n            this.description.processLinesDefault\n        );\n    }\n\n    doProcessPolygonFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            env,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        if (layer === undefined || (itemsToProcess.length === 0 && itemsToIgnore.length === 0)) {\n            return defaultResult;\n        }\n\n        let featureClass: string | undefined;\n        const featureClassThing = env.lookup(\"class\");\n\n        if (featureClassThing !== undefined && featureClassThing !== null) {\n            featureClass = featureClassThing.toString();\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToProcess)\n        ) {\n            return true;\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToIgnore)\n        ) {\n            return false;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToProcess)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToIgnore)) {\n            return false;\n        }\n\n        return defaultResult;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare let self: Worker & {\n    importScripts(..._scripts: string[]): void;\n};\n\nself.importScripts(\"three.min.js\");\n\nimport { OmvTileDecoderService } from \"@here/harp-omv-datasource/index-worker\";\n\nOmvTileDecoderService.start();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/OmvDecoder\";\nexport * from \"./lib/OmvTiler\";\nexport * from \"./lib/OmvDecoderDefs\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A `PriorityListElement` has a priority to assist in sorting. The idea is that the items in a\n * grouped priority list will not modify their priority during processing to such an amount, that\n * they will change into another group. Smaller lists are smaller to sort, and in case of resource\n * limitation (maximum number of rendered objects reached), not all items have to be sorted at all.\n */\nexport interface PriorityListElement {\n    /**\n     * The integer value of this priority is used to group objects of \"same\" priority.\n     */\n    priority: number;\n}\n\n/**\n * The `PriorityListGroup` contains a list of [[PriorityListElement]]s that all have the same\n * (integer) priority.\n */\nexport class PriorityListGroup<T extends PriorityListElement> {\n    constructor(readonly priority: number, public elements: T[] = new Array()) {}\n\n    /**\n     * Create and return a deep copy of the `PriorityListGroup<T>`.\n     *\n     * @returns A clone of the `PriorityListGroup<T>`.\n     */\n    clone(): PriorityListGroup<T> {\n        return new PriorityListGroup<T>(this.priority, this.elements.slice());\n    }\n}\n\n/**\n * The `PriorityListGroupMap` is a map to map the (integer) priority to a [[PriorityListGroup]].\n */\nexport type PriorityListGroupMap<T extends PriorityListElement> = Map<number, PriorityListGroup<T>>;\n\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nexport class GroupedPriorityList<T extends PriorityListElement> {\n    readonly groups: PriorityListGroupMap<T> = new Map();\n    private m_sortedGroups: Array<PriorityListGroup<T>> | undefined;\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element Element to be added.\n     */\n    add(element: T): void {\n        this.getGroup(element.priority).elements.push(element);\n    }\n\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    remove(element: T): boolean {\n        const group = this.getGroup(element.priority);\n        if (group !== undefined) {\n            const foundIndex = group.elements.indexOf(element);\n            if (foundIndex >= 0) {\n                group.elements.splice(foundIndex, 1);\n                if (group.elements.length === 0) {\n                    const normalizedPriority = Math.floor(element.priority);\n                    this.groups.delete(normalizedPriority);\n                    if (this.m_sortedGroups) {\n                        this.m_sortedGroups = [];\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Remove all internal [[PriorityListGroup]]s.\n     */\n    clear(): void {\n        this.groups.clear();\n        if (this.m_sortedGroups) {\n            this.m_sortedGroups = [];\n        }\n    }\n\n    /**\n     * Merge another [[GroupedPriorityList]] into this one.\n     *\n     * @param other Other group to merge.\n     */\n    merge(other: GroupedPriorityList<T>): GroupedPriorityList<T> {\n        for (const otherGroup of other.groups) {\n            const group = this.findGroup(otherGroup[1].priority);\n            if (group === undefined) {\n                this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1].clone());\n                if (this.m_sortedGroups) {\n                    this.m_sortedGroups = [];\n                }\n                continue;\n            }\n            group.elements = group.elements.concat(otherGroup[1].elements);\n        }\n        return this;\n    }\n\n    /**\n     * Return a sorted list of [[PriorityListGroup]]s.\n     */\n    get sortedGroups(): Array<PriorityListGroup<T>> {\n        if (this.m_sortedGroups && this.m_sortedGroups.length > 0) {\n            return this.m_sortedGroups;\n        }\n\n        if (!this.m_sortedGroups) {\n            this.m_sortedGroups = [];\n        }\n        for (const priorityList of this.groups) {\n            this.m_sortedGroups.push(priorityList[1]);\n        }\n\n        this.m_sortedGroups.sort((a: PriorityListGroup<T>, b: PriorityListGroup<T>) => {\n            return b.priority - a.priority;\n        });\n        return this.m_sortedGroups;\n    }\n\n    /**\n     * Apply function to all elements in this `GroupedPriorityList`.\n     *\n     * @param {(element: T) => void} fun Function to apply.\n     */\n    forEach(fun: (element: T) => void): void {\n        for (const group of this.groups) {\n            group[1].elements.forEach(fun);\n        }\n    }\n\n    /**\n     * Count the number of elements in this `GroupedPriorityList`.\n     */\n    count(): number {\n        let n = 0;\n        for (const group of this.groups) {\n            n += group[1].elements.length;\n        }\n        return n;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private findGroup(priority: number): PriorityListGroup<T> | undefined {\n        const normalizedPriority = Math.floor(priority);\n        const group = this.groups.get(normalizedPriority);\n        return group;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private getGroup(priority: number): PriorityListGroup<T> {\n        let group = this.findGroup(priority);\n\n        if (group === undefined) {\n            const normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup<T>(normalizedPriority);\n            this.groups.set(normalizedPriority, group);\n            if (this.m_sortedGroups) {\n                this.m_sortedGroups = [];\n            }\n        }\n\n        return group;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./ConsoleChannel\";\nexport * from \"./IChannel\";\nexport * from \"./ILogger\";\nexport * from \"./Logger\";\nexport * from \"./LoggerManager\";\nexport * from \"./MultiChannel\";\nexport * from \"./WorkerChannel\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { LoggerManagerImpl } from \"./LoggerManagerImpl\";\n\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nexport class LoggerManager {\n    private static m_instance: ILoggerManager;\n\n    static get instance(): ILoggerManager {\n        return this.m_instance || (this.m_instance = new LoggerManagerImpl());\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleChannel } from \"./ConsoleChannel\";\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { Logger } from \"./Logger\";\nimport { WorkerChannel } from \"./WorkerChannel\";\n\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\n\nexport class LoggerManagerImpl implements ILoggerManager {\n    channel: IChannel;\n    private readonly m_loggers: ILogger[] = [];\n    private m_levelSetForAll?: LogLevel;\n\n    constructor() {\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel()\n                : new WorkerChannel();\n    }\n\n    getLoggerNames(): string[] {\n        return this.m_loggers.map(logger => logger.name);\n    }\n\n    getLogger(name: string): ILogger | undefined {\n        return this.m_loggers.find(logger => logger.name === name);\n    }\n\n    create(loggerName: string, options: LoggerOptions = {}): ILogger {\n        if (\n            this.m_levelSetForAll !== undefined &&\n            (options.level === undefined || options.level < this.m_levelSetForAll)\n        ) {\n            options.level = this.m_levelSetForAll;\n        }\n        const logger = new Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    }\n\n    dispose(logger: ILogger) {\n        const found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(`Cannot unregister \"${logger}\" : no such logger registered.`);\n        }\n        this.m_loggers.splice(found, 1);\n    }\n\n    updateAll(options: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            logger.update(options);\n        }\n    }\n\n    update(loggerName: string, config: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            if (logger.name === loggerName) {\n                logger.update(config);\n            }\n        }\n    }\n\n    enableAll(enabled: boolean) {\n        for (const logger of this.m_loggers) {\n            logger.enabled = enabled;\n        }\n    }\n\n    enable(loggerName: string, value: boolean) {\n        this.update(loggerName, { enabled: value });\n    }\n\n    setLogLevelForAll(level: LogLevel) {\n        this.m_levelSetForAll = level;\n        for (const logger of this.m_loggers) {\n            logger.level = level;\n        }\n    }\n\n    setLogLevel(loggerName: string, level: LogLevel) {\n        this.update(loggerName, { level });\n    }\n\n    setChannel(channel: IChannel) {\n        this.channel = channel;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class allowing mixing several channels.\n */\nexport class MultiChannel implements IChannel {\n    private readonly channels: IChannel[] = [];\n    constructor(...channels: IChannel[]) {\n        this.channels = channels;\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.error(message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.debug(message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.info(message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.log(message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.trace(message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.warn(message, ...optionalParams);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace Math2D {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    export class Box {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        constructor(public x = 0, public y = 0, public w = 0, public h = 0) {}\n\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        set(x: number, y: number, w: number, h: number) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x X coordinate of point.\n         * @param y Y coordinate of point.\n         */\n        contains(x: number, y: number): boolean {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        }\n\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other Box 2 to test for intersection.\n         */\n        intersects(other: Box): boolean {\n            return (\n                this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y\n            );\n        }\n    }\n\n    /**\n     * Box to store UV coordinates.\n     */\n    export interface UvBox {\n        s0: number;\n        t0: number;\n        s1: number;\n        t1: number;\n    }\n\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax Point a.x\n     * @param ay Point a.y\n     * @param bx Point b.x\n     * @param by Point b.y\n     * @returns Squared distance between the two points\n     */\n    export function distSquared(ax: number, ay: number, bx: number, by: number): number {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line An array of that forms a line via [x,y,z,x,y,z,...] tuples.\n     */\n    export function computeSquaredLineLength(line: number[]): number {\n        let squaredLineLength: number = 0;\n\n        const length = line.length - 4;\n        for (let i = 0; i < length; i += 3) {\n            const xDiff = line[i + 3] - line[i];\n            const yDiff = line[i + 4] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px Test point X\n     * @param py Test point y\n     * @param l0x Line segment start X\n     * @param l0y Line segment start Y\n     * @param l1x Line segment end X\n     * @param l1y Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    export function distToSegmentSquared(\n        px: number,\n        py: number,\n        l0x: number,\n        l0y: number,\n        l1x: number,\n        l1y: number\n    ): number {\n        const lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        let t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace MathUtils {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     *\n     * @returns Clamped value.\n     */\n    export function clamp(value: number, min: number, max: number): number {\n        return value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * Returns a linear interpolation between the values of edge0 and edge1 based on the factor.\n     *\n     * Given two known points the linear interpolant between these points may be presented as\n     * straight line. This means that for given factor change the resulting change of return\n     * value is always const.\n     * @see https://en.wikipedia.org/wiki/Linear_interpolation\n     *\n     * @param edge0\n     * @param edge1\n     * @param factor Interpolation factor that ranges between: 0 <= x <= 1.\n     */\n    export function lerp(edge0: number, edge1: number, factor: number): number {\n        return edge0 * (1 - factor) + edge1 * factor;\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smoothStep(edge0: number, edge1: number, x: number) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smootherStep(edge0: number, edge1: number, x: number) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val The incoming value to be converted.\n     * @param inMin Lower bound of the value's current range.\n     * @param inMax Upper bound of the value's current range.\n     * @param outMin Lower bound of the value's target range.\n     * @param outMax Upper bound of the value's target range.\n     */\n    export function map(val: number, inMin: number, inMax: number, outMin: number, outMax: number) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function min2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function max2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if the value of a given number is inside an upper or lower bound. The bounds may be\n     * undefined, in which case their value is ignored.\n     *\n     * @param value Value to check.\n     * @param lowerBound The lower bound to check the value against.\n     * @param upperBound The upper bound to check the value against.\n     *\n     * @returns `true` if value is inside the bounds or if the bounds are `undefined`, `false`\n     *          otherwise.\n     */\n    export function isClamped(\n        value: number,\n        lowerBound: number | undefined,\n        upperBound: number | undefined\n    ): boolean {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return false;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Smoothly interpolates between two values using cubic formula\n     *\n     * @param startValue\n     * @param endValue\n     * @param time\n     * @returns Result of the interpolation within the range of `[startValue, endValue]`\n     */\n    export function easeInOutCubic(startValue: number, endValue: number, time: number): number {\n        const timeValue =\n            time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\n        return startValue + (endValue - startValue) * timeValue;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods and properties into.\n * @param baseCtors Class to take all methods and properties from.\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\n\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods into.\n * @param baseCtors Class to take all methods from.\n */\nexport function applyMixinsWithoutProperties(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (descriptor !== undefined && descriptor.get === undefined) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare const process: any;\n\n// cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\n\n//TODO: Make assertHandler configurable\n\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition Condition to match, if false, throws an Error(message)\n * @param message Optional message, defaults to \"ASSERTION failed\"\n */\nexport function assert(condition: boolean, message?: string): void {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\n\nexport function assertExists<T>(element: T | undefined, message?: string): T {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(\n                message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\"\n            );\n        }\n    }\n    return element!;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Refinement of `console` interface only for important information i.e `info`, `warn` and `errors`.\n */\nexport interface ISimpleChannel {\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Extension of [[ISimpleChannel]] to support contextual logging by adding stack of prefixes.\n */\nexport interface IContextLogger extends ISimpleChannel {\n    /**\n     * Push \"attribute-like\" context.\n     */\n    pushAttr(name: string): void;\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number): void;\n\n    /**\n     * Remove current context from top of stack.\n     */\n    pop(): void;\n}\n\n/**\n * Context-aware logger that decorates log message with stack-based prefix, emits `headerMessage`\n * before first actual log message.\n */\nexport class ContextLogger implements IContextLogger {\n    private readonly context: string[] = [];\n    private m_headerLogged = false;\n\n    /**\n     * Construct a context-aware logger that logs to `m_logger`.\n     */\n    constructor(readonly m_logger: ISimpleChannel, readonly headerMessage: string) {}\n\n    /**\n     * Push \"attribute-like\" context.\n     *\n     * Following log messages will be prefixed with `name` or `.name` depending on current context.\n     */\n    pushAttr(name: string) {\n        this.context.push(`${this.context.length > 0 ? \".\" : \"\"}${name}`);\n    }\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number) {\n        this.context.push(`[${index}]`);\n    }\n\n    pop() {\n        this.context.pop();\n    }\n\n    // They, are public member functions it's just tslint who doesn't understand this.\n\n    // tslint:disable:member-ordering\n    warn = this.createLogMethod(\"warn\");\n    info = this.createLogMethod(\"info\");\n    error = this.createLogMethod(\"error\");\n    // tslint:enable:member-ordering\n\n    private createLogMethod(severity: \"warn\" | \"info\" | \"error\") {\n        return (message: string, ...rest: any[]) => {\n            if (!this.m_headerLogged) {\n                this.m_logger.info(this.headerMessage);\n                this.m_headerLogged = true;\n            }\n            this.m_logger[severity](`${this.context.join(\"\")}: ${message}`, ...rest);\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* tslint:disable:max-line-length */\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n/* tslint:ensable:max-line-length */\n\nexport class PerformanceTimer {\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    static now(): number {\n        return PerformanceTimer.nowFunc();\n    }\n\n    // tslint:disable-next-line:no-unused-variable\n    private static readonly instance = new PerformanceTimer();\n\n    private static readonly nowFunc: () => number = PerformanceTimer.getNowFunc();\n\n    private static getNowFunc() {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return () => performance.now();\n        }\n\n        // fall back to Date.getTime()\n        return () => {\n            return new Date().getTime();\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Deep clone of object.\n *\n * Like `JSON.parse(JSON.stringify(obj))`, but supports basic javascript types (string, number,\n * object), `Date` and `RegExp`s and cycles.\n *\n * Throws error if enounters object with `prototype` assuming that in general class instances\n * cannot be reliably cloned by generic algorithm.\n */\nexport function cloneDeep<T>(obj: T): T {\n    const cache: Map<object, object> = new Map();\n    function cloneInternal(src: any): any {\n        if (src === null) {\n            return null;\n        } else if (typeof src === \"object\") {\n            const cached = cache.get(src);\n            if (cached !== undefined) {\n                return cached;\n            }\n\n            if (Array.isArray(src)) {\n                const result: any[] = [];\n                cache.set(src, result);\n                result.length = src.length;\n                for (let i = 0; i < result.length; ++i) {\n                    result[i] = cloneInternal(src[i]);\n                }\n                return result;\n            } else if (src instanceof Date) {\n                const result = new Date(src.getTime());\n                cache.set(src, result);\n                return result;\n            } else if (src instanceof RegExp) {\n                const result = new RegExp(src.source, src.flags);\n                cache.set(src, result);\n                return result;\n            } else if (src.constructor !== Object) {\n                throw new Error(\"cloneDeep doesn't support objects with custom prototypes\");\n            } else {\n                const result: typeof src = {};\n                cache.set(src, result);\n                for (const key in src) {\n                    if (src.hasOwnProperty(key)) {\n                        result[key] = cloneInternal(src[key]);\n                    }\n                }\n                return result;\n            }\n        } else {\n            // string, number, boolean, undefined and functions are returned as is\n            return src;\n        }\n    }\n\n    const r = cloneInternal(obj);\n    cache.clear();\n    return r;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Get first defined value.\n *\n * Specialized \"replacement\" for `a || b || c` used frequently to get value from various sources\n * (defaults, configs  constants).\n * In contrast to `||`, this function provides proper typing for usual use cases (constant as last\n * argument) and correct treatment of `null` and `undefined`.\n *\n * If last parameter is \"defined\" then return type is `T`, otherwise return type is `T | undefined`.\n *\n * Usage example:\n *\n *     interface Config {\n *         x?: number;\n *     }\n *     const someConfig: Config = {};\n *     const val: number | undefined = undefined;\n *     const DEFAULT = 5;\n *     const x = getOptionValue(val, someConfig.x, DEFAULT);\n *         // typeof x === 'number' because DEFAULT is defined\n *     const y = getOptionValue(val, someConfig.x);\n *         // typeof y === 'number | undefined' because someConfig.x is possibly undefined\n */\n// specialized overloads with last param defined params overload\nexport function getOptionValue<T>(a: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T | undefined, d: T): T;\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined;\n\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined {\n    for (const candidate of values) {\n        if (candidate !== undefined && candidate !== null) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Merge options into existing parameters object.\n *\n * Convenience helper with _similar_ semantics as:\n *\n *     const finalParams1 = { ...defaults, ... options };\n *     const finalParams2 = Object.assign({}, defaults, options);\n *\n * This function doesn't copy _extra_ properties of `options` that doesn't exist in `defaults`.\n * `defaults` is used as _parameters_ template.\n *\n * This doc uses following notion of `option` and `parameter` terms:\n * * `parameter` is a variable, or 'almost constant' of procedure/function/algorith/object\n *    * `parameter` usually have sensible and usually used default\n *    * `parameter` is always defined (no `undefined`, `null` or `?` in type)\n *    * `parameter` can be overriden by specyfying `option` with same name\n * * `option` means value that may be passed optionally, overrides `parameter` value with same name\n *\n * Usage:\n *\n *     interface FooParams {\n *         useTextures: boolean;\n *         opacity: number;\n *     }\n *\n *     const FOO_DEFAULTS: FooParams = {\n *         useTextures: true,\n *         opacity: 0.8\n *     };\n *\n *     type FooOptions = Partial<FooParams>;\n *\n *     function doSomething(options: FooOptions) {\n *         const params = mergeWithOptions(FOO_DEFAULTS, options);\n *             // typeof params === FooParams\n *             // params.opacity = 0.5\n *             // params.useTextures = true\n *             // params.someOtherOptionFromOtherApi is not defined\n *     }\n *     const opt = {opacity: 0.5, someOtherOptionFromOtherApi: 'aaa'};\n *     doSomething(opt);\n *\n * Rationale:\n *   * both `Object.assign` and spread operator copy extra options\n *   * `Object.assign` & `spread operator` may copy `undefined` and `null`s if they really exist\n *     in options object\n *\n * @param parameters parmeters template object holding all expected parameters\n * @param options options object\n * @returns new object with `parameters` overriden by values from `options`\n */\nexport function mergeWithOptions<T extends object>(parameters: T, options?: Partial<T>): T {\n    // NOTE: `as object` needed due to TypeScript bug:\n    //       https://github.com/Microsoft/TypeScript/issues/14409\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    const result = { ...(parameters as object) } as T;\n    if (options === undefined || options === null) {\n        return result;\n    }\n    for (const prop in parameters) {\n        if (parameters.hasOwnProperty(prop)) {\n            const optionValue = options[prop];\n            if (optionValue !== undefined && optionValue !== null) {\n                result[prop] = optionValue as any;\n            }\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { resolveReferenceUri } from \"./UrlUtils\";\n\n/**\n * Custom, app-specific URI resolver interface.\n */\nexport interface UriResolver {\n    /**\n     * Attempt to resolve `URI` to `URL`.\n     *\n     * If given resolver doesn't know about this specific kind of `URI`, it should return string as\n     * received.\n     *\n     * @param input `URI`\n     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`\n     */\n    resolveUri(uri: string): string;\n}\n\nexport interface PrefixUriResolverDefinition {\n    [prefix: string]: string;\n}\n\n/**\n * Basic, import-map like [[UriResolver]].\n *\n * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.\n *\n * In definitions, `key` is matched against input uri with following strategy:\n *  - `key` without trailing `/` -> `key` and input `uri` must be identical\n *  - `key` with trailing `/`, -> `key` is treated as \"package prefix\", so `uri` must start with\n *    `key`\n *\n * Example:\n * ```\n * {\n *     \"local://poiMasterList\": \"/assets/poiMasterList.json\"\n *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`\n *     \"local://icons/\": \"/assets/icons/\"\n *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to\n *        // `/assets/icons/ANYPATH\n * }\n * ```\n * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).\n */\nexport class PrefixMapUriResolver implements UriResolver {\n    constructor(readonly definitions: PrefixUriResolverDefinition) {}\n\n    resolveUri(uri: string) {\n        return Object.keys(this.definitions).reduce((r, key) => {\n            if (key.endsWith(\"/\") && r.startsWith(key)) {\n                const newPrefix = this.definitions[key];\n                return newPrefix + r.substr(key.length);\n            } else if (r === key) {\n                return this.definitions[key];\n            }\n            return r;\n        }, uri);\n    }\n}\n\n/**\n * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.\n */\nexport class RelativeUriResolver implements UriResolver {\n    constructor(readonly parentUri: string) {}\n\n    resolveUri(uri: string) {\n        return resolveReferenceUri(this.parentUri, uri);\n    }\n}\n\n/**\n * Compose URI resolvers.\n *\n * Creates new [[UriResolver]] that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           new RelativeUriResolver(themeUrl),\n *           defaultUrlResolver\n *     );\n */\nexport function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver {\n    return {\n        resolveUri(originalUrl: string) {\n            return resolvers.reduce((url, resolver) => {\n                if (resolver !== undefined) {\n                    return resolver.resolveUri(url);\n                } else {\n                    return url;\n                }\n            }, originalUrl);\n        }\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { baseUrl } from \"./UrlUtils\";\n\n/**\n * Get base URL for from where relative URLs will be loaded.\n *\n * * In browser, it resolves to `baseUrl(location.href)` i.e document's base URL\n * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n *\n * * In node, it resolves to `file://${process.cwd()}`.\n */\nexport function getAppBaseUrl() {\n    return baseUrl(window.location.href);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Chains two functions for further assigning as one wrapped callback function\n */\nexport function chainCallbacks<T extends (this: unknown, ...args: any[]) => any>(\n    f1: T | null | undefined,\n    f2: T\n): T {\n    return function(this: any, ...args: any[]): ReturnType<T> {\n        if (f1) {\n            f1.apply(this, args);\n        }\n        return f2.apply(this, args);\n    } as T;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\n\nimport { ArrayOperators } from \"./operators/ArrayOperators\";\nimport { CastOperators } from \"./operators/CastOperators\";\nimport { ColorOperators } from \"./operators/ColorOperators\";\nimport { ComparisonOperators } from \"./operators/ComparisonOperators\";\nimport { FeatureOperators } from \"./operators/FeatureOperators\";\nimport { FlowOperators } from \"./operators/FlowOperators\";\nimport { InterpolationOperators } from \"./operators/InterpolationOperators\";\nimport { MapOperators } from \"./operators/MapOperators\";\nimport { MathOperators } from \"./operators/MathOperators\";\nimport { MiscOperators } from \"./operators/MiscOperators\";\nimport { ObjectOperators } from \"./operators/ObjectOperators\";\nimport { StringOperators } from \"./operators/StringOperators\";\nimport { TypeOperators } from \"./operators/TypeOperators\";\n\nexport interface OperatorDescriptor {\n    /**\n     * Returns `true` if this operator requires a dynamic execution context (e.g. [\"zoom\"]).\n     */\n    isDynamicOperator?: (call: CallExpr) => boolean;\n\n    /**\n     * Evaluates the given expression.\n     */\n    call: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n}\n\nexport interface OperatorDescriptorMap {\n    [name: string]: OperatorDescriptor;\n}\n\nconst operatorDescriptors = new Map<string, OperatorDescriptor>();\n\n/*\n * @hidden\n */\nexport class ExprEvaluatorContext {\n    private m_partialEvaluation = false;\n\n    constructor(\n        readonly evaluator: ExprEvaluator,\n        readonly env: Env,\n        readonly scope: ExprScope,\n        readonly cache?: Map<Expr, Value>\n    ) {}\n\n    /**\n     * `true` if the this context is used to partially evaluate expressions.\n     */\n    get partialEvaluation() {\n        return this.m_partialEvaluation;\n    }\n\n    /**\n     * Evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    evaluate(expr: Expr | undefined) {\n        if (expr !== undefined) {\n            return expr.accept(this.evaluator, this);\n        }\n        throw new Error(\"Failed to evaluate expression\");\n    }\n\n    /**\n     * Partially evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    partiallyEvaluate(expr: Expr | undefined): Expr {\n        if (expr === undefined) {\n            throw new Error(\"Failed to evaluate expression\");\n        }\n\n        const previousEvaluationMode = this.m_partialEvaluation;\n\n        this.m_partialEvaluation = true;\n\n        try {\n            const value = expr.accept(this.evaluator, this);\n\n            this.m_partialEvaluation = previousEvaluationMode;\n\n            if (value instanceof Expr) {\n                return value;\n            }\n\n            return LiteralExpr.fromValue(value);\n        } catch (error) {\n            // rethrow the exception\n            throw error;\n        } finally {\n            // reset the evaluation mode.\n            this.m_partialEvaluation = previousEvaluationMode;\n        }\n    }\n}\n\n/**\n * [[ExprEvaluator]] is used to evaluate [[Expr]] in a given environment.\n *\n * @hidden\n */\nexport class ExprEvaluator implements ExprVisitor<Value, ExprEvaluatorContext> {\n    static defineOperator(op: string, builtin: OperatorDescriptor) {\n        operatorDescriptors.set(op, builtin);\n    }\n\n    static defineOperators(builtins: OperatorDescriptorMap) {\n        Object.getOwnPropertyNames(builtins).forEach(p => {\n            this.defineOperator(p, builtins[p]);\n        });\n    }\n\n    /**\n     * Returns the [[OperatorDescriptor]] for the given operator name.\n     * @hidden\n     */\n    static getOperator(op: string): OperatorDescriptor | undefined {\n        return operatorDescriptors.get(op);\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprEvaluatorContext): Value {\n        const value = context.env.lookup(expr.name);\n        return value !== undefined ? value : null;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprEvaluatorContext): Value {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprEvaluatorContext): Value {\n        return context.env.lookup(expr.name) !== undefined;\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: ExprEvaluatorContext): Value {\n        const value = expr.value.accept(this, context);\n\n        const result = expr.elements.includes(value as any);\n\n        if (context.cache !== undefined) {\n            context.cache.set(expr, result);\n        }\n\n        return result;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: ExprEvaluatorContext): Value {\n        const r = context.evaluate(match.value);\n        for (const [label, body] of match.branches) {\n            if (Array.isArray(label) && (label as any[]).includes(r)) {\n                return context.evaluate(body);\n            } else if (label === r) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCaseExpr(match: CaseExpr, context: ExprEvaluatorContext): Value {\n        for (const [condition, body] of match.branches) {\n            if (context.evaluate(condition)) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprEvaluatorContext): Value {\n        if (context.cache !== undefined) {\n            const v = context.cache.get(expr);\n            if (v !== undefined) {\n                return v;\n            }\n        }\n\n        const descriptor = expr.descriptor || operatorDescriptors.get(expr.op);\n\n        if (descriptor) {\n            expr.descriptor = descriptor;\n\n            const result = descriptor.call(context, expr);\n\n            if (context.cache) {\n                context.cache.set(expr, result);\n            }\n\n            return result;\n        }\n\n        throw new Error(`undefined operator '${expr.op}`);\n    }\n}\n\nExprEvaluator.defineOperators(CastOperators);\nExprEvaluator.defineOperators(ComparisonOperators);\nExprEvaluator.defineOperators(MathOperators);\nExprEvaluator.defineOperators(StringOperators);\nExprEvaluator.defineOperators(ColorOperators);\nExprEvaluator.defineOperators(TypeOperators);\nExprEvaluator.defineOperators(MiscOperators);\nExprEvaluator.defineOperators(FlowOperators);\nExprEvaluator.defineOperators(ArrayOperators);\nExprEvaluator.defineOperators(InterpolationOperators);\nExprEvaluator.defineOperators(ObjectOperators);\nExprEvaluator.defineOperators(FeatureOperators);\nExprEvaluator.defineOperators(MapOperators);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    at: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const args = call.args;\n            const index = context.evaluate(args[0]);\n            if (typeof index !== \"number\") {\n                throw new Error(`expected the index of the element to retrieve`);\n            }\n            const value = context.evaluate(args[1]);\n            if (!Array.isArray(value)) {\n                throw new Error(`expected an array`);\n            }\n            return index >= 0 && index < value.length ? value[index] : null;\n        }\n    }\n};\n\nexport const ArrayOperators: OperatorDescriptorMap = operators;\nexport type ArrayOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"to-boolean\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Boolean(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-string\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-number\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const arg of call.args) {\n                const value = Number(context.evaluate(arg));\n                if (!isNaN(value)) {\n                    return value;\n                }\n            }\n            throw new Error(\"cannot convert the value to a number\");\n        }\n    }\n};\n\nexport const CastOperators: OperatorDescriptorMap = operators;\nexport type CastOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ColorUtils } from \"../ColorUtils\";\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    rgba: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            const a = context.evaluate(call.args[3]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                typeof a === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0 &&\n                a >= 0 &&\n                a <= 1\n            ) {\n                return rgbaToHex(r, g, b, a);\n            }\n            throw new Error(`unknown color 'rgba(${r},${g},${b},${a})'`);\n        }\n    },\n    rgb: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0\n            ) {\n                return rgbToHex(r, g, b);\n            }\n            throw new Error(`unknown color 'rgb(${r},${g},${b})'`);\n        }\n    },\n    // Hsl operator contains angle modulated to <0, 360> range, percent of\n    // saturation and lightness in <0, 100> range, i.e. hsl(360, 100, 100)\n    hsl: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const h = context.evaluate(call.args[0]);\n            const s = context.evaluate(call.args[1]);\n            const l = context.evaluate(call.args[2]);\n            if (\n                typeof h === \"number\" &&\n                typeof s === \"number\" &&\n                typeof l === \"number\" &&\n                h >= 0 &&\n                s >= 0 &&\n                l >= 0\n            ) {\n                return hslToHex(h, s, l);\n            }\n            throw new Error(`unknown color 'hsl(${h},${s}%,${l}%)'`);\n        }\n    }\n};\n\nfunction rgbaToHex(r: number, g: number, b: number, a: number): number {\n    // We decode rgba color channels using custom hex format with transparency.\n    return ColorUtils.getHexFromRgba(\n        THREE.Math.clamp(r, 0, 255) / 255,\n        THREE.Math.clamp(g, 0, 255) / 255,\n        THREE.Math.clamp(b, 0, 255) / 255,\n        THREE.Math.clamp(a, 0, 1)\n    );\n}\n\nfunction rgbToHex(r: number, g: number, b: number): number {\n    return ColorUtils.getHexFromRgb(\n        THREE.Math.clamp(r, 0, 255) / 255,\n        THREE.Math.clamp(g, 0, 255) / 255,\n        THREE.Math.clamp(b, 0, 255) / 255\n    );\n}\n\nfunction hslToHex(h: number, s: number, l: number): number {\n    return ColorUtils.getHexFromHsl(\n        THREE.Math.euclideanModulo(h, 360) / 360,\n        THREE.Math.clamp(s, 0, 100) / 100,\n        THREE.Math.clamp(l, 0, 100) / 100\n    );\n}\n\nexport const ColorOperators: OperatorDescriptorMap = operators;\nexport type ColorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction compare(context: ExprEvaluatorContext, call: CallExpr, strict: boolean = false) {\n    const left = context.evaluate(call.args[0]) as any;\n    const right = context.evaluate(call.args[1]) as any;\n\n    if (\n        !(\n            (typeof left === \"number\" && typeof right === \"number\") ||\n            (typeof left === \"string\" && typeof right === \"string\")\n        )\n    ) {\n        if (strict) {\n            throw new Error(`invalid operands '${left}' and '${right}' for operator '${call.op}'`);\n        }\n    }\n\n    switch (call.op) {\n        case \"<\":\n            return left < right;\n        case \">\":\n            return left > right;\n        case \"<=\":\n            return left <= right;\n        case \">=\":\n            return left >= right;\n        default:\n            throw new Error(`invalid comparison operator '${call.op}'`);\n    }\n}\n\nconst operators = {\n    \"!\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return !context.evaluate(call.args[0]);\n        }\n    },\n\n    \"==\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left === right;\n        }\n    },\n\n    \"!=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left !== right;\n        }\n    },\n\n    \"<\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \"<=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) }\n};\n\nexport const ComparisonOperators: OperatorDescriptorMap = operators;\nexport type ComparisonOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\n\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"geometry-type\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const geometryType = context.env.lookup(\"$geometryType\");\n            switch (geometryType) {\n                case \"point\":\n                    return \"Point\";\n                case \"line\":\n                    return \"LineString\";\n                case \"polygon\":\n                    return \"Polygon\";\n                default:\n                    return null;\n            }\n        }\n    }\n};\n\nexport const FeatureOperators: OperatorDescriptorMap = operators;\nexport type FeatureOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction conditionalCast(context: ExprEvaluatorContext, type: string, args: Expr[]) {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            for (const childExpr of args) {\n                const value = context.evaluate(childExpr);\n                if (typeof value === type) {\n                    return value;\n                }\n            }\n            throw new Error(`expected a '${type}'`);\n        default:\n            throw new Error(`invalid type '${type}'`);\n    } // switch\n}\n\nconst operators = {\n    all: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (!context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    any: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    none: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    boolean: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"boolean\", call.args);\n        }\n    },\n\n    number: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"number\", call.args);\n        }\n    },\n\n    string: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"string\", call.args);\n        }\n    }\n};\n\nexport const FlowOperators: OperatorDescriptorMap = operators;\nexport type FlowOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, LiteralExpr, NumberLiteralExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { createInterpolatedProperty, getPropertyValue } from \"../InterpolatedProperty\";\nimport { InterpolatedProperty, InterpolatedPropertyDefinition } from \"../InterpolatedPropertyDefs\";\n\ntype InterpolateCallExpr = CallExpr & {\n    _mode?: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    _exponent?: number;\n    _stops?: number[];\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Evaluates the given piecewise function.\n */\nfunction step(context: ExprEvaluatorContext, call: CallExpr) {\n    const { args } = call;\n\n    const value = context.evaluate(args[0]) as number;\n\n    if (value === null) {\n        // returns the default value of step.\n        return context.evaluate(args[1]);\n    }\n\n    if (typeof value !== \"number\") {\n        throw new Error(`the input of a 'step' operator must have type 'number'`);\n    }\n\n    let first = 1;\n    let last = args.length / 2 - 1;\n\n    while (first < last) {\n        // tslint:disable-next-line: no-bitwise\n        const mid = (first + last) >>> 1;\n        const stop = (args[mid * 2] as NumberLiteralExpr).value;\n\n        if (value < stop) {\n            last = mid - 1;\n        } else if (value > stop) {\n            first = mid + 1;\n        } else {\n            last = mid;\n        }\n    }\n\n    const result = args[first * 2];\n\n    if (!(result instanceof NumberLiteralExpr)) {\n        throw new Error(\"expected a numeric literal\");\n    }\n\n    const index = result.value <= value ? first : first - 1;\n\n    return context.evaluate(args[index * 2 + 1]);\n}\n\n/**\n * Prepare and validate the \"interpolate\" call.\n *\n * @param call An [[Expr]] representing an \"interpolate\" call.\n * @hidden\n */\nfunction prepareInterpolateCallExpr(call: InterpolateCallExpr) {\n    if (call._interpolatedProperty || call._mode !== undefined) {\n        return;\n    }\n\n    const interpolatorType = call.args[0];\n\n    if (!(interpolatorType instanceof CallExpr)) {\n        throw new Error(\"expected an interpolation type\");\n    }\n\n    let mode: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    let exponent: number | undefined;\n\n    if (interpolatorType.op === \"linear\") {\n        mode = \"Linear\";\n    } else if (interpolatorType.op === \"discrete\") {\n        mode = \"Discrete\";\n    } else if (interpolatorType.op === \"cubic\") {\n        mode = \"Cubic\";\n    } else if (interpolatorType.op === \"exponential\") {\n        mode = \"Exponential\";\n        const base = interpolatorType.args[0];\n        if (!(base instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected the base of the exponential interpolation\");\n        }\n        exponent = base.value;\n    } else {\n        throw new Error(\"unrecognized interpolation type\");\n    }\n\n    const input = call.args[1];\n\n    if (!(input instanceof CallExpr)) {\n        throw new Error(\"expected the input of the interpolation\");\n    }\n\n    if (input.op !== \"zoom\") {\n        throw new Error(\"only 'zoom' is supported\");\n    }\n\n    if (call.args.length === 2 || call.args.length % 2) {\n        throw new Error(\"invalid number of samples\");\n    }\n\n    const stops: number[] = [];\n    const values: Value[] = [];\n\n    let isConstantInterpolation = true;\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n\n        stops.push(stop.value);\n\n        if (isConstantInterpolation) {\n            const value = call.args[i + 1];\n\n            if (value instanceof LiteralExpr) {\n                values.push(value.value);\n            } else {\n                isConstantInterpolation = false;\n            }\n        }\n    }\n\n    if (isConstantInterpolation) {\n        const result = createInterpolatedProperty({\n            interpolation: mode,\n            exponent,\n            zoomLevels: stops,\n            values\n        });\n\n        if (!result) {\n            throw new Error(\"failed to create interpolation\");\n        }\n\n        call._interpolatedProperty = result;\n    } else {\n        call._mode = mode;\n        call._exponent = exponent;\n        call._stops = stops;\n    }\n}\n\ntype StepCallExpr = CallExpr & {\n    /**\n     * `true` if the input of `step` call is `[\"zoom\"], otherwise false.\n     */\n    _inputIsZoom?: boolean;\n\n    /**\n     * The stops when the a constant [[InterpolatedProperty]] cannot be\n     * created for this `[\"step\"]` call.\n     */\n    _stops?: number[];\n\n    /**\n     * The [[InterpolatedProperty]] representing this `step` call,\n     * otherwise `undefined` if an interpolated property cannot\n     * be created at parsing time (e.g. one if the value of the step is not a literal).\n     */\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Classify the given `step` call.\n *\n * This function checks the input of the `step` and ensures that the stops\n * are literals.\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction classifyStepCallExpr(call: StepCallExpr) {\n    if (call._inputIsZoom !== undefined) {\n        // nothing to do, the `call` was already classified.\n        return;\n    }\n\n    if (call.args[0] === undefined) {\n        throw new Error(\"expected the input of the 'step' operator\");\n    }\n\n    if (call.args.length < 3 || call.args.length % 2) {\n        throw new Error(\"not enough arguments\");\n    }\n\n    const input = call.args[0];\n\n    // tslint:disable-next-line: prefer-conditional-expression\n    if (input instanceof CallExpr && input.op === \"zoom\") {\n        call._inputIsZoom = true;\n    } else {\n        call._inputIsZoom = false;\n    }\n\n    // check that the stops are literals.\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n    }\n}\n\n/**\n * Prepares the given call for the dynamic exception.\n * This method collects the stops and\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction prepareStepCallExpr(call: StepCallExpr) {\n    if (call._stops || call._interpolatedProperty) {\n        // nothing to do, the `call` was already prepared for execution.\n        return;\n    }\n\n    // collect the stops of the step call.\n    const stops: number[] = [Number.MIN_SAFE_INTEGER];\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i] as NumberLiteralExpr;\n        stops.push(stop.value);\n    }\n\n    // collect the values of the step call.\n    const values: Value[] = [];\n    let hasConstantValues = true;\n\n    for (let i = 1; hasConstantValues && i < call.args.length; i += 2) {\n        const literal = call.args[i];\n        if (literal instanceof LiteralExpr) {\n            values.push(literal.value);\n        } else {\n            hasConstantValues = false;\n        }\n    }\n\n    if (hasConstantValues) {\n        // all the values of this zoom-based `step` are constant,\n        // create an interpolated property and store it together\n        // with the call.\n        const interpolatedProperty = createInterpolatedProperty({\n            interpolation: \"Discrete\",\n            zoomLevels: stops,\n            values\n        });\n\n        if (interpolatedProperty === undefined) {\n            throw new Error(\"failed to create interpolator\");\n        }\n\n        call._interpolatedProperty = interpolatedProperty;\n    } else {\n        // the values the `[\"step\"]` call are not constants,\n        // cache the `zoomLevels` to avoid recreating input `Array`\n        // when instantiating a new [[InterpolatedProperty]].\n        call._stops = stops;\n    }\n}\n\nconst operators = {\n    interpolate: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[1] && call.args[1].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: InterpolateCallExpr): Value => {\n            prepareInterpolateCallExpr(call);\n\n            if (context.scope !== ExprScope.Dynamic) {\n                return call;\n            }\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                const values: Value[] = [];\n\n                for (let i = 2; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i + 1]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = createInterpolatedProperty({\n                    interpolation: call._mode!,\n                    exponent: call._exponent,\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return getPropertyValue(interpolatedProperty, context.env);\n        }\n    },\n    step: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[0] && call.args[0].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: StepCallExpr): Value => {\n            classifyStepCallExpr(call);\n\n            if (context.scope === ExprScope.Value) {\n                return call;\n            }\n\n            if (context.scope === ExprScope.Condition || call._inputIsZoom === false) {\n                return step(context, call);\n            }\n\n            prepareStepCallExpr(call);\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                // the values of the interpolation are not literals,\n                // evaluate the sub expressions and combine them\n                // with the constant stops computed when preparing this call.\n                const values: Value[] = [];\n                for (let i = 1; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = createInterpolatedProperty({\n                    interpolation: \"Discrete\",\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return getPropertyValue(interpolatedProperty, context.env);\n        }\n    }\n};\n\nexport const InterpolationOperators: OperatorDescriptorMap = operators;\nexport type InterpolationOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Interpolant } from \"three\";\n\nexport class ExponentialInterpolant extends Interpolant {\n    /**\n     * Exponent value. Defaults to `2.0`.\n     */\n    exponent: number = 2.0;\n\n    // Note: We need to disable linting here as tslint thinks this function is never used, though it\n    // indeed is called by ``Interpolant.evaluate(level)``.\n    // tslint:disable-next-line\n    private interpolate_(i1: number, t0: number, t: number, t1: number) {\n        const result = this.resultBuffer;\n        // TODO: Remove when Interpolant types are fixed.\n        const values = (this as any).sampleValues;\n        const stride = this.valueSize;\n        const offset1 = i1 * stride;\n        const offset0 = offset1 - stride;\n        const weight1 = Math.pow((t - t0) / (t1 - t0), this.exponent);\n        const weight0 = 1 - weight1;\n\n        for (let i = 0; i !== stride; ++i) {\n            result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ExprScope, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    ppi: {\n        call: (context: ExprEvaluatorContext) => {\n            const ppi = context.env.lookup(\"$ppi\");\n            if (typeof ppi === \"number\") {\n                return ppi;\n            }\n            return 72;\n        }\n    },\n    zoom: {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext): Value => {\n            if (context.scope === ExprScope.Condition) {\n                const zoom = context.env.lookup(\"$zoom\")!;\n                if (zoom !== undefined) {\n                    return zoom;\n                }\n                throw new Error(\"failed to get the zoom level.\");\n            }\n            // direct usages of 'zoom' outside technique filter conditions\n            // and interpolations are not allowed.\n            throw new Error(\"invalid usage of the 'zoom' operator.\");\n        }\n    }\n};\n\nexport const MapOperators: OperatorDescriptorMap = operators;\nexport type MapOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nimport * as THREE from \"three\";\n\nconst operators = {\n    \"^\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '^'`\n                );\n            }\n            return Math.pow(a, b);\n        }\n    },\n\n    \"-\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '-'`\n                );\n            }\n            return a - b;\n        }\n    },\n\n    \"/\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '/'`\n                );\n            }\n            return a / b;\n        }\n    },\n\n    \"%\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '%'`\n                );\n            }\n            return a % b;\n        }\n    },\n\n    \"+\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) + Number(context.evaluate(b)), 0);\n        }\n    },\n\n    \"*\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) * Number(context.evaluate(b)), 1);\n        }\n    },\n\n    abs: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'abs'`);\n            }\n            return Math.abs(value);\n        }\n    },\n\n    acos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'acos'`);\n            }\n            return Math.acos(value);\n        }\n    },\n\n    asin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'asin'`);\n            }\n            return Math.asin(value);\n        }\n    },\n\n    atan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'atan'`);\n            }\n            return Math.atan(value);\n        }\n    },\n\n    ceil: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ceil'`);\n            }\n            return Math.ceil(value);\n        }\n    },\n\n    cos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'cos'`);\n            }\n            return Math.cos(value);\n        }\n    },\n\n    e: {\n        call: () => {\n            return Math.E;\n        }\n    },\n\n    floor: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'floor'`);\n            }\n            return Math.floor(value);\n        }\n    },\n\n    ln: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln'`);\n            }\n            return Math.log(value);\n        }\n    },\n\n    ln2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln2'`);\n            }\n            return Math.log2(value);\n        }\n    },\n\n    log10: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'log10'`);\n            }\n            return Math.log10(value);\n        }\n    },\n\n    max: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.max(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    min: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.min(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    /**\n     * Clamp numeric value to given range, inclusive.\n     *\n     * Synopsis:\n     * ```\n     * [\"clamp\", v: number, min: number, max: number]`\n     * ```\n     */\n    clamp: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const v = context.evaluate(call.args[0]);\n            const min = context.evaluate(call.args[1]);\n            const max = context.evaluate(call.args[2]);\n\n            if (typeof v !== \"number\" || typeof min !== \"number\" || typeof max !== \"number\") {\n                throw new Error(`invalid operands '${v}', ${min}, ${max} for operator 'clamp'`);\n            }\n            return THREE.Math.clamp(v, min, max);\n        }\n    },\n\n    pi: {\n        call: () => {\n            return Math.PI;\n        }\n    },\n\n    round: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'round'`);\n            }\n            return Math.round(value);\n        }\n    },\n\n    sin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sin'`);\n            }\n            return Math.sin(value);\n        }\n    },\n\n    sqrt: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sqrt'`);\n            }\n            return Math.sqrt(value);\n        }\n    },\n\n    tan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'tan'`);\n            }\n            return Math.tan(value);\n        }\n    }\n};\n\nexport const MathOperators: OperatorDescriptorMap = operators;\nexport type MathOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    length: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (Array.isArray(value) || typeof value === \"string\") {\n                return value.length;\n            }\n            throw new Error(`invalid operand '${value}' for operator 'length'`);\n        }\n    },\n    coalesce: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                const value = context.evaluate(childExpr);\n                if (value !== null) {\n                    return value;\n                }\n            }\n            return null;\n        }\n    }\n};\n\nexport const MiscOperators: OperatorDescriptorMap = operators;\nexport type MiscOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\n\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nenum LookupMode {\n    get,\n    has\n}\n\nfunction lookupMember(context: ExprEvaluatorContext, args: Expr[], lookupMode: LookupMode) {\n    const memberName = context.evaluate(args[0]);\n\n    if (typeof memberName !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n\n    const object = context.evaluate(args[1]) as any;\n\n    if (object && typeof object === \"object\" && hasOwnProperty.call(object, memberName)) {\n        return lookupMode === LookupMode.get ? object[memberName] : true;\n    }\n\n    return lookupMode === LookupMode.get ? null : false;\n}\n\nconst operators = {\n    get: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.get)\n    },\n\n    has: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.has)\n    }\n};\n\nexport const ObjectOperators: OperatorDescriptorMap = operators;\nexport type ObjectOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    concat: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return \"\".concat(...call.args.map(a => String(context.evaluate(a))));\n        }\n    },\n\n    downcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleLowerCase();\n        }\n    },\n\n    upcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleUpperCase();\n        }\n    },\n\n    \"~=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.indexOf(right) !== -1;\n            }\n            return false;\n        }\n    },\n\n    \"^=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.startsWith(right);\n            }\n            return false;\n        }\n    },\n\n    \"$=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.endsWith(right);\n            }\n            return false;\n        }\n    }\n};\n\nexport const StringOperators: OperatorDescriptorMap = operators;\nexport type StringOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    typeof: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return typeof context.evaluate(call.args[0]);\n        }\n    }\n};\n\nexport const TypeOperators: OperatorDescriptorMap = operators;\nexport type TypeOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Env,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    MatchLabel,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nexport interface InstantiationContext {\n    /**\n     * The [[Env]] used to lookup for names.\n     */\n    env: Env;\n\n    /**\n     * The names to preserve during the instantiation.\n     */\n    preserve?: Set<string>;\n}\n\n/**\n * @hidden\n */\nexport class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name);\n        return LiteralExpr.fromValue(value !== undefined ? value : null);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name) !== undefined;\n        return LiteralExpr.fromValue(value);\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: InstantiationContext): Expr {\n        const value = expr.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const result = expr.elements.includes(value.value as any);\n            return LiteralExpr.fromValue(result);\n        }\n\n        return value === expr.value ? expr : new ContainsExpr(value, expr.elements);\n    }\n\n    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr {\n        const args = expr.args.map(arg => arg.accept(this, context));\n        if (args.some((a, i) => a !== expr.args[i])) {\n            return new CallExpr(expr.op, args);\n        }\n        return expr;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr {\n        const value = match.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const r = value.value;\n            for (const [label, body] of match.branches) {\n                if (Array.isArray(label) && (label as any[]).includes(r)) {\n                    return body.accept(this, context);\n                } else if (label === r) {\n                    return body.accept(this, context);\n                }\n            }\n            return match.fallback.accept(this, context);\n        }\n\n        let changed = match.value !== value;\n\n        const branches: Array<[MatchLabel, Expr]> = match.branches.map(([label, branch]) => {\n            const newBranch = branch.accept(this, context);\n            if (newBranch !== branch) {\n                changed = true;\n            }\n            return [label, newBranch];\n        });\n\n        const fallback = match.fallback.accept(this, context);\n\n        if (fallback !== match.fallback) {\n            changed = true;\n        }\n\n        return changed ? new MatchExpr(value, branches, fallback) : match;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr {\n        const branches: Array<[Expr, Expr]> = [];\n\n        let changed = false;\n\n        for (const [condition, branch] of expr.branches) {\n            const newCondition = condition.accept(this, context);\n\n            if (newCondition instanceof LiteralExpr) {\n                if (newCondition.value) {\n                    return branch.accept(this, context);\n                }\n            } else {\n                if (newCondition !== condition) {\n                    changed = true;\n                }\n                branches.push([newCondition, branch]);\n            }\n        }\n\n        if (branches.length === 0) {\n            // all the conditions of this CaseExpr evaluated\n            // to false, so the resulting of instantiating this CaseExpr\n            // is the same as instantiating its fallback expression.\n            return expr.fallback.accept(this, context);\n        }\n\n        if (branches.length !== expr.branches.length) {\n            // the number of branches changed, this means that\n            // some of the branches had constant expressions that\n            // evaluate to false. In this case the resulting\n            // `CaseExpr` has less branches.\n            changed = true;\n        }\n\n        // Instantiate the body of all the branches of this CaseExpr\n        // that have dynamic conditions.\n        branches.forEach(branch => {\n            const instantiatedBranch = branch[1].accept(this, context);\n\n            if (instantiatedBranch !== branch[1]) {\n                changed = true;\n            }\n\n            branch[1] = instantiatedBranch;\n        });\n\n        const fallback = expr.fallback.accept(this, context);\n\n        if (fallback !== expr.fallback) {\n            changed = true;\n        }\n\n        if (!changed) {\n            // nothing changed, return the old expression.\n            return expr;\n        }\n\n        return new CaseExpr(branches, fallback);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    CallExpr,\n    ContainsExpr,\n    EqualityOp,\n    Expr,\n    HasAttributeExpr,\n    NumberLiteralExpr,\n    RelationalOp,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * Character value\n */\nenum Character {\n    Tab = 9,\n    Lf = 10,\n    Cr = 13,\n    Space = 32,\n    LParen = 40,\n    RParen = 41,\n    Comma = 44,\n    Dot = 46,\n    LBracket = 91,\n    Backslash = 92,\n    RBracket = 93,\n    _0 = 48,\n    _9 = 57,\n    _ = 95,\n    A = 64,\n    Z = 90,\n    a = 97,\n    z = 122,\n    DoubleQuote = 34,\n    SingleQuote = 39,\n    Exclaim = 33,\n    Equal = 61,\n    Caret = 94,\n    Tilde = 126,\n    Dollar = 36,\n    Less = 60,\n    Greater = 62,\n    Bar = 124,\n    Amp = 38\n}\n\n/**\n * Check if a codepoint is a whitespace character.\n */\nfunction isSpace(codepoint: number): boolean {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\n\n/**\n * Check if codepoint is a digit character.\n */\nfunction isNumber(codepoint: number): boolean {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\n\n/**\n * Check if codepoint is a letter character.\n */\nfunction isLetter(codepoint: number): boolean {\n    return (\n        (codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z)\n    );\n}\n\n/**\n * Check if codepoint is either a digit or a letter character.\n */\nfunction isLetterOrNumber(codepoint: number): boolean {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\n\n/**\n * Check if codepoint is an identification character: underscore, dollar sign, dot or bracket.\n */\nfunction isIdentChar(codepoint: number): boolean {\n    return (\n        isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket\n    );\n}\n\n/**\n * Tokens used in theme grammar.\n */\nenum Token {\n    Eof = 0,\n    Error,\n    Identifier,\n    Number,\n    String,\n    Comma,\n    LParen,\n    RParen,\n    LBracket,\n    RBracket,\n    Exclaim,\n    TildeEqual,\n    CaretEqual,\n    DollarEqual,\n    EqualEqual,\n    ExclaimEqual,\n    Less,\n    Greater,\n    LessEqual,\n    GreaterEqual,\n    BarBar,\n    AmpAmp\n}\n\n/**\n * Maps a token to its string name.\n */\nfunction tokenSpell(token: Token): string {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(`invalid token ${token}`);\n    }\n}\n\n/**\n * Lexer class implementation.\n */\nclass Lexer {\n    private m_token: Token = Token.Error;\n    private m_index = 0;\n    private m_char: number = Character.Lf;\n    private m_text?: string;\n\n    constructor(readonly code: string) {}\n\n    /**\n     * Single lexer token.\n     */\n    token(): Token {\n        return this.m_token;\n    }\n\n    /**\n     * Parsed text.\n     */\n    text(): string {\n        return this.m_text || \"\";\n    }\n\n    /**\n     * Go to the next token.\n     */\n    next(): Token {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(`unexpected character ${this.m_char}`);\n        }\n        return this.m_token;\n    }\n\n    private yyinp(): void {\n        this.m_char = this.code.codePointAt(this.m_index++) || 0;\n    }\n\n    private yylex(): Token {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        const ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                const start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                const start = this.m_index - 2;\n                if (\n                    isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))\n                ) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                } else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                } else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    }\n}\n\nfunction getEqualityOp(token: Token): EqualityOp | undefined {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nfunction getRelationalOp(token: Token): RelationalOp | undefined {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nexport class ExprParser {\n    private readonly lex: Lexer;\n\n    constructor(code: string) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n\n    parse(): Expr | never {\n        return this.parseLogicalOr();\n    }\n\n    private yyexpect(token: Token): void | never {\n        if (this.lex.token() !== token) {\n            throw new Error(\n                `Syntax error: Expected token '${tokenSpell(token)}' but ` +\n                    `found '${tokenSpell(this.lex.token())}'`\n            );\n        }\n        this.lex.next();\n    }\n\n    private parsePrimary(): Expr | never {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                const text = this.lex.text();\n                switch (text) {\n                    case \"has\":\n                        this.lex.next(); // skip has keyword\n                        this.yyexpect(Token.LParen);\n                        const hasAttribute = this.lex.text();\n                        this.yyexpect(Token.Identifier);\n                        this.yyexpect(Token.RParen);\n                        return new HasAttributeExpr(hasAttribute);\n                    case \"length\":\n                        this.lex.next(); // skip length keyword\n                        this.yyexpect(Token.LParen);\n                        const value = this.parseLogicalOr();\n                        this.yyexpect(Token.RParen);\n                        return new CallExpr(\"length\", [value]);\n                    default:\n                        const expr = new VarExpr(text);\n                        this.lex.next();\n                        return expr;\n                }\n            }\n\n            case Token.LParen: {\n                this.lex.next();\n                const expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n\n            default:\n                return this.parseLiteral();\n        } // switch\n    }\n\n    private parseLiteral(): NumberLiteralExpr | StringLiteralExpr | never {\n        switch (this.lex.token()) {\n            case Token.Number: {\n                const expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                const expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            default:\n                throw new Error(\"Syntax error\");\n        } // switch\n    }\n\n    private parseUnary(): Expr | never {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new CallExpr(\"!\", [this.parseUnary()]);\n        }\n        return this.parsePrimary();\n    }\n\n    private parseRelational(): Expr | never {\n        let expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                const elements = [this.parseLiteral()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parseLiteral());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new ContainsExpr(\n                    expr,\n                    elements.map(literal => literal.value)\n                );\n            } else {\n                const op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                const right = this.parseUnary();\n                expr = new CallExpr(op, [expr, right]);\n            }\n        }\n        return expr;\n    }\n\n    private parseEquality(): Expr | never {\n        let expr = this.parseRelational();\n        while (true) {\n            const op = getEqualityOp(this.lex.token());\n            if (op === undefined) {\n                break;\n            }\n            this.lex.next();\n            const right = this.parseRelational();\n            expr = new CallExpr(op, [expr, right]);\n        }\n        return expr;\n    }\n\n    private parseLogicalAnd(): Expr | never {\n        const expr = this.parseEquality();\n\n        if (this.lex.token() !== Token.AmpAmp) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseEquality());\n        } while (this.lex.token() === Token.AmpAmp);\n\n        return new CallExpr(\"all\", expressions);\n    }\n\n    private parseLogicalOr(): Expr | never {\n        const expr = this.parseLogicalAnd();\n\n        if (this.lex.token() !== Token.BarBar) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseLogicalAnd());\n        } while (this.lex.token() === Token.BarBar);\n\n        return new CallExpr(\"any\", expressions);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Common communication protocol for [[WorkerService]].\n */\nexport namespace WorkerServiceProtocol {\n    /**\n     * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n     * instances in workers.\n     */\n    export const WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n\n    /**\n     * Define possible names of messages exchanged with services within `WebWorker`.\n     */\n    export enum ServiceMessageName {\n        Initialized = \"initialized\",\n        Request = \"request\",\n        Response = \"response\"\n    }\n\n    /**\n     * Interface for `ServiceMessage` which describes metadata for a service messages.\n     */\n    export interface ServiceMessage {\n        service: string;\n        type: ServiceMessageName;\n    }\n\n    /**\n     * This message is sent by the worker to the main thread. No data is sent. Receiving this\n     * message confirms that the worker has started successfully.\n     */\n    export interface InitializedMessage extends ServiceMessage {\n        type: ServiceMessageName.Initialized;\n    }\n\n    /**\n     * Type guard to check if an object is a signal message from worker.\n     */\n    export function isInitializedMessage(message: any): message is InitializedMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Initialized\n        );\n    }\n\n    /**\n     * Define possible names of requests called on services within `WebWorker`.\n     */\n    export enum Requests {\n        CreateService = \"create-service\",\n        DestroyService = \"destroy-service\"\n    }\n\n    /**\n     * This is an internal general interface used in communication with workers.\n     * Check [[ConcurrentWorkerSet]]'s invokeRequest function for exemplary usage.\n     */\n    export interface ServiceRequest {\n        type: string;\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically create a\n     * new service.\n     *\n     * May throw `UnknownServiceError` if service of given type is not registered in\n     * [[WorkerServiceManager]], see [[isUnknownServiceError]].\n     */\n    export interface CreateServiceRequest extends ServiceRequest {\n        type: Requests.CreateService;\n\n        /**\n         * Type of service to be created.\n         *\n         * @see [[WorkerServiceManager.register]]\n         */\n        targetServiceType: string;\n\n        /**\n         * The newly created service instance will be available under this id.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Test if `error` thrown by [[CreateServiceRequest]] was caused by unknown type of service.\n     */\n    export function isUnknownServiceError(error: Error): boolean {\n        return /unknown targetServiceType requested: /.test(error.message);\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically destroy a\n     * service.\n     */\n    export interface DestroyServiceRequest extends ServiceRequest {\n        type: Requests.DestroyService;\n\n        /**\n         * Id of service to be destroyed.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Possible service management messages (`CreateService` or `DestroyService`) sent to WebWorker.\n     */\n    export type WorkerServiceManagerRequest = CreateServiceRequest | DestroyServiceRequest;\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface RequestMessage extends ServiceMessage {\n        type: ServiceMessageName.Request;\n        messageId: number;\n        request: any;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isRequestMessage(message: any): message is RequestMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Request\n        );\n    }\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface ResponseMessage extends ServiceMessage {\n        type: ServiceMessageName.Response;\n        messageId: number;\n        errorMessage?: string;\n        errorStack?: string;\n        response?: object;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isResponseMessage(message: any): message is ResponseMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Response\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Communication protocol with [[ITiler]].\n */\nexport namespace WorkerTilerProtocol {\n    /**\n     * Define possible names of requests called on tiler services within `WebWorker`.\n     */\n    export enum Requests {\n        RegisterIndex = \"register-index\",\n        UpdateIndex = \"update-index\",\n        TileRequest = \"tile-request\"\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface RegisterIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.RegisterIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an index registration request sent to a worker.\n     */\n    export function isRegisterIndexRequest(message: any): message is RegisterIndexRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.RegisterIndex\n        );\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface UpdateIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.UpdateIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an update request for the index registration.\n     */\n    export function isUpdateIndexRequest(message: any): message is UpdateIndexRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.UpdateIndex;\n    }\n\n    /**\n     * This object is sent to the tiler asking to retrieve a specific tile. The expected response\n     * type is an object containing a tiled payload.\n     */\n    export interface TileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileRequest;\n        index: string;\n        tileKey: number;\n    }\n\n    /**\n     * Type guard to check if an object is a tile request sent to a worker.\n     */\n    export function isTileRequest(message: any): message is TileRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.TileRequest;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Definitions, StyleSet } from \"./Theme\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Interface for `OptionsMap` which describes a general structure of key-value pairs.\n */\nexport interface OptionsMap {\n    [name: string]: any;\n}\n\n/**\n * Allows to cancel and prioritize requests inside the requestQueue. Useful to optimize the order of\n * decoding tiles during animations and camera movements.\n *\n * `RequestController` is not extending [[AbortController]], because this is not supported in ES5.\n */\nexport class RequestController implements AbortController {\n    /**\n     * Creates an instance of `RequestController`.\n     *\n     * @param {number} priority\n     * @param {AbortController} abortController Optional [[AbortController]] used internally, since\n     *      [[AbortController]]s should not be subclassed.\n     */\n    constructor(\n        public priority: number = 0,\n        public abortController: AbortController = new AbortController()\n    ) {}\n\n    get signal(): AbortSignal {\n        return this.abortController.signal;\n    }\n\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and\n     * signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void {\n        this.abortController.abort();\n    }\n}\n\n/**\n * Communication protocol with [[ITileDecoder]].\n */\nexport namespace WorkerDecoderProtocol {\n    /**\n     * Define possible names of messages exchanged with decoder services within `WebWorker`.\n     */\n    export enum DecoderMessageName {\n        Configuration = \"configuration\"\n    }\n\n    /**\n     * Interface for `DecodedTileMessage` which describes metadata for a decoded tile.\n     */\n    export interface DecoderMessage {\n        service: string;\n        type: DecoderMessageName;\n    }\n\n    /**\n     * Interface for a ConfigurationMessage that is sent from the datasource to the decoder. The\n     * message used to configure the [[ITileDecoder]].\n     */\n    export interface ConfigurationMessage extends DecoderMessage {\n        type: DecoderMessageName.Configuration;\n        styleSet?: StyleSet;\n        definitions?: Definitions;\n        options?: OptionsMap;\n        languages?: string[];\n    }\n\n    /**\n     * Type guard to check if an object is an instance of `ConfigurationMessage`.\n     */\n    export function isConfigurationMessage(message: any): message is ConfigurationMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === DecoderMessageName.Configuration\n        );\n    }\n\n    /**\n     * Define possible names of requests called on decoder services within `WebWorker`.\n     */\n    export enum Requests {\n        DecodeTileRequest = \"decode-tile-request\",\n        TileInfoRequest = \"tile-info-request\"\n    }\n\n    /**\n     * This object is sent to the decoder asking to decode a specific tile. The expected response\n     * type is a [[DecodedTile]].\n     */\n    export interface DecodeTileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.DecodeTileRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is a decoded tile object sent to a worker.\n     */\n    export function isDecodeTileRequest(message: any): message is DecodeTileRequest {\n        return (\n            message &&\n            typeof message.type === \"string\" &&\n            message.type === Requests.DecodeTileRequest\n        );\n    }\n\n    /**\n     * This object is sent to the decoder asking for a tile info of a specific tile. The expected\n     * response type is a [[DecodedTile]].\n     */\n    export interface TileInfoRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileInfoRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is an info tile object sent to a worker.\n     */\n    export function isTileInfoRequest(message: any): message is TileInfoRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass IdentityProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = THREE.Math.degToRad(geoPoint.longitude);\n        result.y = THREE.Math.degToRad(geoPoint.latitude);\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = MathUtils.newEmptyBox3() as WorldBoundingBox;\n        }\n        const min = this.projectPoint(\n            new GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude)\n        );\n        const max = this.projectPoint(\n            new GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude)\n        );\n        if (isBox3Like(result)) {\n            result.min.x = min.x;\n            result.min.y = min.y;\n            result.min.z = min.z;\n            result.max.x = max.x;\n            result.max.y = max.y;\n            result.max.z = max.z;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (min.x + max.x) * 0.5;\n            result.position.y = (min.y + max.y) * 0.5;\n            result.position.z = (min.z + max.z) * 0.5;\n            result.extents.x = (max.x - min.x) * 0.5;\n            result.extents.y = (max.y - min.y) * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (max.z - min.z) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Identity [[Projection]] used to convert geo coordinates to unit coordinates and vice versa.\n */\nexport const identityProjection: Projection = new IdentityProjection(1);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { mercatorProjection, webMercatorProjection } from \"./MercatorProjection\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n * Transforms the given vector using the provided basis.\n */\nfunction apply(\n    xAxis: Vector3Like,\n    yAxis: Vector3Like,\n    zAxis: Vector3Like,\n    v: Vector3Like\n): Vector3Like {\n    const x = xAxis.x * v.x + yAxis.x * v.y + zAxis.x * v.z;\n    const y = xAxis.y * v.x + yAxis.y * v.y + zAxis.y * v.z;\n    const z = xAxis.z * v.x + yAxis.z * v.y + zAxis.z * v.z;\n    v.x = x;\n    v.y = y;\n    v.z = z;\n    return v;\n}\n\n/**\n * Returns the quadrants for the given longitude. The quadrant is defined as:\n *  - quadrant(+Math.PI * -1.0) = 0\n *  - quadrant(+Math.PI * -0.5) = 1\n *  - quadrant(+Math.PI *  0.0) = 2\n *  - quadrant(+Math.PI *  0.5) = 3\n *  - quadrant(+Math.PI *  1.0) = 4\n *\n * @param longitude The longitude in radians.\n */\nfunction getLongitudeQuadrant(longitude: number) {\n    const oneOverPI = 1 / Math.PI;\n    const quadrantIndex = Math.floor(2 * (longitude * oneOverPI + 1));\n    return THREE.Math.clamp(quadrantIndex, 0, 4);\n}\n\nfunction lengthOfVector3(worldPoint: Vector3Like): number {\n    const d = Math.sqrt(\n        worldPoint.x * worldPoint.x + worldPoint.y * worldPoint.y + worldPoint.z * worldPoint.z\n    );\n    return d;\n}\n\n/**\n * Creates a Box3 enclosing the geobox.\n *\n * @param geoBox Ghe given geobox\n * @param worldBox The resulting axis aligned bounding box.\n */\nfunction makeBox3<Bounds extends Box3Like>(\n    geoBox: GeoBox,\n    worldBox: Bounds,\n    unitScale: number\n): Bounds {\n    const halfEquatorialRadius = (unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n\n    const minLongitude = THREE.Math.degToRad(geoBox.west);\n    const maxLongitude = THREE.Math.degToRad(geoBox.east);\n\n    const minLongitudeQuadrant = getLongitudeQuadrant(minLongitude);\n    const maxLongitudeQuadrant = getLongitudeQuadrant(maxLongitude);\n\n    let xMin = Math.cos(minLongitude);\n    let xMax = xMin;\n    let yMin = Math.sin(minLongitude);\n    let yMax = yMin;\n\n    for (\n        let quadrantIndex = minLongitudeQuadrant + 1;\n        quadrantIndex <= maxLongitudeQuadrant;\n        quadrantIndex++\n    ) {\n        // tslint:disable-next-line: no-bitwise\n        const x = ((quadrantIndex + 1) & 1) * ((quadrantIndex & 2) - 1);\n        xMin = Math.min(x, xMin);\n        xMax = Math.max(x, xMax);\n\n        // tslint:disable-next-line: no-bitwise\n        const y = (quadrantIndex & 1) * ((quadrantIndex & 2) - 1);\n        yMin = Math.min(y, yMin);\n        yMax = Math.max(y, yMax);\n    }\n\n    const cosMaxLongitude = Math.cos(maxLongitude);\n    xMin = Math.min(cosMaxLongitude, xMin);\n    xMax = Math.max(cosMaxLongitude, xMax);\n\n    const sinMaxLongitude = Math.sin(maxLongitude);\n    yMin = Math.min(sinMaxLongitude, yMin);\n    yMax = Math.max(sinMaxLongitude, yMax);\n\n    const xCenter = (xMax + xMin) * halfEquatorialRadius;\n    const xExtent = (xMax - xMin) * halfEquatorialRadius;\n\n    const yCenter = (yMax + yMin) * halfEquatorialRadius;\n    const yExtent = (yMax - yMin) * halfEquatorialRadius;\n\n    // Calculate Z boundaries.\n    const minLatitude = THREE.Math.degToRad(geoBox.south);\n    const maxLatutide = THREE.Math.degToRad(geoBox.north);\n\n    const zMax = Math.sin(maxLatutide);\n    const zMin = Math.sin(minLatitude);\n\n    const zCenter = (zMax + zMin) * halfEquatorialRadius;\n    const zExtent = (zMax - zMin) * halfEquatorialRadius;\n\n    worldBox.min.x = xCenter - xExtent;\n    worldBox.min.y = yCenter - yExtent;\n    worldBox.min.z = zCenter - zExtent;\n    worldBox.max.x = xCenter + xExtent;\n    worldBox.max.y = yCenter + yExtent;\n    worldBox.max.z = zCenter + zExtent;\n\n    return worldBox;\n}\n\n/**\n * Computes the spherical projection of the given geo coordinates.\n *\n * @param geoPoint The geo coordinates.\n * @param worldpoint The resulting world coordinates.\n */\nfunction project<WorldCoordinates extends Vector3Like>(\n    geoPoint: GeoCoordinatesLike,\n    worldpoint: WorldCoordinates,\n    unitScale: number\n): typeof worldpoint {\n    const radius = unitScale + (geoPoint.altitude || 0);\n    const latitude = THREE.Math.degToRad(geoPoint.latitude);\n    const longitude = THREE.Math.degToRad(geoPoint.longitude);\n    const cosLatitude = Math.cos(latitude);\n    worldpoint.x = radius * cosLatitude * Math.cos(longitude);\n    worldpoint.y = radius * cosLatitude * Math.sin(longitude);\n    worldpoint.z = radius * Math.sin(latitude);\n    return worldpoint;\n}\n\nclass SphereProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Spherical;\n\n    /** @override */\n    worldExtent<Bounds extends Box3Like>(\n        _minElevation: number,\n        maxElevation: number,\n        result: Bounds = MathUtils.newEmptyBox3() as Bounds\n    ): Bounds {\n        const radius = this.unitScale + maxElevation;\n        result.min.x = -radius;\n        result.min.y = -radius;\n        result.min.z = -radius;\n        result.max.x = radius;\n        result.max.y = radius;\n        result.max.z = radius;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result: WorldCoordinates = MathUtils.newVector3(0, 0, 0) as WorldCoordinates\n    ): WorldCoordinates {\n        return project(geoPoint, result, this.unitScale);\n    }\n\n    /** @override */\n    unprojectPoint(point: Vector3Like): GeoCoordinates {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y;\n        const parallelRadius = Math.sqrt(parallelRadiusSq);\n        const v = point.z / parallelRadius;\n\n        if (isNaN(v)) {\n            return GeoCoordinates.fromRadians(0, 0, -this.unitScale);\n        }\n\n        const radius = Math.sqrt(parallelRadiusSq + point.z * point.z);\n\n        return GeoCoordinates.fromRadians(\n            Math.atan(v),\n            Math.atan2(point.y, point.x),\n            radius - this.unitScale\n        );\n    }\n\n    /** @override */\n    unprojectAltitude(point: Vector3Like): number {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y + point.z * point.z;\n        return Math.sqrt(parallelRadiusSq) - EarthConstants.EQUATORIAL_RADIUS;\n    }\n\n    /** @override */\n    projectBox<Bounds extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: Bounds = MathUtils.newEmptyBox3() as Bounds\n    ): Bounds {\n        if (isBox3Like(result)) {\n            return makeBox3(geoBox, result, this.unitScale);\n        } else if (isOrientedBox3Like(result)) {\n            if (geoBox.longitudeSpan >= 90) {\n                const bounds = makeBox3(geoBox, MathUtils.newEmptyBox3(), this.unitScale);\n                MathUtils.newVector3(1, 0, 0, result.xAxis);\n                MathUtils.newVector3(0, 1, 0, result.yAxis);\n                MathUtils.newVector3(0, 0, 1, result.zAxis);\n                result.position.x = (bounds.max.x + bounds.min.x) * 0.5;\n                result.position.y = (bounds.max.y + bounds.min.y) * 0.5;\n                result.position.z = (bounds.max.z + bounds.min.z) * 0.5;\n                result.extents.x = (bounds.max.x - bounds.min.x) * 0.5;\n                result.extents.y = (bounds.max.y - bounds.min.y) * 0.5;\n                result.extents.z = (bounds.max.z - bounds.min.z) * 0.5;\n                return result;\n            }\n\n            const { south, west, north, east, center: mid } = geoBox;\n            const midX = mid.longitude;\n            const midY = mid.latitude;\n            const cosSouth = Math.cos(THREE.Math.degToRad(south));\n            const sinSouth = Math.sin(THREE.Math.degToRad(south));\n            const cosWest = Math.cos(THREE.Math.degToRad(west));\n            const sinWest = Math.sin(THREE.Math.degToRad(west));\n            const cosNorth = Math.cos(THREE.Math.degToRad(north));\n            const sinNorth = Math.sin(THREE.Math.degToRad(north));\n            const cosEast = Math.cos(THREE.Math.degToRad(east));\n            const sinEast = Math.sin(THREE.Math.degToRad(east));\n            const cosMidX = Math.cos(THREE.Math.degToRad(midX));\n            const sinMidX = Math.sin(THREE.Math.degToRad(midX));\n            const cosMidY = Math.cos(THREE.Math.degToRad(midY));\n            const sinMidY = Math.sin(THREE.Math.degToRad(midY));\n\n            // Build the orientation of the OBB using the normal vector and its partial derivates.\n\n            // the sperical coordinates of the mid point of the geobox.\n            MathUtils.newVector3(cosMidX * cosMidY, sinMidX * cosMidY, sinMidY, result.zAxis);\n\n            // the partial derivates of the normal vector.\n            MathUtils.newVector3(-sinMidX, cosMidX, 0, result.xAxis);\n            MathUtils.newVector3(-cosMidX * sinMidY, -sinMidX * sinMidY, cosMidY, result.yAxis);\n\n            let width: number;\n            let minY: number;\n            let maxY: number;\n\n            if (south >= 0) {\n                // abs(dot(southWest - southEast, xAxis))\n                width = Math.abs(\n                    cosSouth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                );\n\n                // dot(south, yAxis)\n                minY = cosMidY * sinSouth - sinMidY * cosSouth;\n\n                // dot(northEast, zAxis)\n                maxY =\n                    cosMidY * sinNorth -\n                    sinMidY * cosNorth * (cosMidX * cosEast + sinMidX * sinEast);\n            } else {\n                if (north <= 0) {\n                    // abs(dot(northWest - northEast, xAxis))\n                    width = Math.abs(\n                        cosNorth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                    );\n\n                    // dot(north, yAxis)\n                    maxY = cosMidY * sinNorth - sinMidY * cosNorth;\n                } else {\n                    // abs(dot(west - east, xAxis))\n                    width = Math.abs(cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest));\n\n                    // dot(northEast, yAxis)\n                    maxY =\n                        cosMidY * sinNorth -\n                        sinMidY * cosNorth * (sinMidX * sinEast + cosMidX * cosEast);\n                }\n\n                // dot(southEast, yAxis)\n                minY =\n                    cosMidY * sinSouth -\n                    sinMidY * cosSouth * (cosMidX * cosEast + sinMidX * sinEast);\n            }\n\n            const rMax = (this.unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n            const rMin = (this.unitScale + (geoBox.minAltitude || 0)) * 0.5;\n\n            // min(dot(southEast, zAxis), dot(northEast, zAxis))\n\n            const d = cosMidY * (cosMidX * cosEast + sinMidX * sinEast);\n\n            const minZ = Math.min(\n                cosNorth * d + sinNorth * sinMidY,\n                cosSouth * d + sinSouth * sinMidY\n            );\n\n            MathUtils.newVector3(\n                width * rMax,\n                (maxY - minY) * rMax,\n                rMax - minZ * rMin,\n                result.extents\n            );\n\n            MathUtils.newVector3(0, (minY + maxY) * rMax, rMax + rMax, result.position);\n\n            apply(result.xAxis, result.yAxis, result.zAxis, result.position);\n\n            result.position.x = result.position.x - result.zAxis.x * result.extents.z;\n            result.position.y = result.position.y - result.zAxis.y * result.extents.z;\n            result.position.z = result.position.z - result.zAxis.z * result.extents.z;\n\n            return result;\n        }\n\n        throw new Error(\"Invalid bounding box\");\n    }\n\n    /** @override */\n    unprojectBox(_worldBox: Box3Like): GeoBox {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return lengthOfVector3(worldPoint) - this.unitScale;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        const scale = this.unitScale / (lengthOfVector3(worldPoint) || 1);\n        worldPoint.x *= scale;\n        worldPoint.y *= scale;\n        worldPoint.z *= scale;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 0 };\n        }\n        const scale = 1 / (lengthOfVector3(worldPoint) || 1);\n        normal.x = worldPoint.x * scale;\n        normal.y = worldPoint.y * scale;\n        normal.z = worldPoint.z * scale;\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === mercatorProjection || sourceProjection === webMercatorProjection) {\n            const { x, y, z } = worldPos;\n            const r = this.unitScale;\n            const mx = x / r - Math.PI;\n            const my = y / r - Math.PI;\n            const w = Math.exp(my);\n            const d = w * w;\n            const gx = (2 * w) / (d + 1);\n            const gy = (d - 1) / (d + 1);\n            const scale = r + z;\n\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = Math.cos(mx) * gx * scale;\n            result.y = Math.sin(mx) * gx * scale;\n            result.z = gy * scale;\n\n            if (sourceProjection === webMercatorProjection) {\n                result.z = -result.z;\n            }\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        const latitude = THREE.Math.degToRad(geoPoint.latitude);\n        const longitude = THREE.Math.degToRad(geoPoint.longitude);\n\n        const cosLongitude = Math.cos(longitude);\n        const sinLongitude = Math.sin(longitude);\n        const cosLatitude = Math.cos(latitude);\n        const sinLatitude = Math.sin(latitude);\n\n        MathUtils.newVector3(\n            cosLongitude * cosLatitude,\n            sinLongitude * cosLatitude,\n            sinLatitude,\n            result.zAxis\n        );\n\n        MathUtils.newVector3(-sinLongitude, cosLongitude, 0, result.xAxis);\n\n        MathUtils.newVector3(\n            -cosLongitude * sinLatitude,\n            -sinLongitude * sinLatitude,\n            cosLatitude,\n            result.yAxis\n        );\n\n        this.projectPoint(geoPoint, result.position);\n\n        return result;\n    }\n}\n\nexport const sphereProjection: Projection = new SphereProjection(EarthConstants.EQUATORIAL_RADIUS);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A class used to represent a quadtree.\n */\nexport class QuadTree {\n    /**\n     * Constructs a new `QuadTree` for the given [[TilingScheme]].\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme The TilingScheme used by this `QuadTree`.\n     */\n    constructor(readonly tilingScheme: TilingScheme) {}\n\n    /**\n     * Visits this `QuadTree` and invoke the given accept method with the current [[TileKey]] and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visit(accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        this.visitTileKey(TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    }\n\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey The root of the subtree that should be visited.\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visitTileKey(tileKey: TileKey, accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        const geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n\n        for (const subTileKey of this.tilingScheme.getSubTileKeys(tileKey)) {\n            this.visitTileKey(subTileKey, accept);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { normalizedEquirectangularProjection } from \"../projection/EquirectangularProjection\";\nimport { halfQuadTreeSubdivisionScheme } from \"./HalfQuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * [[TilingScheme]] used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexport const hereTilingScheme = new TilingScheme(\n    halfQuadTreeSubdivisionScheme,\n    normalizedEquirectangularProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { webMercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and web Mercator projection.\n */\nexport const webMercatorTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    webMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * The [[TilingScheme]] used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexport const mercatorTilingScheme = new TilingScheme(quadTreeSubdivisionScheme, mercatorProjection);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { transverseMercatorProjection } from \"../projection/TransverseMercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and\n * transverse Mercator projection.\n */\nexport const polarTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    transverseMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector3.\n */\nexport interface Vector3Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n\n    /**\n     * The Z position.\n     */\n    z: number;\n}\n\nexport function isVector3Like(v: any): v is Vector3Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[TransformLike]] is used to represent transforms with\n * only translation and rotation.\n */\nexport interface TransformLike {\n    /**\n     * The position of this transform.\n     */\n    readonly position: Vector3Like;\n\n    /**\n     * The x-axis of this transform.\n     */\n    readonly xAxis: Vector3Like;\n\n    /**\n     * The y-axis of this transform.\n     */\n    readonly yAxis: Vector3Like;\n\n    /**\n     * The z-axis of this transform.\n     */\n    readonly zAxis: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[TransformLike]].\n *\n * @param object The object.\n */\nexport function isTransformLike(object: {}): object is TransformLike {\n    const transform = object as Partial<TransformLike>;\n    return (\n        transform.position !== undefined &&\n        transform.xAxis !== undefined &&\n        transform.yAxis !== undefined &&\n        transform.zAxis !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Frustum, Matrix4, Plane, Vector3 } from \"three\";\nimport { OrientedBox3Like } from \"./OrientedBox3Like\";\n\nexport class OrientedBox3 implements OrientedBox3Like {\n    /**\n     * The position of the center of this `OrientedBox3`.\n     */\n    readonly position = new Vector3();\n\n    /**\n     * The x-axis of this `OrientedBox3`.\n     */\n    readonly xAxis = new Vector3(1, 0, 0);\n\n    /**\n     * The y-axis of this `OrientedBox3`.\n     */\n    readonly yAxis = new Vector3(0, 1, 0);\n\n    /**\n     * The z-axis of this `OrientedBox3`.\n     */\n    readonly zAxis = new Vector3(0, 0, 1);\n\n    /**\n     * The extents of this `OrientedBox3`.\n     */\n    readonly extents = new Vector3();\n\n    /**\n     * Creates a new `OrientedBox3`.\n     */\n    constructor();\n\n    /**\n     * Creates a new `OrientedBox3` with the given position, orientation and extents.\n     *\n     * @param position The position of the center of the `OrientedBox3`.\n     * @param rotationMatrix The rotation of the `OrientedBox3`.\n     * @param extents The extents of the `OrientedBox3`.\n     */\n    constructor(position: Vector3, rotationMatrix: Matrix4, extents: Vector3);\n\n    /**\n     * Creates a new `OrientedBox3`.\n     *\n     * @hideconstructor\n     */\n    constructor(position?: Vector3, rotationMatrix?: Matrix4, extents?: Vector3) {\n        if (position !== undefined) {\n            this.position.copy(position);\n        }\n\n        if (rotationMatrix !== undefined) {\n            rotationMatrix.extractBasis(this.xAxis, this.yAxis, this.zAxis);\n        }\n\n        if (extents !== undefined) {\n            this.extents.copy(extents);\n        }\n    }\n\n    /**\n     * Create a copy of this [[OrientedBoundingBox]].\n     */\n    clone(): OrientedBox3 {\n        const newBox = new OrientedBox3();\n        newBox.copy(this);\n        return newBox;\n    }\n\n    /**\n     * Copies the values of `other` to this [[OrientedBox3]].\n     * @param other The other [[OrientedBox3]] to copy.\n     */\n    copy(other: OrientedBox3) {\n        this.position.copy(other.position);\n        this.xAxis.copy(other.xAxis);\n        this.yAxis.copy(other.yAxis);\n        this.zAxis.copy(other.zAxis);\n        this.extents.copy(other.extents);\n    }\n\n    /**\n     * Gets the center position of this [[OrientedBox3]].\n     *\n     * @param center The returned center position.\n     */\n    getCenter(center = new Vector3()): Vector3 {\n        return center.copy(this.position);\n    }\n\n    /**\n     * Gets the size of this [[OrientedBox3]].\n     *\n     * @param size The returned size.\n     */\n    getSize(size = new Vector3()): Vector3 {\n        return size.copy(this.extents).multiplyScalar(2);\n    }\n\n    /**\n     * Gets the orientation matrix of this `OrientedBox3`.\n     * @param matrix The output orientation matrix.\n     */\n    getRotationMatrix(matrix: Matrix4 = new Matrix4()): Matrix4 {\n        return matrix.makeBasis(this.xAxis, this.yAxis, this.zAxis);\n    }\n\n    /**\n     * Checks intersection with the given `THREE.Frustum` or array of `THREE.Plane`s.\n     *\n     * @param frustumOrPlanes Frustum or array of planes.\n     */\n    intersects(frustumOrPlanes: Plane[] | Frustum): boolean {\n        const planes: Plane[] = Array.isArray(frustumOrPlanes)\n            ? frustumOrPlanes\n            : frustumOrPlanes.planes;\n\n        for (const plane of planes) {\n            const r =\n                Math.abs(plane.normal.dot(this.xAxis) * this.extents.x) +\n                Math.abs(plane.normal.dot(this.yAxis) * this.extents.y) +\n                Math.abs(plane.normal.dot(this.zAxis) * this.extents.z);\n\n            const d = plane.distanceToPoint(this.position);\n\n            if (d + r < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns true if this [[OrientedBox3]] contains the given point.\n     *\n     * @param point A valid point.\n     */\n    contains(point: Vector3): boolean {\n        const dx = point.x - this.position.x;\n        const dy = point.y - this.position.y;\n        const dz = point.z - this.position.z;\n        const x = Math.abs(dx * this.xAxis.x + dy * this.xAxis.y + dz * this.xAxis.z);\n        const y = Math.abs(dx * this.yAxis.x + dy * this.yAxis.y + dz * this.yAxis.z);\n        const z = Math.abs(dx * this.zAxis.x + dy * this.zAxis.y + dz * this.zAxis.z);\n        if (x > this.extents.x || y > this.extents.y || z > this.extents.z) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPoint(point: Vector3): number {\n        return Math.sqrt(this.distanceToPointSquared(point));\n    }\n\n    /**\n     * Returns the squared distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPointSquared(point: Vector3): number {\n        const d = new Vector3();\n        d.subVectors(point, this.position);\n\n        const lengths = [d.dot(this.xAxis), d.dot(this.yAxis), d.dot(this.zAxis)];\n\n        let result = 0;\n\n        for (let i = 0; i < 3; ++i) {\n            const length = lengths[i];\n            const extent = this.extents.getComponent(i);\n            if (length < -extent) {\n                const dd = extent + length;\n                result += dd * dd;\n            } else if (length > extent) {\n                const dd = length - extent;\n                result += dd * dd;\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\n\nimport { Env, MapEnv, Value } from \"./Expr\";\nimport { makeDecodedTechnique } from \"./StyleSetEvaluator\";\nimport { AttrEvaluationContext, evaluateTechniqueAttr } from \"./TechniqueAttr\";\nimport {\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    isTextTechnique,\n    Technique\n} from \"./Techniques\";\n\n/**\n * Defines a map tile metadata.\n */\nexport interface TileInfo {\n    readonly tileKey: TileKey;\n    readonly setupTime: number;\n    readonly transferList?: ArrayBuffer[];\n    readonly numBytes: number;\n}\n\n/**\n * Represents a feature group type for tile info.\n */\nexport enum FeatureGroupType {\n    Point,\n    Line,\n    Polygon\n}\n\n/**\n * Minimum estimated size of a JS object.\n */\nconst MINIMUM_OBJECT_SIZE_ESTIMATION = 100;\n\n/**\n * Structure of arrays containing data for all features of this group. No methods, since the object\n * is being passed as part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n */\nexport class FeatureGroup {\n    /** featureIds */\n    featureIds: Array<number | undefined> = new Array<number | undefined>();\n\n    /** Indices into [[ExtendedTileInfo]].techniqueCatalog */\n    techniqueIndex: number[];\n\n    /** Indices into [[ExtendedTileInfo]].textCatalog. */\n    textIndex: number[];\n\n    /** Indices into positions. */\n    positionIndex: number[];\n\n    /** XY coordinates of this group. */\n    positions: number[];\n\n    /** number of features */\n    numFeatures: number = 0;\n\n    /** number of positions of elements (2 per point) */\n    numPositions: number = 0;\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].layerCatalog. Only available if\n     * [[OmvFeatureGroup]] has been constructed with `storeExtendedTags` set to `true`.\n     */\n    layerIndex?: number[];\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].classCatalog. Only available if\n     * [[OmvFeatureGroup]] has been constructed with `storeExtendedTags` set to `true`.\n     */\n    classIndex?: number[];\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].typeCatalog. Only available if [[OmvFeatureGroup]]\n     * has been constructed with `storeExtendedTags` set to `true`.\n     */\n    typeIndex?: number[];\n\n    /**\n     * Construct featureGroup.\n     *\n     * @param storeExtendedTags Pass `true` to create fields for more OMV tags (`layer`, `class`\n     * and `type`).\n     */\n    constructor(storeExtendedTags: boolean, startSize: number = 5000) {\n        this.featureIds = new Array<number>(startSize);\n        this.featureIds.length = startSize;\n        this.techniqueIndex = new Array<number>(startSize);\n        this.techniqueIndex.length = startSize;\n        this.textIndex = new Array<number>(startSize);\n        this.textIndex.length = startSize;\n        this.positionIndex = new Array<number>(startSize);\n        this.positionIndex.length = startSize;\n        this.positions = new Array<number>(10 * startSize);\n        this.positions.length = 10 * startSize;\n\n        if (storeExtendedTags) {\n            this.layerIndex = new Array<number>(startSize);\n            this.layerIndex.length = startSize;\n            this.classIndex = new Array<number>(startSize);\n            this.classIndex.length = startSize;\n            this.typeIndex = new Array<number>(startSize);\n            this.typeIndex.length = startSize;\n        }\n    }\n\n    /**\n     * Compute size in bytes.\n     */\n    getNumBytes(): number {\n        return (\n            (this.featureIds.length +\n                this.techniqueIndex.length +\n                this.textIndex.length +\n                this.positionIndex.length +\n                this.positions.length +\n                (this.layerIndex !== undefined ? this.layerIndex.length : 0) +\n                (this.classIndex !== undefined ? this.classIndex.length : 0) +\n                (this.typeIndex !== undefined ? this.typeIndex.length : 0)) *\n            8\n        );\n    }\n}\n\n/**\n * Structure of arrays containing data for roads. No methods, since the object is being passed as\n * part of [[ExtendedTileInfo]] across \"process boundaries\" to the web worker.\n */\nexport class LineFeatureGroup extends FeatureGroup {\n    /**\n     * An array of road segment ids. Is the same length as `featureIds` but certain elements can be\n     * `undefined` (if this line feature is not a road).\n     */\n    segmentIds?: number[];\n\n    /**\n     * An array of road start offsets. Certain elements may be `undefined` (if this line feature is\n     * not a road).\n     */\n    segmentStartOffsets?: number[];\n\n    /**\n     * An array of road end offsets. Certain elements may be `undefined` (if this line feature is\n     * not a road).\n     */\n    segmentEndOffsets?: number[];\n\n    /**\n     * An array of object defined by the user. Certain elements may be `undefined` (if this line\n     * feature is not a road, or if the object for that feature is undefined).\n     */\n    userData: Array<{} | undefined> = [];\n\n    /** @override */\n    getNumBytes(): number {\n        return (\n            super.getNumBytes() +\n            ((this.segmentIds !== undefined ? this.segmentIds.length : 0) +\n                (this.segmentStartOffsets !== undefined ? this.segmentStartOffsets.length : 0) +\n                (this.segmentEndOffsets !== undefined ? this.segmentEndOffsets.length : 0)) *\n                8\n        );\n    }\n}\n\n/**\n * Structure of arrays containing data for polygons. No methods, since the object is being passed as\n * part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nexport class PolygonFeatureGroup extends FeatureGroup {\n    /**\n     * Indices into innerRingStartIndex. One entry for every polygon feature.\n     *\n     * Number of rings is computed by either:\n     *\n     * a) Computing from the next innerRingStart, or\n     *\n     * b) Computing from the size of the array.\n     */\n    outerRingStartIndex: number[];\n\n    /**\n     * One entry for every polygon feature. Contains `true` if a polygon ring is an _outside_ ring,\n     * `false` otherwise.\n     */\n    innerRingIsOuterContour: number[];\n\n    /**\n     * Indices into [[OmvFeatureGroup]]`.positions`. One index for every ring.\n     *\n     * Number of inner rings is computed by either:\n     *\n     * a) Computing from the next innerRingStart, or\n     *\n     * b) Computing from the size of the array.\n     */\n    innerRingStartIndex: number[];\n\n    /**\n     * Number of rings stored in all polygons in tis group. Used to keep size of the\n     * arrays.\n     */\n    groupNumRings: number = 0;\n\n    constructor(storeExtendedTags: boolean, startSize: number = 5000) {\n        super(storeExtendedTags, startSize);\n\n        this.outerRingStartIndex = new Array<number>(startSize);\n        this.outerRingStartIndex.length = startSize;\n        this.innerRingIsOuterContour = new Array<number>(startSize);\n        this.innerRingIsOuterContour.length = startSize;\n        this.innerRingStartIndex = new Array<number>(startSize);\n        this.innerRingStartIndex.length = startSize;\n    }\n\n    /** @override */\n    getNumBytes(): number {\n        return (\n            super.getNumBytes() +\n            ((this.outerRingStartIndex !== undefined ? this.outerRingStartIndex.length : 0) +\n                (this.innerRingIsOuterContour !== undefined\n                    ? this.innerRingIsOuterContour.length\n                    : 0) +\n                (this.innerRingStartIndex !== undefined ? this.innerRingStartIndex.length : 0)) *\n                8\n        );\n    }\n}\n\n/**\n * Class to hold infos from [[OmvTile]]s. Optimized for fast serialization when being passed from\n * webworker to main thread. No methods, since the object is being passed across \"process\n * boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nexport class ExtendedTileInfo implements TileInfo {\n    /**\n     * Catalog of strings. Addressed by every features stringIndex.\n     */\n    readonly textCatalog: string[] = new Array<string>();\n    /**\n     * Catalog of techniques. Addressed by every features featureIndex.\n     */\n    readonly techniqueCatalog: IndexedTechnique[] = new Array<IndexedTechnique>();\n\n    /**\n     * Feature group containing all infos about `POINT` features.\n     */\n    readonly pointGroup: FeatureGroup;\n\n    /**\n     * Feature group containing all infos about `LINESTRING` features.\n     */\n    readonly lineGroup: LineFeatureGroup;\n\n    /**\n     * Feature group containing all infos about `POLYGON` features.\n     */\n    readonly polygonGroup: PolygonFeatureGroup;\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly layerCatalog?: string[];\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly classCatalog?: string[];\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly typeCatalog?: string[];\n\n    /**\n     * Used for performance diagnostics.\n     */\n    setupTime: number = 0;\n\n    /**\n     * Size in bytes.\n     */\n    numBytes: number = 0;\n\n    constructor(readonly tileKey: TileKey, storeExtendedTags: boolean) {\n        this.pointGroup = new FeatureGroup(storeExtendedTags);\n        this.lineGroup = new LineFeatureGroup(storeExtendedTags);\n        this.polygonGroup = new PolygonFeatureGroup(storeExtendedTags);\n\n        if (storeExtendedTags) {\n            this.layerCatalog = new Array<string>();\n            this.classCatalog = new Array<string>();\n            this.typeCatalog = new Array<string>();\n        }\n    }\n\n    /**\n     * Compute the memory footprint caused by objects owned by the `ExtendedTileInfo`.\n     */\n    getNumBytes(): number {\n        let numBytes = MINIMUM_OBJECT_SIZE_ESTIMATION;\n        for (const str of this.textCatalog) {\n            numBytes += 2 * str.length;\n        }\n\n        numBytes += this.techniqueCatalog.length * MINIMUM_OBJECT_SIZE_ESTIMATION;\n\n        numBytes += this.pointGroup.getNumBytes();\n        numBytes += this.lineGroup.getNumBytes();\n        numBytes += this.polygonGroup.getNumBytes();\n\n        if (this.layerCatalog !== undefined) {\n            for (const str of this.layerCatalog) {\n                numBytes += 2 * str.length;\n            }\n            for (const str of this.classCatalog!) {\n                numBytes += 2 * str.length;\n            }\n            for (const str of this.typeCatalog!) {\n                numBytes += 2 * str.length;\n            }\n        }\n\n        return numBytes;\n    }\n}\n\nexport namespace ExtendedTileInfo {\n    function finishFeatureGroup(featureGroup: FeatureGroup) {\n        featureGroup.featureIds.length = featureGroup.numFeatures;\n        featureGroup.techniqueIndex.length = featureGroup.numFeatures;\n        featureGroup.textIndex.length = featureGroup.numFeatures;\n        featureGroup.positionIndex.length = featureGroup.numFeatures;\n        featureGroup.positions.length = featureGroup.numPositions;\n\n        if (featureGroup.layerIndex !== undefined) {\n            featureGroup.layerIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.classIndex !== undefined) {\n            featureGroup.classIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.typeIndex !== undefined) {\n            featureGroup.typeIndex.length = featureGroup.numFeatures;\n        }\n    }\n\n    function finishPolygonFeatureGroup(polygonGroup: PolygonFeatureGroup) {\n        finishFeatureGroup(polygonGroup);\n        polygonGroup.outerRingStartIndex.length = polygonGroup.numFeatures;\n        polygonGroup.innerRingIsOuterContour.length = polygonGroup.groupNumRings;\n        polygonGroup.innerRingStartIndex.length = polygonGroup.groupNumRings;\n    }\n\n    function finishLineFeatureGroup(lineGroup: LineFeatureGroup) {\n        finishFeatureGroup(lineGroup);\n        if (lineGroup.segmentIds !== undefined) {\n            lineGroup.segmentIds.length = lineGroup.numFeatures;\n            lineGroup.segmentStartOffsets!.length = lineGroup.numFeatures;\n            lineGroup.segmentEndOffsets!.length = lineGroup.numFeatures;\n        }\n    }\n\n    /**\n     * Finalize the tile's features groups.\n     */\n    export function finish(tileInfo: ExtendedTileInfo) {\n        finishFeatureGroup(tileInfo.pointGroup);\n        finishLineFeatureGroup(tileInfo.lineGroup);\n        finishPolygonFeatureGroup(tileInfo.polygonGroup);\n        tileInfo.numBytes = tileInfo.getNumBytes();\n    }\n\n    /**\n     * Returns the number of features in this feature group.\n     */\n    export function featureGroupSize(featureGroup: FeatureGroup): number {\n        return featureGroup.numFeatures;\n    }\n\n    /**\n     * Check if the feature group is finalized.\n     */\n    export function featureGroupFinished(featureGroup: FeatureGroup): boolean {\n        return featureGroup.numPositions === featureGroup.positions.length;\n    }\n\n    /**\n     * Check if the tileInfo is finalized.\n     */\n    export function tileInfoFinished(tileInfo: ExtendedTileInfo): boolean {\n        return (\n            featureGroupFinished(tileInfo.pointGroup) &&\n            featureGroupFinished(tileInfo.lineGroup) &&\n            featureGroupFinished(tileInfo.polygonGroup)\n        );\n    }\n\n    /**\n     * Determine the name of (OMV) feature. It implements the special handling required\n     * to determine the text content of a feature from its tags, which are passed in as the `env`.\n     *\n     * @param env Environment containing the tags from the (OMV) feature.\n     * @param useAbbreviation `true` to use the abbreviation if available.\n     * @param useIsoCode `true` to use the tag \"iso_code\".\n     * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n     *                  as the text of the string. Order reflects priority.\n     */\n    export function getFeatureName(\n        env: Env,\n        useAbbreviation?: boolean,\n        useIsoCode?: boolean,\n        languages?: string[]\n    ): string | undefined {\n        let name;\n        if (useAbbreviation) {\n            const abbreviation = env.lookup(`name:short`);\n            if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n                return abbreviation;\n            }\n        }\n        if (useIsoCode) {\n            const isoCode = env.lookup(`iso_code`);\n            if (typeof isoCode === \"string\" && isoCode.length > 0) {\n                return isoCode;\n            }\n        }\n        if (languages !== undefined) {\n            for (const lang of languages) {\n                name = env.lookup(`name:${lang}`) || env.lookup(`name_${lang}`);\n                if (typeof name === \"string\" && name.length > 0) {\n                    return name;\n                }\n            }\n        }\n        name = env.lookup(\"name\");\n        if (typeof name === \"string\") {\n            return name;\n        }\n        return undefined;\n    }\n\n    /**\n     * Determine the text string of the map feature. It implements the special handling required\n     * to determine the text content of a feature from its tags, which are passed in as the `env`.\n     *\n     * @param feature Feature, including properties from the (OMV) feature.\n     * @param technique technique defining how text should be created from feature\n     * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n     *                  as the text of the string. Order reflects priority.\n     */\n    export function getFeatureText(\n        context: Env | AttrEvaluationContext,\n        technique: Technique,\n        languages?: string[]\n    ): string | undefined {\n        let useAbbreviation: boolean | undefined;\n        let useIsoCode: boolean | undefined;\n        const env = context instanceof Env ? context : context.env;\n        if (\n            isTextTechnique(technique) ||\n            isPoiTechnique(technique) ||\n            isLineMarkerTechnique(technique)\n        ) {\n            if (technique.text !== undefined) {\n                return evaluateTechniqueAttr(context, technique.text);\n            }\n            if (technique.label !== undefined) {\n                const name = env.lookup(technique.label);\n                return typeof name === \"string\" ? name : undefined;\n            }\n            useAbbreviation = technique.useAbbreviation;\n            useIsoCode = technique.useIsoCode;\n        }\n\n        return getFeatureName(env, useAbbreviation, useIsoCode, languages);\n    }\n}\n\n/**\n * Support class for [[ExtendedTileInfo]]. Assist in filling it with data.\n */\nexport class ExtendedTileInfoWriter {\n    /** Map to identify which techniques already have been added to the [[ExtendedTileInfo]]. */\n    private readonly techniqueIndexMap = new Map<number, number>();\n    /** Map to identify which strings already have been added to the [[ExtendedTileInfo]]. */\n    private readonly stringMap = new Map<string, number>();\n    /** Map to identify which `layer` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly layerMap = new Map<string, number>();\n    /** Map to identify which `class` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly classMap = new Map<string, number>();\n    /** Map to identify which `type` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly typeMap = new Map<string, number>();\n\n    /**\n     * Create an [[ExtendedTileInfoWriter]] for an [[ExtendedTileInfo]]. Assist in filling the\n     * [[ExtendedTileInfo]] with data.\n     *\n     * @param tileInfo [[ExtendedTileInfo]] to write data to.\n     * @param storeExtendedTags Pass `true` if feature data like `layer`, `class`or `type` should\n     *          be stored for every feature.\n     */\n    constructor(readonly tileInfo: ExtendedTileInfo, readonly storeExtendedTags: boolean) {}\n\n    /**\n     * Adds a [[Technique]] to the catalog of techniques. Individual techniques have a `_index` file\n     * which has been created in the [[StyleSetEvaluator]]. This index is required to identify a\n     * technique. The `Map` is used to map techniques to already added techniques, or store the\n     * technique as new, and add it to the map.\n     *\n     * @param technique The [[Technique]] to add.\n     */\n    addTechnique(technique: IndexedTechnique): number {\n        let infoTileTechniqueIndex = this.techniqueIndexMap.get(technique._index);\n        if (infoTileTechniqueIndex !== undefined) {\n            return infoTileTechniqueIndex;\n        }\n\n        const decodedTechnique = makeDecodedTechnique(technique);\n\n        infoTileTechniqueIndex = this.tileInfo.techniqueCatalog.length;\n        this.techniqueIndexMap.set(decodedTechnique._index, infoTileTechniqueIndex);\n        this.tileInfo.techniqueCatalog.push(decodedTechnique);\n\n        return infoTileTechniqueIndex;\n    }\n\n    /**\n     * Add a feature.\n     *\n     * @param featureGroup The feature group to add to.\n     * @param technique The technique to add.\n     * @param env The `env` which is a mix of original OMV feature tags and fields added by the\n     *      [[StyleSetEvaluator]]\n     * @param featureId The featureId, a number unique for many features (but not all).\n     * @param infoTileTechniqueIndex The previously computed index of the technique. Must have been\n     *      computed by `addTechnique(technique)`.\n     * @param isPolygonGroup `true`for polygons.\n     */\n    addFeature(\n        featureGroup: FeatureGroup,\n        env: MapEnv,\n        featureId: number | undefined,\n        featureText: string | undefined,\n        infoTileTechniqueIndex: number,\n        featureGroupType: FeatureGroupType\n    ) {\n        // compute name/label of feature\n        let stringIndex = -1;\n        if (featureText !== undefined && featureText.length > 0) {\n            stringIndex = this.addText(featureText);\n        }\n\n        // add indices into the arrays.\n        featureGroup.featureIds[featureGroup.numFeatures] = featureId;\n        featureGroup.techniqueIndex[featureGroup.numFeatures] = infoTileTechniqueIndex;\n        featureGroup.textIndex[featureGroup.numFeatures] = stringIndex;\n        featureGroup.positionIndex[featureGroup.numFeatures] = featureGroup.numPositions;\n\n        switch (featureGroupType) {\n            case FeatureGroupType.Polygon:\n                // polygons need the extra fields for polygon rings\n                const polygonGroup = featureGroup as PolygonFeatureGroup;\n                assert(polygonGroup.outerRingStartIndex !== undefined);\n                assert(polygonGroup.innerRingStartIndex !== undefined);\n                assert(polygonGroup.innerRingIsOuterContour !== undefined);\n                polygonGroup.outerRingStartIndex[featureGroup.numFeatures] =\n                    polygonGroup.groupNumRings;\n                break;\n            case FeatureGroupType.Line:\n                (featureGroup as LineFeatureGroup).userData[featureGroup.numFeatures] = env.entries;\n                break;\n        }\n\n        // store the extra feature fields\n        if (this.storeExtendedTags) {\n            featureGroup.layerIndex![featureGroup.numFeatures] = this.addLayer(\n                env.lookup(\"$layer\")\n            );\n            featureGroup.classIndex![featureGroup.numFeatures] = this.addClass(env.lookup(\"class\"));\n            featureGroup.typeIndex![featureGroup.numFeatures] = this.addType(env.lookup(\"type\"));\n        }\n\n        featureGroup.numFeatures++;\n    }\n\n    /**\n     * Add the X/Y coordinate of the point. Only for point feature groups.\n     *\n     * @param featureGroup The feature group to add it to.\n     * @param x X Position of point.\n     * @param y Y Position of point.\n     */\n    addFeaturePoint(featureGroup: FeatureGroup, x: number, y: number) {\n        featureGroup.positions[featureGroup.numPositions++] = x;\n        featureGroup.positions[featureGroup.numPositions++] = y;\n    }\n\n    /**\n     * Add the line points as X/Y coordinates to the line feature.\n     *\n     * If a line feature has more than one line (rare for HERE data), it should define multiple\n     * line features for it.\n     *\n     * @param featureGroup The feature group to add to. Must be line feature group.\n     * @param points The X/Y coordinates of the points.\n     */\n    addFeaturePoints(featureGroup: FeatureGroup, points: number[]) {\n        const n = featureGroup.numPositions;\n        const l = points.length;\n        const p = featureGroup.positions;\n        for (let i = 0; i < l; i++) {\n            p[n + i] = points[i];\n        }\n        featureGroup.numPositions += points.length;\n    }\n\n    /**\n     * Add the information about road segments to the line feature. Performs lazy initialization of\n     * `segmentIds`, `segmentStartOffsets`, and `segmentEndOffsets` members of a\n     * [[LineFeatureGroup]] instance.\n     *\n     * @param featureGroup The line feature group to add information to.\n     * @param segmentId Segment id of a feature.\n     * @param startOffset Start offset of a feature.\n     * @param endOffset End offset of a feature.\n     */\n    addRoadSegments(\n        featureGroup: LineFeatureGroup,\n        segmentId: number,\n        startOffset: number,\n        endOffset: number\n    ) {\n        if (featureGroup.segmentIds === undefined) {\n            featureGroup.segmentIds = new Array<number>();\n            featureGroup.segmentStartOffsets = new Array<number>();\n            featureGroup.segmentEndOffsets = new Array<number>();\n        }\n\n        featureGroup.segmentIds[featureGroup.numFeatures - 1] = segmentId;\n        featureGroup.segmentStartOffsets![featureGroup.numFeatures - 1] = startOffset;\n        featureGroup.segmentEndOffsets![featureGroup.numFeatures - 1] = endOffset;\n    }\n\n    /**\n     * Add a single ring to the polygon. Can be called multiple times to add multiple rings to the\n     * polygon.\n     *\n     * @param featureGroup Polygon feature group to add polygon ring to.\n     * @param contour The X/Y coordinates of the ring.\n     * @param isOuterRing Pass `true`if it is a outer ring, otherwise `false`.\n     */\n    addRingPoints(featureGroup: PolygonFeatureGroup, contour: number[], isOuterRing: boolean) {\n        featureGroup.innerRingStartIndex[featureGroup.groupNumRings] = featureGroup.numPositions;\n        featureGroup.innerRingIsOuterContour[featureGroup.groupNumRings] = isOuterRing ? 1 : 0;\n        featureGroup.groupNumRings++;\n\n        const n = featureGroup.numPositions;\n        const l = contour.length;\n        const p = featureGroup.positions;\n        for (let i = 0; i < l; i++) {\n            p[n + i] = contour[i];\n        }\n        featureGroup.numPositions += contour.length;\n    }\n\n    /**\n     * Finalize the tile info's feature group.\n     */\n    finish(): any {\n        ExtendedTileInfo.finish(this.tileInfo);\n    }\n\n    private addText(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.textCatalog, this.stringMap);\n    }\n\n    private addLayer(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.layerCatalog!, this.layerMap);\n    }\n\n    private addClass(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.classCatalog!, this.classMap);\n    }\n\n    private addType(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.typeCatalog!, this.typeMap);\n    }\n\n    // Add a string to the strings catalog. Returns index into the catalog.\n    private addStringValue(\n        str: Value | undefined,\n        catalog: string[],\n        map: Map<string, number>\n    ): number {\n        if (str === undefined || str === null) {\n            return -1;\n        }\n        const name = str.toString();\n        let i = map.get(name);\n        if (i !== undefined) {\n            return i;\n        }\n        i = catalog.length;\n        catalog.push(name);\n        map.set(name, i);\n        return i;\n    }\n}\n\n/**\n * Support for [[ExtendedTileInfo]]. Defines the accessor that allows to access the polygon data.\n */\nexport interface ExtendedTileInfoPolygonAccessor {\n    /**\n     * Number of rings in the polygon.\n     */\n    numRings: number;\n\n    /**\n     * Return if ring is an outer ring.\n     *\n     * @param ringIndex Specify ring index.\n     * @return `true` if ring is an outer ring, `false` otherwise.\n     */\n    isOuterRing(ringIndex: number): boolean;\n\n    /**\n     * Return information about the vertices that make up the ring.\n     *\n     * @param ringIndex Specify ring index.\n     * @returns Info about the array, start and number of points in the ring.\n     */\n    getPoints(\n        ringIndex: number\n    ): {\n        points: ArrayLike<number>;\n        pointsStart: number;\n        numPointValues: number;\n    };\n}\n\n/**\n * Implementation of [[ExtendedTileInfoPolygonAccessor]].\n */\nclass ExtendedTileInfoPolygonAccessorImpl implements ExtendedTileInfoPolygonAccessor {\n    /**\n     * Accessed data for polygons feature group.\n     */\n    polygons?: PolygonFeatureGroup;\n    /**\n     * Feature's index in the group.\n     */\n    featureIndex: number = 0;\n    /**\n     * Indicates where the ring starts.\n     */\n    ringStart: number = 0;\n    /**\n     * Number of rings.\n     */\n    numRings: number = 0;\n\n    /**\n     * Setup the accessor for extended [[TileInfo]].\n     *\n     * @param polygons polygons feature group.\n     * @param featureIndex feature's index in the group.\n     * @param ringStart where the ring starts.\n     * @param numRings number of rings.\n     */\n    setup(\n        polygons: PolygonFeatureGroup,\n        featureIndex: number,\n        ringStart: number,\n        numRings: number\n    ) {\n        this.polygons = polygons;\n        this.featureIndex = featureIndex;\n        this.ringStart = ringStart;\n        this.numRings = numRings;\n    }\n\n    /**\n     * Shut down the accessor and free all references.\n     */\n    reset() {\n        this.polygons = undefined;\n        this.featureIndex = 0;\n        this.ringStart = 0;\n        this.numRings = 0;\n    }\n\n    isOuterRing(ringIndex: number): boolean {\n        assert(ringIndex >= 0);\n        assert(ringIndex < this.numRings);\n        assert(this.polygons !== undefined);\n        if (ringIndex < 0 || ringIndex >= this.numRings || this.polygons === undefined) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n        return this.polygons.innerRingIsOuterContour[this.ringStart + ringIndex] !== 0;\n    }\n\n    getPoints(\n        ringIndex: number\n    ): {\n        points: ArrayLike<number>;\n        pointsStart: number;\n        numPointValues: number;\n    } {\n        assert(ringIndex >= 0);\n        assert(ringIndex < this.numRings);\n        assert(this.polygons !== undefined);\n        if (ringIndex < 0 || ringIndex >= this.numRings || this.polygons === undefined) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n\n        // compute the start/size of the points in this ring. All `points` are actually just the\n        // indices of a single X/Y coordinate.\n        const pointsStart = this.polygons.innerRingStartIndex[this.ringStart + ringIndex];\n\n        let numPointValues: number;\n        if (ringIndex < this.numRings - 1) {\n            numPointValues =\n                this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n        } else {\n            if (this.ringStart + ringIndex < this.polygons.innerRingStartIndex.length - 1) {\n                numPointValues =\n                    this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n            } else {\n                numPointValues = this.polygons.positions.length - pointsStart;\n            }\n        }\n\n        return {\n            points: this.polygons.positions,\n            pointsStart,\n            numPointValues\n        };\n    }\n}\n\n/**\n * Interface that a client of [[ExtendedTileInfoAccessor]] has to implement.\n */\nexport interface ExtendedTileInfoHandler {\n    acceptPoint?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        x: number,\n        y: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number\n    ): void;\n\n    acceptLine?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number,\n        points: ArrayLike<number>,\n        pointsStart: number,\n        numElements: number,\n        segmentId?: number,\n        startOffset?: number,\n        endOffset?: number\n    ): void;\n\n    acceptPolygon?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number,\n        polygonAccessor: ExtendedTileInfoPolygonAccessor\n    ): void;\n}\n\n/**\n * Supporting class for [[ExtendedTileInfo]]. Takes an [[ExtendedTileInfoHandler]] and calls an\n * `accept` for every feature of the [[ExtendedTileInfo]], or just all features of a specified\n * `featureId`.\n */\nexport class ExtendedTileInfoVisitor {\n    // static instance to work without allocations.\n    private static polygonAccessor = new ExtendedTileInfoPolygonAccessorImpl();\n\n    constructor(readonly tileInfo: ExtendedTileInfo) {}\n\n    /**\n     * Visit all feature in the [[ExtendedTileInfo]]\n     *\n     * @param handler Let the `handler` visit all features.\n     */\n    visitAll(handler: ExtendedTileInfoHandler) {\n        this.visitAllPointFeatures(handler);\n        this.visitAllLineFeatures(handler);\n        this.visitAllPolygonFeatures(handler);\n    }\n\n    /**\n     * Visit all features of a specified featureId.\n     *\n     * @param featureId The featureId to visit.\n     * @param handler The `handler` to use.\n     */\n    visitFeature(featureId: number, handler: ExtendedTileInfoHandler): number {\n        let numFeaturesFound = 0;\n        const numPointFeatures = this.tileInfo.pointGroup.numFeatures;\n        const pointFeatures = this.tileInfo.pointGroup.featureIds;\n        for (let i = 0; i < numPointFeatures; i++) {\n            if (pointFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPointFeature(i, handler);\n            }\n        }\n        const numLineFeatures = this.tileInfo.lineGroup.numFeatures;\n        const lineFeatures = this.tileInfo.lineGroup.featureIds;\n        for (let i = 0; i < numLineFeatures; i++) {\n            if (lineFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitLineFeature(i, handler);\n            }\n        }\n        const numPolygonFeatures = this.tileInfo.polygonGroup.numFeatures;\n        const polygonsFeatures = this.tileInfo.polygonGroup.featureIds;\n        for (let i = 0; i < numPolygonFeatures; i++) {\n            if (polygonsFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPolygonFeature(i, handler);\n            }\n        }\n        return numFeaturesFound;\n    }\n\n    /**\n     * Visit all `POINT` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    visitAllPointFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.pointGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitPointFeature(i, handler);\n        }\n    }\n\n    /**\n     * Visit all `LINESTRING` features.\n     *\n     * @param handler The handler to use.\n     */\n    visitAllLineFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.lineGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitLineFeature(i, handler);\n        }\n    }\n\n    /**\n     * Visit all `POLYGON` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    visitAllPolygonFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.polygonGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitPolygonFeature(i, handler);\n        }\n    }\n\n    private getTag(featureIndex: number, index: number[]): number {\n        return index !== undefined && index[featureIndex] >= 0 ? index[featureIndex] : -1;\n    }\n\n    /**\n     * Call the `handler` on a point feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitPointFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        const tileInfo = this.tileInfo;\n        const points = tileInfo.pointGroup;\n\n        const start = points.positionIndex[featureIndex];\n        const x = points.positions[start];\n        const y = points.positions[start + 1];\n\n        if (!!handler.acceptPoint) {\n            handler.acceptPoint(\n                points.featureIds[featureIndex],\n                points.techniqueIndex[featureIndex],\n                x,\n                y,\n                points.textIndex[featureIndex],\n                this.getTag(featureIndex, points.layerIndex!),\n                this.getTag(featureIndex, points.classIndex!),\n                this.getTag(featureIndex, points.typeIndex!)\n            );\n        }\n    }\n\n    /**\n     * Call the `handler` on a line feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitLineFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        const tileInfo = this.tileInfo;\n        const lines = tileInfo.lineGroup;\n\n        const numFeatures = lines.numFeatures;\n        const positionsStart = lines.positionIndex[featureIndex];\n        const numPointValues =\n            featureIndex === numFeatures - 1\n                ? lines.positions.length - positionsStart\n                : lines.positionIndex[featureIndex + 1] - positionsStart;\n\n        let segmentId: number | undefined;\n        let startOffset: number | undefined;\n        let endOffset: number | undefined;\n\n        if (lines.segmentIds !== undefined) {\n            segmentId = lines.segmentIds[featureIndex];\n            startOffset = lines.segmentStartOffsets![featureIndex];\n            endOffset = lines.segmentEndOffsets![featureIndex];\n        }\n\n        if (!!handler.acceptLine) {\n            handler.acceptLine(\n                lines.featureIds[featureIndex],\n                lines.techniqueIndex[featureIndex],\n                lines.textIndex[featureIndex],\n                this.getTag(featureIndex, lines.layerIndex!),\n                this.getTag(featureIndex, lines.classIndex!),\n                this.getTag(featureIndex, lines.typeIndex!),\n                tileInfo.lineGroup.positions,\n                positionsStart,\n                numPointValues,\n                segmentId,\n                startOffset,\n                endOffset\n            );\n        }\n    }\n\n    /**\n     * Call the `handler` on a polygon feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitPolygonFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        if (handler.acceptPolygon === undefined) {\n            return;\n        }\n\n        const tileInfo = this.tileInfo;\n        const polygons = tileInfo.polygonGroup;\n\n        const numFeatures = polygons.numFeatures;\n        const ringStart = polygons.outerRingStartIndex[featureIndex];\n        const numRings =\n            featureIndex === numFeatures - 1\n                ? polygons.innerRingStartIndex.length - ringStart\n                : polygons.outerRingStartIndex[featureIndex + 1] - ringStart;\n\n        // Use a static instance, so we do not allocate anything here\n        ExtendedTileInfoVisitor.polygonAccessor.setup(polygons, featureIndex, ringStart, numRings);\n\n        handler.acceptPolygon(\n            polygons.featureIds[featureIndex],\n            polygons.techniqueIndex[featureIndex],\n            polygons.textIndex[featureIndex],\n            this.getTag(featureIndex, polygons.layerIndex!),\n            this.getTag(featureIndex, polygons.classIndex!),\n            this.getTag(featureIndex, polygons.typeIndex!),\n            ExtendedTileInfoVisitor.polygonAccessor\n        );\n\n        // Free all data references.\n        ExtendedTileInfoVisitor.polygonAccessor.reset();\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    ContainsExpr,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * [[ExprPool]] maintains a set of unique interned [[Expr]] objects.\n *\n * @hidden\n */\nexport class ExprPool implements ExprVisitor<Expr, void> {\n    private readonly m_booleanLiterals = new Map<boolean, BooleanLiteralExpr>();\n    private readonly m_numberLiterals = new Map<number, NumberLiteralExpr>();\n    private readonly m_stringLiterals = new Map<string, StringLiteralExpr>();\n    private readonly m_objectLiterals = new Map<object, ObjectLiteralExpr>();\n    private readonly m_varExprs = new Map<string, VarExpr>();\n    private readonly m_hasAttributeExprs = new Map<string, HasAttributeExpr>();\n    private readonly m_inExprs = new Map<Expr, ContainsExpr[]>();\n    private readonly m_callExprs = new Map<string, CallExpr[]>();\n\n    /**\n     * Add `expr` to this [[ExprPool]] and return a unique [[Expr]]\n     * object that is structurally equivalent to `expr`.\n     *\n     * @param expr The [[Expr]] to add to this [[ExprPool]].\n     * @returns A unique [[Expr]] that is structurally equivalent to `expr`.\n     */\n    add(expr: Expr): Expr {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): Expr {\n        return NullLiteralExpr.instance;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): Expr {\n        const e = this.m_booleanLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_booleanLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): Expr {\n        const e = this.m_numberLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_numberLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): Expr {\n        const e = this.m_stringLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_stringLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): Expr {\n        const e = this.m_objectLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_objectLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): Expr {\n        const e = this.m_varExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_varExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): Expr {\n        const e = this.m_hasAttributeExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_hasAttributeExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitContainsExpr(expr: ContainsExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        if (!this.m_inExprs.has(value)) {\n            this.m_inExprs.set(value, []);\n        }\n        const inExprs = this.m_inExprs.get(value)!;\n        for (const inExpr of inExprs) {\n            if (inExpr.elements.length !== expr.elements.length) {\n                continue;\n            }\n            // find the index of the first element in the cached 'in' expr\n            // that is not contained in 'expr.elements'.\n            const i = inExpr.elements.findIndex(x => !expr.elements.includes(x));\n            if (i === -1) {\n                return inExpr;\n            }\n        }\n        const e = new ContainsExpr(value, expr.elements);\n        this.m_inExprs.set(value, [e]);\n        return e;\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        const branches: typeof expr.branches = expr.branches.map(([label, body]) => [\n            label,\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        return new MatchExpr(value, branches, fallback);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): Expr {\n        const branches: typeof expr.branches = expr.branches.map(([condition, body]) => [\n            condition.accept(this, context),\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        return new CaseExpr(branches, fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): Expr {\n        // rewrite the actual arguments\n        const expressions = expr.args.map(childExpr => childExpr.accept(this, context));\n        // ensure we have a valid set of interned expressions for the calls\n        if (!this.m_callExprs.has(expr.op)) {\n            this.m_callExprs.set(expr.op, []);\n        }\n        // get the calls for the given operator.\n        const calls = this.m_callExprs.get(expr.op)!;\n        for (const call of calls) {\n            // check the number of arguments\n            if (call.args.length !== expressions.length) {\n                continue;\n            }\n            // find the index of the first mismatch.\n            let index = 0;\n            for (; index < call.args.length; ++index) {\n                if (call.args[index] !== expressions[index]) {\n                    break;\n                }\n            }\n            if (index === call.args.length) {\n                // no mismatch found, return the 'interned' call.\n                return call;\n            }\n        }\n        const e = new CallExpr(expr.op, expressions);\n        calls.push(e);\n        return e;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isJsonExpr } from \"./Expr\";\nimport { StyleDeclaration, Theme } from \"./Theme\";\n\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nexport class ThemeVisitor {\n    constructor(readonly theme: Theme) {}\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    visitStyles(visitFunc: (style: StyleDeclaration) => boolean): boolean {\n        const visit = (style: StyleDeclaration): boolean => {\n            if (isJsonExpr(style)) {\n                return false;\n            }\n            if (visitFunc(style)) {\n                return true;\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (const styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    for (const style of this.theme.styles[styleSetName]) {\n                        if (visit(style)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ITileDecoder,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\n\n/**\n * `ThemedTileDecoder` implements an [[ITileDecoder]] which uses a [[Theme]] to apply styles to the\n * objects displayed in the map.\n *\n * By default, decoders are executed in web workers (using [[TileDecoderService]]) for performance\n * reasons.\n */\nexport abstract class ThemedTileDecoder implements ITileDecoder {\n    languages?: string[];\n    m_storageLevelOffset: number = 0;\n\n    protected m_styleSetEvaluator?: StyleSetEvaluator;\n    abstract connect(): Promise<void>;\n\n    dispose() {\n        // implemented in subclasses\n    }\n\n    decodeTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        if (this.m_styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"No style is defined\"));\n        }\n\n        return this.decodeThemedTile(data, tileKey, this.m_styleSetEvaluator, projection);\n    }\n\n    // tslint:disable:no-unused-variable\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        return Promise.resolve(undefined);\n    }\n    // tslint:disable:no-unused-variable\n\n    configure(\n        styleSet?: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        if (styleSet !== undefined) {\n            this.m_styleSetEvaluator = new StyleSetEvaluator(styleSet, definitions);\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n        if (options !== undefined && options.storageLevelOffset !== undefined) {\n            this.m_storageLevelOffset = options.storageLevelOffset;\n        }\n    }\n\n    /**\n     * Create a [[DecodedTile]] from binary tile data and a theme description in form of a\n     * [[StyleSetEvaluator]].\n     *\n     * @param data Binary data in form of [[ArrayBufferLike]], or any object.\n     * @param tileKey Quadtree address of tile.\n     * @param styleSetEvaluator Processor of [[Theme]], identifies styling techniques applicable to\n     *      individual objects.\n     * @param projection Projection used by the individual data sources.\n     */\n    abstract decodeThemedTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile>;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Fills an index buffer with the indices for the extruded walls for a polygon contour.\n *\n * @param indexBuffer Index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param contour Vertices that compose the contour.\n * @param contourEdges Collection of booleans indicating if contour edges should be added.\n * @param boundaryWalls If `false`, walls in tile boundaries will not be created.\n *\n */\nexport function addExtrudedWalls(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    contour: number[],\n    contourEdges?: boolean[],\n    boundaryWalls?: boolean\n): void {\n    // Infer the index buffer's position of the vertices that form the extruded-polygons' walls\n    // by stepping through the contour segment by segment.\n    const nSegments = contour.length / vertexStride;\n    for (let i = 0; i < nSegments; ++i) {\n        const vFootprint0 = vertexOffset + i * 2;\n        const vRoof0 = vFootprint0 + 1;\n        const vFootprint1 = vertexOffset + ((i + 1) % nSegments) * 2;\n        const vRoof1 = vFootprint1 + 1;\n        if (boundaryWalls !== false || contourEdges === undefined) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        } else if (contourEdges[i]) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst currEdgeStart = new THREE.Vector2();\nconst currEdgeGoal = new THREE.Vector2();\nconst prevEdgeStart = new THREE.Vector2();\nconst prevEdgeGoal = new THREE.Vector2();\n\n/**\n * Fills an index buffer with the indices for the edges of a polygon contour.\n *\n * @param indexBuffer Edge index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param polygonContour Vertices that compose the contour.\n * @param polygonContourEdges Collection of booleans indicating if contour edges should be added.\n */\nexport function addPolygonEdges(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    polygonContour: number[],\n    polygonContourEdges: boolean[],\n    isExtruded?: boolean,\n    addFootprintEdges?: boolean,\n    wallEdgeSlope?: number\n) {\n    for (let i = 0; i < polygonContourEdges.length; ++i) {\n        if (polygonContourEdges[i]) {\n            if (isExtruded === true) {\n                const vFootprint0 = vertexOffset + i * 2;\n                const vRoof0 = vFootprint0 + 1;\n                const vFootprint1 = vertexOffset + ((i + 1) % polygonContourEdges.length) * 2;\n                const vRoof1 = vFootprint1 + 1;\n\n                if (addFootprintEdges === true) {\n                    indexBuffer.push(vFootprint0, vFootprint1);\n                }\n                indexBuffer.push(vRoof0, vRoof1);\n\n                const prevEdgeIdx = (i === 0 ? polygonContourEdges.length : i) - 1;\n                if (polygonContourEdges[prevEdgeIdx]) {\n                    if (wallEdgeSlope !== undefined) {\n                        const v0x = polygonContour[i * vertexStride];\n                        const v0y = polygonContour[i * vertexStride + 1];\n                        const v1x =\n                            polygonContour[((i + 1) % polygonContourEdges.length) * vertexStride];\n                        const v1y =\n                            polygonContour[\n                                ((i + 1) % polygonContourEdges.length) * vertexStride + 1\n                            ];\n\n                        currEdgeStart.set(v0x, v0y);\n                        currEdgeGoal.set(v1x, v1y);\n                        prevEdgeStart.set(\n                            polygonContour[prevEdgeIdx * vertexStride],\n                            polygonContour[prevEdgeIdx * vertexStride + 1]\n                        );\n                        prevEdgeGoal.set(currEdgeStart.x, currEdgeStart.y);\n\n                        if (\n                            prevEdgeGoal\n                                .sub(prevEdgeStart)\n                                .normalize()\n                                .dot(currEdgeGoal.sub(currEdgeStart).normalize()) <= wallEdgeSlope\n                        ) {\n                            indexBuffer.push(vFootprint0, vRoof0);\n                        }\n                    } else {\n                        indexBuffer.push(vFootprint0, vRoof0);\n                    }\n                }\n            } else {\n                const vFoot0 = vertexOffset + i;\n                const vRoof0 = vertexOffset + ((i + 1) % polygonContourEdges.length);\n                indexBuffer.push(vFoot0, vRoof0);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute as ThreeBufferAttribute,\n    BufferGeometry as ThreeBufferGeometry,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute,\n    TypedArray\n} from \"three\";\nimport {\n    BufferAttribute,\n    BufferElementType,\n    Geometry,\n    GeometryType,\n    InterleavedBufferAttribute\n} from \"./DecodedTile\";\n\n/**\n * Collection of helper methods to convert\n * {@link https://threejs.org/docs/index.html#api/en/core/BufferGeometry|three.js BufferGeometry}\n * to [[Geometry]] that allows creation and transfering of THREE BufferGeometry in webworkers.\n * See also [[CustomDatasourceExample]].\n */\nexport namespace ThreeBufferUtils {\n    export function getBufferElementType(buffer: TypedArray): BufferElementType {\n        if (buffer instanceof Int8Array) {\n            return \"int8\";\n        } else if (buffer instanceof Uint8Array) {\n            return \"uint8\";\n        } else if (buffer instanceof Int16Array) {\n            return \"int16\";\n        } else if (buffer instanceof Uint16Array) {\n            return \"uint16\";\n        } else if (buffer instanceof Int32Array) {\n            return \"int32\";\n        } else if (buffer instanceof Uint32Array) {\n            return \"uint32\";\n        } else if (buffer instanceof Float32Array) {\n            return \"float\";\n        }\n\n        throw new Error(`Unsupported buffer type ${name}`);\n    }\n\n    export function fromThreeBufferAttribute(\n        bufferAttribute: ThreeBufferAttribute\n    ): BufferAttribute {\n        const buffer = (bufferAttribute.array as any) as TypedArray;\n        return {\n            name: bufferAttribute.name,\n            buffer: buffer.buffer,\n            type: getBufferElementType(buffer),\n            itemCount: bufferAttribute.itemSize,\n            normalized: bufferAttribute.normalized\n        };\n    }\n\n    export function fromThreeInterleavedBufferAttribute(\n        bufferAttribute: ThreeInterleavedBufferAttribute\n    ): InterleavedBufferAttribute {\n        throw new Error(\"Not implemented yet\");\n    }\n\n    export function fromThreeBufferGeometry(\n        bufferGeometry: ThreeBufferGeometry,\n        techniqueIndex: number\n    ): Geometry {\n        const vertexAttributes: BufferAttribute[] = [];\n        const attributeNames = Object.getOwnPropertyNames(bufferGeometry.attributes);\n        for (const name of attributeNames) {\n            const attribute = bufferGeometry.attributes[name];\n            // FIXME: Also support InterleavedBufferAttribute\n            const vertexAttribute = fromThreeBufferAttribute(attribute as ThreeBufferAttribute);\n            vertexAttribute.name = name;\n            vertexAttributes.push(vertexAttribute);\n        }\n        const index =\n            bufferGeometry.index !== null\n                ? fromThreeBufferAttribute(bufferGeometry.index)\n                : undefined;\n\n        let count = 0;\n        if (index !== undefined) {\n            count = bufferGeometry.index === null ? 0 : bufferGeometry.index.count;\n        } else {\n            // If there is no index buffer, try to deduce the count from the position attribute.\n            const posAttr = bufferGeometry.attributes.position as ThreeBufferAttribute;\n            if (posAttr === undefined) {\n                throw new Error(\"Missing position attibute to deduce item count\");\n            }\n            count = posAttr.count;\n        }\n\n        return {\n            type: GeometryType.Unspecified,\n            vertexAttributes,\n            index,\n            groups: [{ start: 0, count, technique: techniqueIndex }]\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    addBuffersToTransferList,\n    getProjection,\n    ITileDecoder,\n    WorkerDecoderProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\nconst logger = LoggerManager.instance.create(\"TileDecoderService\");\n\n/**\n * An extension to [[WorkerService]], the `TileDecoderService` implements an asynchronous\n * (message based) service to decode tile content in web workers. The `TileDecoderService` itself\n * lives in the web worker, and communicates with messages by means of a [[ConcurrentWorkerSet]]\n * with the application.\n *\n * The `TileDecoderService` handles a [[DecodeTileRequest]], which contains a tile and its freshly\n * loaded binary data, decodes the content with the [[ITileDecoder]] that the service is configured\n * to use, and sends the data back in form of a [[WorkerServiceResponse]].\n */\nexport class TileDecoderService extends WorkerService {\n    /**\n     * Start a [[TileDecoderService]] with a given decoder.\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param decoder   [[TileDecoder]] instance.\n     */\n    static start(serviceId: string, decoder: ITileDecoder) {\n        return new TileDecoderService(serviceId, decoder);\n    }\n\n    /**\n     * Set up the `TileDecoderService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param m_decoder Decoder to handle the decoding and info requests.\n     */\n    constructor(readonly serviceId: string, private readonly m_decoder: ITileDecoder) {\n        super(serviceId);\n        this.m_decoder.connect();\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request Message that is either a DecodeTileRequest or a TileInfoRequest.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerDecoderProtocol.isDecodeTileRequest(request)) {\n            return this.handleDecodeTileRequest(request);\n        } else if (WorkerDecoderProtocol.isTileInfoRequest(request)) {\n            return this.handleTileInfoRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    /**\n     * Handle incoming configuration message. Configuration message is passed on to decoder.\n     *\n     * @param request Message of type [[ConfigurationMessage]].\n     * @override\n     */\n    protected handleMessage(message: any) {\n        if (WorkerDecoderProtocol.isConfigurationMessage(message)) {\n            this.handleConfigurationMessage(message);\n        } else {\n            logger.error(`[${this.serviceId}]: invalid message ${message.type}`);\n        }\n    }\n\n    private handleDecodeTileRequest(\n        request: WorkerDecoderProtocol.DecodeTileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.decodeTile(request.data, tileKey, projection).then(decodedTile => {\n            const transferList: ArrayBuffer[] = [];\n            decodedTile.geometries.forEach(geom => {\n                geom.vertexAttributes.forEach(attr => {\n                    if (attr.buffer instanceof ArrayBuffer) {\n                        transferList.push(attr.buffer);\n                    }\n                });\n\n                if (geom.index && geom.index.buffer instanceof ArrayBuffer) {\n                    transferList.push(geom.index.buffer);\n                }\n\n                if (\n                    geom.objInfos !== undefined &&\n                    geom.objInfos.length === 1 &&\n                    geom.objInfos[0] !== undefined &&\n                    \"displacementMap\" in (geom.objInfos[0] as any)\n                ) {\n                    transferList.push((geom.objInfos[0] as any).displacementMap.buffer);\n                }\n            });\n\n            decodedTile.techniques.forEach(technique => {\n                addBuffersToTransferList(technique, transferList);\n            });\n\n            return {\n                response: decodedTile,\n                transferList\n            };\n        });\n    }\n\n    private handleTileInfoRequest(\n        request: WorkerDecoderProtocol.TileInfoRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.getTileInfo(request.data, tileKey, projection).then(tileInfo => {\n            const transferList: ArrayBuffer[] =\n                tileInfo !== undefined && tileInfo.transferList !== undefined\n                    ? tileInfo.transferList\n                    : [];\n            return {\n                response: tileInfo,\n                transferList\n            };\n        });\n    }\n\n    private handleConfigurationMessage(message: WorkerDecoderProtocol.ConfigurationMessage) {\n        this.m_decoder.configure(\n            message.styleSet,\n            message.definitions,\n            message.languages,\n            message.options\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITiler, WorkerTilerProtocol } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { GeoJsonTiler } from \"./GeoJsonTiler\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * An extension to [[WorkerService]], the `TilerService` implements an asynchronous (message based)\n * service to tile untiled payloads in web workers. The `TilerService` itself lives in the web\n * worker, and communicates with messages by means of a [[ConcurrentWorkerSet]] with the\n * application.\n *\n * The `TilerService` registers tile indices (parent tile to be subdivided) by handling a\n * [[RegisterIndexRequest]], and can later retrieve tiled payloads from through the [[TileRequest]].\n * The data is sent back in form of a [[WorkerServiceResponse]].\n */\nexport class TilerService extends WorkerService {\n    /**\n     * Start a [[TilerService]].\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    static start(serviceId: string) {\n        return new TilerService(serviceId);\n    }\n    tiler: ITiler = new GeoJsonTiler();\n\n    /**\n     * Set up the `TilerService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    constructor(readonly serviceId: string) {\n        super(serviceId);\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request [[WorkerTilerProtocol]] request.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerTilerProtocol.isRegisterIndexRequest(request)) {\n            return this.handleRegisterIndexRequest(request);\n        } else if (WorkerTilerProtocol.isUpdateIndexRequest(request)) {\n            return this.handleUpdateIndexRequest(request);\n        } else if (WorkerTilerProtocol.isTileRequest(request)) {\n            return this.handleTileRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    private async handleTileRequest(\n        request: WorkerTilerProtocol.TileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const tile = await this.tiler.getTile(request.index, tileKey);\n\n        return { response: tile || {} };\n    }\n\n    private async handleRegisterIndexRequest(\n        message: WorkerTilerProtocol.RegisterIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n        await this.tiler.registerIndex(message.id, input);\n\n        return { response: {} };\n    }\n\n    private async handleUpdateIndexRequest(\n        message: WorkerTilerProtocol.UpdateIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n\n        this.tiler.updateIndex(message.id, input);\n\n        return { response: {} };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * Factory function that creates [[WorkerService]].\n */\nexport type WorkerServiceFactory = (serviceId: string) => WorkerService;\n\n/**\n * Worker service class definition as needed by [[WorkerServiceManager.register]].\n */\nexport interface WorkerServiceDescriptor {\n    serviceType: string;\n    factory: WorkerServiceFactory;\n}\n\n/**\n * Manages dynamic worker services in Web Worker context.\n *\n * Handles `CreateService` and `DestroyService` messages sent to Web Worker. Singleton (in scope of\n * one worker runtime!), starts automatically with first [[getInstance]] call.\n */\nexport class WorkerServiceManager extends WorkerService {\n    /**\n     * Gets the default instance of `WorkerServiceManager`. Starts the service when first called.\n     */\n    static getInstance() {\n        if (this.m_service === undefined) {\n            this.m_service = new WorkerServiceManager(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n            );\n        }\n        return this.m_service;\n    }\n\n    /**\n     * Default instance of `WorkerServiceManager`.\n     */\n    private static m_service: WorkerServiceManager;\n\n    /**\n     * Contains all registered service factories indexed by `serviceType`.\n     */\n    private m_factories = new Map<string, WorkerServiceFactory>();\n\n    /**\n     * Contains all managed worker services indexed by their `serviceId`.\n     */\n    private m_services = new Map<string, WorkerService>();\n\n    private constructor(\n        serviceId: string = WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n    ) {\n        super(serviceId);\n    }\n\n    /**\n     * Register [[WorkerService]] class to this manager.\n     *\n     * @param workerServiceDescriptor service type and factory\n     */\n    register(workerServiceDescriptor: WorkerServiceDescriptor): void {\n        this.m_factories.set(workerServiceDescriptor.serviceType, workerServiceDescriptor.factory);\n    }\n\n    /** @override */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (request.type === WorkerServiceProtocol.Requests.CreateService) {\n            const existingService = this.m_services.get(request.targetServiceId);\n            if (existingService !== undefined) {\n                throw Error(\n                    // tslint:disable-next-line: max-line-length\n                    `error - service with targetServiceId='${request.targetServiceId}' already running, ignoring CreateService request`\n                );\n            }\n\n            const factory = this.m_factories.get(request.targetServiceType);\n\n            if (factory === undefined) {\n                throw Error(`unknown targetServiceType requested: '${request.targetServiceType}'`);\n            }\n\n            const service = factory(request.targetServiceId);\n            this.m_services.set(request.targetServiceId, service);\n        }\n        if (request.type === WorkerServiceProtocol.Requests.DestroyService) {\n            const service = this.m_services.get(request.targetServiceId);\n            if (service === undefined) {\n                throw Error(`unknown targetServiceId '${request.targetServiceId}'`);\n            }\n            service.destroy();\n            this.m_services.delete(request.targetServiceId);\n        }\n\n        return Promise.resolve({\n            response: {}\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, MapEnv, Value, ValueMap } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport * as Long from \"long\";\nimport { Vector2 } from \"three\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { OmvGeometryType } from \"./OmvDecoderDefs\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\nimport { com } from \"./proto/vector_tile\";\n\n/**\n * @hidden\n */\nexport enum CommandKind {\n    MoveTo = 1,\n    LineTo = 2,\n    ClosePath = 7\n}\n\n/**\n * @hidden\n */\nexport interface BaseCommand {\n    kind: CommandKind;\n}\n\n/**\n * @hidden\n */\nexport interface PositionCommand extends BaseCommand {\n    position: Vector2;\n}\n\n/**\n * @hidden\n */\nexport type GeometryCommand = BaseCommand | PositionCommand;\n\n/**\n * @hidden\n */\nexport function isMoveToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.MoveTo;\n}\n\n/**\n * @hidden\n */\nexport function isLineToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.LineTo;\n}\n\n/**\n * @hidden\n */\nexport function isClosePathCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.ClosePath;\n}\n\n/**\n * @hidden\n */\nexport interface OmvVisitor {\n    visitLayer?(layer: com.mapbox.pb.Tile.ILayer): boolean;\n    endVisitLayer?(layer: com.mapbox.pb.Tile.ILayer): void;\n    visitPointFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitLineFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitPolygonFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n}\n\n/**\n * @hidden\n */\nexport function visitOmv(vectorTile: com.mapbox.pb.Tile, visitor: OmvVisitor) {\n    if (!vectorTile.layers) {\n        return;\n    }\n\n    for (const layer of vectorTile.layers) {\n        if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n            visitOmvLayer(layer, visitor);\n        }\n        if (visitor.endVisitLayer) {\n            visitor.endVisitLayer(layer);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport function visitOmvLayer(layer: com.mapbox.pb.Tile.ILayer, visitor: OmvVisitor) {\n    if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n        if (layer.features) {\n            for (const feature of layer.features) {\n                switch (feature.type) {\n                    case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POINT:\n                        if (visitor.visitPointFeature) {\n                            visitor.visitPointFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.LINESTRING:\n                        if (visitor.visitLineFeature) {\n                            visitor.visitLineFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POLYGON:\n                        if (visitor.visitPolygonFeature) {\n                            visitor.visitPolygonFeature(feature);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n\n    if (visitor.endVisitLayer) {\n        visitor.endVisitLayer(layer);\n    }\n}\n\n/**\n * @hidden\n */\nexport interface FeatureAttributesVisitor {\n    visitAttribute(name: string, value: com.mapbox.pb.Tile.IValue): boolean;\n}\n\n/**\n * @hidden\n */\nexport class FeatureAttributes {\n    accept(\n        layer: com.mapbox.pb.Tile.ILayer,\n        feature: com.mapbox.pb.Tile.IFeature,\n        visitor: FeatureAttributesVisitor\n    ): void {\n        const { keys, values } = layer;\n        const tags = feature.tags;\n\n        if (!tags || !keys || !values) {\n            return;\n        }\n\n        for (let i = 0; i < tags.length; i += 2) {\n            const key = keys[tags[i]];\n            const value = values[tags[i + 1]];\n            if (!visitor.visitAttribute(key, value)) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport interface GeometryCommandsVisitor {\n    type: \"Point\" | \"Line\" | \"Polygon\";\n    visitCommand(command: GeometryCommand): void;\n}\n\n/**\n * @hidden\n */\nexport class GeometryCommands {\n    accept(geometry: number[], visitor: GeometryCommandsVisitor) {\n        const geometryCount = geometry.length;\n\n        let currX = 0;\n        let currY = 0;\n\n        const xCoords: number[] = [];\n        const yCoords: number[] = [];\n        const commands: GeometryCommand[] = [];\n        for (let cmdIndex = 0; cmdIndex < geometryCount; ) {\n            // tslint:disable:no-bitwise\n            const kind = (geometry[cmdIndex] & 0x7) as CommandKind;\n            const count = geometry[cmdIndex] >> 0x3;\n            // tslint:enable:no-bitwise\n            ++cmdIndex;\n\n            if (kind === CommandKind.MoveTo || kind === CommandKind.LineTo) {\n                for (let n = 0; n < count; ++n) {\n                    const xx = geometry[cmdIndex++];\n                    const yy = geometry[cmdIndex++];\n\n                    // tslint:disable:no-bitwise\n                    currX += (xx >> 1) ^ -(xx & 1);\n                    currY += (yy >> 1) ^ -(yy & 1);\n                    if (visitor.type === \"Polygon\") {\n                        xCoords.push(currX);\n                        yCoords.push(currY);\n                    }\n\n                    const position = new Vector2(currX, currY);\n                    commands.push({ kind, position });\n                }\n            } else {\n                for (const command of commands) {\n                    visitor.visitCommand(command);\n                }\n                visitor.visitCommand({ kind });\n                xCoords.length = 0;\n                yCoords.length = 0;\n                commands.length = 0;\n            }\n        }\n\n        if (commands.length > 0) {\n            for (const command of commands) {\n                visitor.visitCommand(command);\n            }\n        }\n    }\n}\n\nconst propertyCategories = [\n    \"stringValue\",\n    \"floatValue\",\n    \"doubleValue\",\n    \"intValue\",\n    \"uintValue\",\n    \"sintValue\",\n    \"boolValue\"\n];\n\nfunction simplifiedValue(value: com.mapbox.pb.Tile.IValue): Value {\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (const category of propertyCategories) {\n        if (hasOwnProperty.call(value, category)) {\n            const v = value[category as keyof com.mapbox.pb.Tile.IValue];\n\n            if (v === undefined) {\n                throw new Error(\"unpexted undefined value\");\n            }\n\n            return Long.isLong(v) ? (v as any).toNumber() : v;\n        }\n    }\n\n    throw new Error(\"not happening\");\n}\n\nfunction replaceReservedName(name: string): string {\n    switch (name) {\n        case \"id\":\n            return \"$id\";\n        default:\n            return name;\n    } // switch\n}\n\nfunction decodeFeatureId(\n    feature: com.mapbox.pb.Tile.IFeature,\n    logger?: ILogger\n): number | undefined {\n    if (feature.id !== undefined) {\n        if (typeof feature.id === \"number\") {\n            return feature.id;\n        } else if (Long.isLong(feature.id)) {\n            if (feature.id.greaterThan(Number.MAX_SAFE_INTEGER)) {\n                if (logger !== undefined) {\n                    logger.error(\n                        \"Invalid ID: Larger than largest available Number in feature: \",\n                        feature\n                    );\n                }\n            }\n            return (feature.id as any).toNumber(); // long\n        }\n    }\n    return undefined;\n}\n\nfunction readAttributes(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    defaultAttributes: ValueMap = {}\n): ValueMap {\n    const attrs = new FeatureAttributes();\n\n    const attributes: ValueMap = defaultAttributes || {};\n\n    attrs.accept(layer, feature, {\n        visitAttribute: (name, value) => {\n            attributes[replaceReservedName(name)] = simplifiedValue(value);\n            return true;\n        }\n    });\n\n    return attributes;\n}\n\nfunction createFeatureEnv(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    geometryType: string,\n    storageLevel: number,\n    storageLevelOffset?: number,\n    logger?: ILogger,\n    parent?: Env\n): MapEnv {\n    const attributes: ValueMap = {\n        $layer: layer.name,\n        $level: storageLevel,\n        $zoom: Math.max(0, storageLevel - (storageLevelOffset || 0)),\n        $geometryType: geometryType\n    };\n\n    // Some sources serve `id` directly as `IFeature` property ...\n    if (feature.id !== undefined) {\n        const featureId = decodeFeatureId(feature, logger);\n        if (featureId !== undefined) {\n            attributes.$id = featureId;\n        }\n    }\n\n    readAttributes(layer, feature, attributes);\n\n    return new MapEnv(attributes, parent);\n}\n\nfunction asGeometryType(feature: com.mapbox.pb.Tile.IFeature | undefined): OmvGeometryType {\n    if (feature === undefined) {\n        return OmvGeometryType.UNKNOWN;\n    }\n\n    switch (feature.type) {\n        case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n            return OmvGeometryType.UNKNOWN;\n        case com.mapbox.pb.Tile.GeomType.POINT:\n            return OmvGeometryType.POINT;\n        case com.mapbox.pb.Tile.GeomType.LINESTRING:\n            return OmvGeometryType.LINESTRING;\n        case com.mapbox.pb.Tile.GeomType.POLYGON:\n            return OmvGeometryType.POLYGON;\n        default:\n            return OmvGeometryType.UNKNOWN;\n    } // switch\n}\n\n/**\n * The class [[OmvProtobufDataAdapter]] converts OMV protobuf geo data\n * to geometries for the given [[IGeometryProcessor]].\n */\nexport class OmvProtobufDataAdapter implements OmvDataAdapter, OmvVisitor {\n    id = \"omv-protobuf\";\n\n    private readonly m_geometryCommands = new GeometryCommands();\n    private readonly m_processor: IGeometryProcessor;\n    private readonly m_logger?: ILogger;\n    private m_dataFilter?: OmvFeatureFilter;\n\n    private m_tileKey!: TileKey;\n    private m_layer!: com.mapbox.pb.Tile.ILayer;\n\n    /**\n     * Constructs a new [[OmvProtobufDataAdapter]].\n     *\n     * @param processor The [[IGeometryProcessor]] used to process the data.\n     * @param dataFilter The [[OmvFeatureFilter]] used to filter features.\n     * @param logger The [[ILogger]] used to log diagnostic messages.\n     */\n    constructor(processor: IGeometryProcessor, dataFilter?: OmvFeatureFilter, logger?: ILogger) {\n        this.m_processor = processor;\n        this.m_dataFilter = dataFilter;\n        this.m_logger = logger;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    /**\n     * Checks that the given data can be processed by this [[OmvProtobufDataAdapter]].\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        return isArrayBufferLike(data);\n    }\n\n    /**\n     * Processes the given data payload using this adapter's [[IGeometryProcessor]].\n     *\n     * @param data The data payload to process.\n     * @param tileKey The [[TileKey]] of the tile enclosing the data.\n     */\n    process(data: ArrayBufferLike, tileKey: TileKey) {\n        const payload = new Uint8Array(data);\n        const proto = com.mapbox.pb.Tile.decode(payload);\n\n        this.m_tileKey = tileKey;\n\n        visitOmv(proto, this);\n    }\n\n    /**\n     * Visits the OMV layer.\n     *\n     * @param layer The OMV layer to process.\n     */\n    visitLayer(layer: com.mapbox.pb.Tile.ILayer): boolean {\n        this.m_layer = layer;\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = layer.name;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLayer(layerName, storageLevel)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Visits point features.\n     *\n     * @param feature The OMV point features to process.\n     */\n    visitPointFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPointFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: Vector2[] = [];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Point\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    geometry.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"point\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPointFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the line features.\n     *\n     * @param feature The line features to process.\n     */\n    visitLineFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLineFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: ILineGeometry[] = [];\n        let positions: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Line\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    positions = [command.position];\n                    geometry.push({ positions });\n                } else if (isLineToCommand(command)) {\n                    positions.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"line\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processLineFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the polygon features.\n     *\n     * @param feature The polygon features to process.\n     */\n    visitPolygonFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPolygonFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: IPolygonGeometry[] = [];\n        const currentPolygon: IPolygonGeometry = { rings: [] };\n        let currentRing: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Polygon\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    currentRing = [command.position];\n                } else if (isLineToCommand(command)) {\n                    currentRing.push(command.position);\n                } else if (isClosePathCommand(command)) {\n                    currentPolygon.rings.push(currentRing);\n                }\n            }\n        });\n\n        if (currentPolygon.rings.length > 0) {\n            geometry.push(currentPolygon);\n        }\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"polygon\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPolygonFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            env,\n            storageLevel\n        );\n    }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*\n * Copyright (C) 2017-2018 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.com = (function() {\n\n    /**\n     * Namespace com.\n     * @exports com\n     * @namespace\n     */\n    var com = {};\n\n    com.mapbox = (function() {\n\n        /**\n         * Namespace mapbox.\n         * @memberof com\n         * @namespace\n         */\n        var mapbox = {};\n\n        mapbox.pb = (function() {\n\n            /**\n             * Namespace pb.\n             * @memberof com.mapbox\n             * @namespace\n             */\n            var pb = {};\n\n            pb.Tile = (function() {\n\n                /**\n                 * Properties of a Tile.\n                 * @memberof com.mapbox.pb\n                 * @interface ITile\n                 * @property {Array.<com.mapbox.pb.Tile.ILayer>} [layers] Tile layers\n                 */\n\n                /**\n                 * Constructs a new Tile.\n                 * @memberof com.mapbox.pb\n                 * @classdesc Represents a Tile.\n                 * @constructor\n                 * @param {com.mapbox.pb.ITile=} [properties] Properties to set\n                 */\n                function Tile(properties) {\n                    this.layers = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Tile layers.\n                 * @member {Array.<com.mapbox.pb.Tile.ILayer>}layers\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 */\n                Tile.prototype.layers = $util.emptyArray;\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 3:\n                            if (!(message.layers && message.layers.length))\n                                message.layers = [];\n                            message.layers.push($root.com.mapbox.pb.Tile.Layer.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Creates a Tile message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 */\n                Tile.fromObject = function fromObject(object) {\n                    if (object instanceof $root.com.mapbox.pb.Tile)\n                        return object;\n                    var message = new $root.com.mapbox.pb.Tile();\n                    if (object.layers) {\n                        if (!Array.isArray(object.layers))\n                            throw TypeError(\".com.mapbox.pb.Tile.layers: array expected\");\n                        message.layers = [];\n                        for (var i = 0; i < object.layers.length; ++i) {\n                            if (typeof object.layers[i] !== \"object\")\n                                throw TypeError(\".com.mapbox.pb.Tile.layers: object expected\");\n                            message.layers[i] = $root.com.mapbox.pb.Tile.Layer.fromObject(object.layers[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Tile message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {com.mapbox.pb.Tile} message Tile\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Tile.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.layers = [];\n                    if (message.layers && message.layers.length) {\n                        object.layers = [];\n                        for (var j = 0; j < message.layers.length; ++j)\n                            object.layers[j] = $root.com.mapbox.pb.Tile.Layer.toObject(message.layers[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Tile to JSON.\n                 * @function toJSON\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Tile.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * GeomType enum.\n                 * @enum {string}\n                 * @property {number} UNKNOWN=0 UNKNOWN value\n                 * @property {number} POINT=1 POINT value\n                 * @property {number} LINESTRING=2 LINESTRING value\n                 * @property {number} POLYGON=3 POLYGON value\n                 */\n                Tile.GeomType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"POINT\"] = 1;\n                    values[valuesById[2] = \"LINESTRING\"] = 2;\n                    values[valuesById[3] = \"POLYGON\"] = 3;\n                    return values;\n                })();\n\n                Tile.Value = (function() {\n\n                    /**\n                     * Properties of a Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IValue\n                     * @property {string} [stringValue] Value stringValue\n                     * @property {number} [floatValue] Value floatValue\n                     * @property {number} [doubleValue] Value doubleValue\n                     * @property {number|Long} [intValue] Value intValue\n                     * @property {number|Long} [uintValue] Value uintValue\n                     * @property {number|Long} [sintValue] Value sintValue\n                     * @property {boolean} [boolValue] Value boolValue\n                     */\n\n                    /**\n                     * Constructs a new Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Value.\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IValue=} [properties] Properties to set\n                     */\n                    function Value(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Value stringValue.\n                     * @member {string}stringValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.stringValue = \"\";\n\n                    /**\n                     * Value floatValue.\n                     * @member {number}floatValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.floatValue = 0;\n\n                    /**\n                     * Value doubleValue.\n                     * @member {number}doubleValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.doubleValue = 0;\n\n                    /**\n                     * Value intValue.\n                     * @member {number|Long}intValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.intValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value uintValue.\n                     * @member {number|Long}uintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.uintValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Value sintValue.\n                     * @member {number|Long}sintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.sintValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value boolValue.\n                     * @member {boolean}boolValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.boolValue = false;\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Value();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.stringValue = reader.string();\n                                break;\n                            case 2:\n                                message.floatValue = reader.float();\n                                break;\n                            case 3:\n                                message.doubleValue = reader.double();\n                                break;\n                            case 4:\n                                message.intValue = reader.int64();\n                                break;\n                            case 5:\n                                message.uintValue = reader.uint64();\n                                break;\n                            case 6:\n                                message.sintValue = reader.sint64();\n                                break;\n                            case 7:\n                                message.boolValue = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Value message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     */\n                    Value.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Value)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Value();\n                        if (object.stringValue != null)\n                            message.stringValue = String(object.stringValue);\n                        if (object.floatValue != null)\n                            message.floatValue = Number(object.floatValue);\n                        if (object.doubleValue != null)\n                            message.doubleValue = Number(object.doubleValue);\n                        if (object.intValue != null)\n                            if ($util.Long)\n                                (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                            else if (typeof object.intValue === \"string\")\n                                message.intValue = parseInt(object.intValue, 10);\n                            else if (typeof object.intValue === \"number\")\n                                message.intValue = object.intValue;\n                            else if (typeof object.intValue === \"object\")\n                                message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                        if (object.uintValue != null)\n                            if ($util.Long)\n                                (message.uintValue = $util.Long.fromValue(object.uintValue)).unsigned = true;\n                            else if (typeof object.uintValue === \"string\")\n                                message.uintValue = parseInt(object.uintValue, 10);\n                            else if (typeof object.uintValue === \"number\")\n                                message.uintValue = object.uintValue;\n                            else if (typeof object.uintValue === \"object\")\n                                message.uintValue = new $util.LongBits(object.uintValue.low >>> 0, object.uintValue.high >>> 0).toNumber(true);\n                        if (object.sintValue != null)\n                            if ($util.Long)\n                                (message.sintValue = $util.Long.fromValue(object.sintValue)).unsigned = false;\n                            else if (typeof object.sintValue === \"string\")\n                                message.sintValue = parseInt(object.sintValue, 10);\n                            else if (typeof object.sintValue === \"number\")\n                                message.sintValue = object.sintValue;\n                            else if (typeof object.sintValue === \"object\")\n                                message.sintValue = new $util.LongBits(object.sintValue.low >>> 0, object.sintValue.high >>> 0).toNumber();\n                        if (object.boolValue != null)\n                            message.boolValue = Boolean(object.boolValue);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Value message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Value} message Value\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Value.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.stringValue = \"\";\n                            object.floatValue = 0;\n                            object.doubleValue = 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.intValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.intValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.uintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.uintValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.sintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.sintValue = options.longs === String ? \"0\" : 0;\n                            object.boolValue = false;\n                        }\n                        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                            object.stringValue = message.stringValue;\n                        if (message.floatValue != null && message.hasOwnProperty(\"floatValue\"))\n                            object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;\n                        if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                            object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                        if (message.intValue != null && message.hasOwnProperty(\"intValue\"))\n                            if (typeof message.intValue === \"number\")\n                                object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                            else\n                                object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n                            if (typeof message.uintValue === \"number\")\n                                object.uintValue = options.longs === String ? String(message.uintValue) : message.uintValue;\n                            else\n                                object.uintValue = options.longs === String ? $util.Long.prototype.toString.call(message.uintValue) : options.longs === Number ? new $util.LongBits(message.uintValue.low >>> 0, message.uintValue.high >>> 0).toNumber(true) : message.uintValue;\n                        if (message.sintValue != null && message.hasOwnProperty(\"sintValue\"))\n                            if (typeof message.sintValue === \"number\")\n                                object.sintValue = options.longs === String ? String(message.sintValue) : message.sintValue;\n                            else\n                                object.sintValue = options.longs === String ? $util.Long.prototype.toString.call(message.sintValue) : options.longs === Number ? new $util.LongBits(message.sintValue.low >>> 0, message.sintValue.high >>> 0).toNumber() : message.sintValue;\n                        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n                            object.boolValue = message.boolValue;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Value to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Value.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Value;\n                })();\n\n                Tile.Feature = (function() {\n\n                    /**\n                     * Properties of a Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IFeature\n                     * @property {number|Long} [id] Feature id\n                     * @property {Array.<number>} [tags] Feature tags\n                     * @property {com.mapbox.pb.Tile.GeomType} [type] Feature type\n                     * @property {Array.<number>} [geometry] Feature geometry\n                     */\n\n                    /**\n                     * Constructs a new Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Feature.\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IFeature=} [properties] Properties to set\n                     */\n                    function Feature(properties) {\n                        this.tags = [];\n                        this.geometry = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Feature id.\n                     * @member {number|Long}id\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Feature tags.\n                     * @member {Array.<number>}tags\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * Feature type.\n                     * @member {com.mapbox.pb.Tile.GeomType}type\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.type = 0;\n\n                    /**\n                     * Feature geometry.\n                     * @member {Array.<number>}geometry\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.geometry = $util.emptyArray;\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Feature();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = reader.uint64();\n                                break;\n                            case 2:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.tags.push(reader.uint32());\n                                } else\n                                    message.tags.push(reader.uint32());\n                                break;\n                            case 3:\n                                message.type = reader.int32();\n                                break;\n                            case 4:\n                                if (!(message.geometry && message.geometry.length))\n                                    message.geometry = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.geometry.push(reader.uint32());\n                                } else\n                                    message.geometry.push(reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Feature message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     */\n                    Feature.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Feature)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Feature();\n                        if (object.id != null)\n                            if ($util.Long)\n                                (message.id = $util.Long.fromValue(object.id)).unsigned = true;\n                            else if (typeof object.id === \"string\")\n                                message.id = parseInt(object.id, 10);\n                            else if (typeof object.id === \"number\")\n                                message.id = object.id;\n                            else if (typeof object.id === \"object\")\n                                message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = object.tags[i] >>> 0;\n                        }\n                        switch (object.type) {\n                        case \"UNKNOWN\":\n                        case 0:\n                            message.type = 0;\n                            break;\n                        case \"POINT\":\n                        case 1:\n                            message.type = 1;\n                            break;\n                        case \"LINESTRING\":\n                        case 2:\n                            message.type = 2;\n                            break;\n                        case \"POLYGON\":\n                        case 3:\n                            message.type = 3;\n                            break;\n                        }\n                        if (object.geometry) {\n                            if (!Array.isArray(object.geometry))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.geometry: array expected\");\n                            message.geometry = [];\n                            for (var i = 0; i < object.geometry.length; ++i)\n                                message.geometry[i] = object.geometry[i] >>> 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Feature message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Feature} message Feature\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Feature.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.tags = [];\n                            object.geometry = [];\n                        }\n                        if (options.defaults) {\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.id = options.longs === String ? \"0\" : 0;\n                            object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            if (typeof message.id === \"number\")\n                                object.id = options.longs === String ? String(message.id) : message.id;\n                            else\n                                object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            object.type = options.enums === String ? $root.com.mapbox.pb.Tile.GeomType[message.type] : message.type;\n                        if (message.geometry && message.geometry.length) {\n                            object.geometry = [];\n                            for (var j = 0; j < message.geometry.length; ++j)\n                                object.geometry[j] = message.geometry[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Feature to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Feature.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Feature;\n                })();\n\n                Tile.Layer = (function() {\n\n                    /**\n                     * Properties of a Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface ILayer\n                     * @property {number} version Layer version\n                     * @property {string} name Layer name\n                     * @property {Array.<com.mapbox.pb.Tile.IFeature>} [features] Layer features\n                     * @property {Array.<string>} [keys] Layer keys\n                     * @property {Array.<com.mapbox.pb.Tile.IValue>} [values] Layer values\n                     * @property {number} [extent] Layer extent\n                     */\n\n                    /**\n                     * Constructs a new Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Layer.\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.ILayer=} [properties] Properties to set\n                     */\n                    function Layer(properties) {\n                        this.features = [];\n                        this.keys = [];\n                        this.values = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Layer version.\n                     * @member {number}version\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.version = 1;\n\n                    /**\n                     * Layer name.\n                     * @member {string}name\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.name = \"\";\n\n                    /**\n                     * Layer features.\n                     * @member {Array.<com.mapbox.pb.Tile.IFeature>}features\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.features = $util.emptyArray;\n\n                    /**\n                     * Layer keys.\n                     * @member {Array.<string>}keys\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.keys = $util.emptyArray;\n\n                    /**\n                     * Layer values.\n                     * @member {Array.<com.mapbox.pb.Tile.IValue>}values\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.values = $util.emptyArray;\n\n                    /**\n                     * Layer extent.\n                     * @member {number}extent\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.extent = 4096;\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Layer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 15:\n                                message.version = reader.uint32();\n                                break;\n                            case 1:\n                                message.name = reader.string();\n                                break;\n                            case 2:\n                                if (!(message.features && message.features.length))\n                                    message.features = [];\n                                message.features.push($root.com.mapbox.pb.Tile.Feature.decode(reader, reader.uint32()));\n                                break;\n                            case 3:\n                                if (!(message.keys && message.keys.length))\n                                    message.keys = [];\n                                message.keys.push(reader.string());\n                                break;\n                            case 4:\n                                if (!(message.values && message.values.length))\n                                    message.values = [];\n                                message.values.push($root.com.mapbox.pb.Tile.Value.decode(reader, reader.uint32()));\n                                break;\n                            case 5:\n                                message.extent = reader.uint32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        if (!message.hasOwnProperty(\"version\"))\n                            throw $util.ProtocolError(\"missing required 'version'\", { instance: message });\n                        if (!message.hasOwnProperty(\"name\"))\n                            throw $util.ProtocolError(\"missing required 'name'\", { instance: message });\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Layer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     */\n                    Layer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Layer)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Layer();\n                        if (object.version != null)\n                            message.version = object.version >>> 0;\n                        if (object.name != null)\n                            message.name = String(object.name);\n                        if (object.features) {\n                            if (!Array.isArray(object.features))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.features: array expected\");\n                            message.features = [];\n                            for (var i = 0; i < object.features.length; ++i) {\n                                if (typeof object.features[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.features: object expected\");\n                                message.features[i] = $root.com.mapbox.pb.Tile.Feature.fromObject(object.features[i]);\n                            }\n                        }\n                        if (object.keys) {\n                            if (!Array.isArray(object.keys))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.keys: array expected\");\n                            message.keys = [];\n                            for (var i = 0; i < object.keys.length; ++i)\n                                message.keys[i] = String(object.keys[i]);\n                        }\n                        if (object.values) {\n                            if (!Array.isArray(object.values))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.values: array expected\");\n                            message.values = [];\n                            for (var i = 0; i < object.values.length; ++i) {\n                                if (typeof object.values[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.values: object expected\");\n                                message.values[i] = $root.com.mapbox.pb.Tile.Value.fromObject(object.values[i]);\n                            }\n                        }\n                        if (object.extent != null)\n                            message.extent = object.extent >>> 0;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Layer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Layer} message Layer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Layer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.features = [];\n                            object.keys = [];\n                            object.values = [];\n                        }\n                        if (options.defaults) {\n                            object.name = \"\";\n                            object.extent = 4096;\n                            object.version = 1;\n                        }\n                        if (message.name != null && message.hasOwnProperty(\"name\"))\n                            object.name = message.name;\n                        if (message.features && message.features.length) {\n                            object.features = [];\n                            for (var j = 0; j < message.features.length; ++j)\n                                object.features[j] = $root.com.mapbox.pb.Tile.Feature.toObject(message.features[j], options);\n                        }\n                        if (message.keys && message.keys.length) {\n                            object.keys = [];\n                            for (var j = 0; j < message.keys.length; ++j)\n                                object.keys[j] = message.keys[j];\n                        }\n                        if (message.values && message.values.length) {\n                            object.values = [];\n                            for (var j = 0; j < message.values.length; ++j)\n                                object.values[j] = $root.com.mapbox.pb.Tile.Value.toObject(message.values[j], options);\n                        }\n                        if (message.extent != null && message.hasOwnProperty(\"extent\"))\n                            object.extent = message.extent;\n                        if (message.version != null && message.hasOwnProperty(\"version\"))\n                            object.version = message.version;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Layer to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Layer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Layer;\n                })();\n\n                return Tile;\n            })();\n\n            return pb;\n        })();\n\n        return mapbox;\n    })();\n\n    return com;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-minimal\");\r\n","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    AttributeMap,\n    BufferAttribute,\n    composeTechniqueTextureName,\n    DecodedTile,\n    ExtendedTileInfo,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    Geometry,\n    GeometryType,\n    getFeatureId,\n    Group,\n    IndexedTechnique,\n    InterleavedBufferAttribute,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isLabelRejectionLineTechnique,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isSolidLineTechnique,\n    isStandardTechnique,\n    isTextTechnique,\n    LineMarkerTechnique,\n    PathGeometry,\n    PoiGeometry,\n    PoiTechnique,\n    StyleColor,\n    Technique,\n    TextGeometry,\n    TextPathGeometry,\n    TextTechnique,\n    textureCoordinateType,\n    TextureCoordinateType\n} from \"@here/harp-datasource-protocol\";\nimport {\n    Env,\n    IMeshBuffers,\n    StyleSetEvaluator,\n    Value\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LineGroup } from \"@here/harp-lines/lib/Lines\";\nimport { triangulateLine } from \"@here/harp-lines/lib/TriangulateLines\";\nimport { assert, getOptionValue, LoggerManager, Math2D } from \"@here/harp-utils\";\nimport earcut from \"earcut\";\nimport * as THREE from \"three\";\n\nimport {\n    normalizedEquirectangularProjection,\n    ProjectionType,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\n\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { LinesGeometry } from \"./OmvDataSource\";\nimport { IOmvEmitter, OmvDecoder, Ring } from \"./OmvDecoder\";\nimport {\n    tile2world,\n    webMercatorTile2TargetTile,\n    webMercatorTile2TargetWorld,\n    world2tile\n} from \"./OmvUtils\";\n\nimport {\n    AttrEvaluationContext,\n    evaluateTechniqueAttr\n} from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\n// tslint:disable-next-line:max-line-length\nimport { SphericalGeometrySubdivisionModifier } from \"@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier\";\nimport { ExtrusionFeatureDefs } from \"@here/harp-materials/lib/MapMeshMaterialsDefs\";\nimport { clipPolygon } from \"./clipPolygon\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecodedTileEmitter\");\n\nconst tempTileOrigin = new THREE.Vector3();\nconst tempVertOrigin = new THREE.Vector3();\nconst tempVertNormal = new THREE.Vector3();\nconst tempFootDisp = new THREE.Vector3();\nconst tempRoofDisp = new THREE.Vector3();\n\nconst tmpV2 = new THREE.Vector2();\nconst tmpV2r = new THREE.Vector2();\nconst tmpV3 = new THREE.Vector3();\nconst tmpV3r = new THREE.Vector3();\n\nconst tempP0 = new THREE.Vector2();\nconst tempP1 = new THREE.Vector2();\nconst tempPreviousTangent = new THREE.Vector2();\n\nconst tmpPointA = new THREE.Vector3();\nconst tmpPointB = new THREE.Vector3();\nconst tmpPointC = new THREE.Vector3();\nconst tmpPointD = new THREE.Vector3();\nconst tmpPointE = new THREE.Vector3();\nconst tmpLine = new THREE.Line3();\n\n/**\n * Minimum number of pixels per character. Used during estimation if there is enough screen space\n * available to render a text. Based on the estimated screen size of a tile.\n */\nconst MIN_AVERAGE_CHAR_WIDTH = 5;\n\n/**\n * Estimation \"fudge factor\", tweaking the size estimation to\n *\n * a) allow room for zooming in to the tile, and\n *\n * b) allow for some tilting, where the edge of a tile closer to the camera has more space.\n *\n * Useful values are between 0 (allow all labels), 0.5 (allow labels at twice the default display\n * size of the tile) and 1.0 (skip labels that would normally not be displayed at default tile\n * size).\n */\nconst SIZE_ESTIMATION_FACTOR = 0.5;\n\n/**\n * Maximum allowed corner angle inside a label path.\n */\nconst MAX_CORNER_ANGLE = Math.PI / 8;\n\n/**\n * Used to identify an invalid (or better: unused) array index.\n */\nconst INVALID_ARRAY_INDEX = -1;\n\n// for tilezen by default extrude all buildings even those without height data\nclass MeshBuffers implements IMeshBuffers {\n    readonly positions: number[] = [];\n    readonly normals: number[] = [];\n    readonly textureCoordinates: number[] = [];\n    readonly colors: number[] = [];\n    readonly extrusionAxis: number[] = [];\n    readonly indices: number[] = [];\n    readonly edgeIndices: number[] = [];\n    readonly groups: Group[] = [];\n    readonly texts: number[] = [];\n    readonly pathLengths: number[] = [];\n    readonly stringCatalog: Array<string | undefined> = [];\n    readonly imageTextures: number[] = [];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    readonly featureStarts: number[] = [];\n\n    /**\n     * An optional list of additional data that can be used as additional data for the object\n     * picking.\n     */\n    readonly objInfos: AttributeMap[] = [];\n\n    constructor(readonly type: GeometryType) {}\n\n    addText(text: string) {\n        let index = this.stringCatalog.indexOf(text);\n\n        if (index < 0) {\n            index = this.stringCatalog.length;\n            this.stringCatalog.push(text);\n        }\n        return index;\n    }\n}\n\nexport enum LineType {\n    Simple,\n    Complex\n}\n\ntype TexCoordsFunction = (tilePos: THREE.Vector2, tileExtents: number) => { u: number; v: number };\nconst tmpColor = new THREE.Color();\n\nexport class OmvDecodedTileEmitter implements IOmvEmitter {\n    // mapping from style index to mesh buffers\n    private readonly m_meshBuffers = new Map<number, MeshBuffers>();\n\n    private readonly m_geometries: Geometry[] = [];\n    private readonly m_textGeometries: TextGeometry[] = [];\n    private readonly m_textPathGeometries: TextPathGeometry[] = [];\n    private readonly m_pathGeometries: PathGeometry[] = [];\n    private readonly m_poiGeometries: PoiGeometry[] = [];\n    private readonly m_simpleLines: LinesGeometry[] = [];\n    private readonly m_solidLines: LinesGeometry[] = [];\n\n    private readonly m_sources: string[] = [];\n    private m_maxGeometryHeight: number = 0;\n\n    constructor(\n        private readonly m_decodeInfo: OmvDecoder.DecodeInfo,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_gatherFeatureAttributes: boolean,\n        private readonly m_skipShortLabels: boolean,\n        private readonly m_enableElevationOverlay: boolean,\n        private readonly m_languages?: string[]\n    ) {}\n\n    get projection() {\n        return this.m_decodeInfo.targetProjection;\n    }\n\n    get center() {\n        return this.m_decodeInfo.center;\n    }\n\n    /**\n     * Creates the Point of Interest geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const techniqueIndex = technique._index;\n            const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, GeometryType.Point);\n\n            if (meshBuffers === undefined) {\n                continue;\n            }\n\n            const { positions, texts, imageTextures, objInfos } = meshBuffers;\n\n            const shouldCreateTextGeometries =\n                isTextTechnique(technique) || isPoiTechnique(technique);\n\n            let imageTexture: string | undefined;\n            const wantsPoi = isPoiTechnique(technique);\n\n            if (wantsPoi) {\n                const poiTechnique = technique as PoiTechnique;\n                imageTexture = evaluateTechniqueAttr(context, poiTechnique.imageTexture);\n\n                // TODO: Move to decoder independent parts of code.\n                if (poiTechnique.poiName !== undefined) {\n                    imageTexture = evaluateTechniqueAttr(context, poiTechnique.poiName);\n                } else if (typeof poiTechnique.poiNameField === \"string\") {\n                    const poiNameFieldValue = env.lookup(poiTechnique.poiNameField) as string;\n                    imageTexture = poiNameFieldValue;\n                } else if (typeof poiTechnique.imageTextureField === \"string\") {\n                    const imageTextureValue = env.lookup(poiTechnique.imageTextureField) as string;\n                    imageTexture = composeTechniqueTextureName(imageTextureValue, poiTechnique);\n                }\n            }\n\n            for (const pos of geometry) {\n                if (shouldCreateTextGeometries) {\n                    const textTechnique = technique as TextTechnique;\n                    const text = ExtendedTileInfo.getFeatureText(\n                        context,\n                        textTechnique,\n                        this.m_languages\n                    );\n\n                    if (text !== undefined && text.length > 0) {\n                        texts.push(meshBuffers.addText(text));\n                    } else {\n                        texts.push(INVALID_ARRAY_INDEX);\n                    }\n                }\n\n                // Always store the position, otherwise the following POIs will be\n                // misplaced.\n                if (shouldCreateTextGeometries) {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                } else {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV3);\n                }\n                positions.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                objInfos.push(\n                    this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                );\n\n                if (wantsPoi) {\n                    if (imageTexture === undefined) {\n                        imageTextures.push(INVALID_ARRAY_INDEX);\n                    } else {\n                        imageTextures.push(meshBuffers.addText(imageTexture));\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * Creates the line geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const localLines: number[][] = []; // lines in target tile space.\n        const worldLines: number[][] = []; // lines in world space.\n        const uvs: number[][] = [];\n        const offsets: number[][] = [];\n        const { projectedTileBounds } = this.m_decodeInfo;\n\n        const tileWidth = projectedTileBounds.max.x - projectedTileBounds.min.x;\n        const tileHeight = projectedTileBounds.max.y - projectedTileBounds.min.y;\n        const tileSizeInMeters = Math.max(tileWidth, tileHeight);\n\n        let computeTexCoords: TexCoordsFunction | undefined;\n        let texCoordinateType: TextureCoordinateType | undefined;\n\n        const hasUntiledLines = geometry[0].untiledPositions !== undefined;\n\n        // Check if any of the techniques needs texture coordinates\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            if (!computeTexCoords) {\n                computeTexCoords = this.getComputeTexCoordsFunc(technique);\n                texCoordinateType = this.getTextureCoordinateType(technique);\n            } else {\n                // Support generation of only one type of texture coordinates.\n                const otherTexCoordType = this.getTextureCoordinateType(technique);\n                assert(otherTexCoordType === undefined || texCoordinateType === otherTexCoordType);\n            }\n        }\n\n        for (const polyline of geometry) {\n            // Compute the world position of the untiled line and its distance to the origin of the\n            // line to properly join lines.\n            const untiledLine: number[] = [];\n            let lineDist = 0;\n            if (hasUntiledLines) {\n                this.m_decodeInfo.targetProjection.projectPoint(\n                    polyline.untiledPositions![0],\n                    tmpV3r\n                );\n                polyline.untiledPositions!.forEach(pos => {\n                    // Calculate the distance to the next unnormalized point.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos, tmpV3);\n                    lineDist += tmpV3.distanceTo(tmpV3r);\n                    tmpV3r.copy(tmpV3);\n\n                    // Pushed the normalized point for line matching.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos.normalized(), tmpV3);\n                    untiledLine.push(tmpV3.x, tmpV3.y, tmpV3.z, lineDist);\n                });\n            }\n\n            const localLine: number[] = [];\n            const worldLine: number[] = [];\n            const lineUvs: number[] = [];\n            const lineOffsets: number[] = [];\n            polyline.positions.forEach(pos => {\n                webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                if (computeTexCoords) {\n                    const { u, v } = computeTexCoords(pos, extents);\n                    lineUvs.push(u, v);\n                }\n                if (hasUntiledLines) {\n                    // Find where in the [0...1] range relative to the line our current vertex lies.\n                    const offset = this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                    lineOffsets.push(offset);\n                }\n                tmpV3.sub(this.m_decodeInfo.center);\n                localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n            });\n            localLines.push(localLine);\n            worldLines.push(worldLine);\n            uvs.push(lineUvs);\n            offsets.push(lineOffsets);\n        }\n\n        const wantCircle = this.m_decodeInfo.tileKey.level >= 11;\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            const techniqueIndex = technique._index;\n            const techniqueName = technique.name;\n\n            if (isLineTechnique(technique) || isSolidLineTechnique(technique)) {\n                const lineGeometry = isLineTechnique(technique)\n                    ? this.m_simpleLines\n                    : this.m_solidLines;\n\n                const lineType = isLineTechnique(technique) ? LineType.Simple : LineType.Complex;\n\n                this.applyLineTechnique(\n                    lineGeometry,\n                    technique,\n                    techniqueIndex,\n                    lineType,\n                    env.entries,\n                    localLines,\n                    context,\n                    this.getTextureCoordinateType(technique) ? uvs : undefined,\n                    hasUntiledLines ? offsets : undefined\n                );\n            } else if (\n                isTextTechnique(technique) ||\n                isPoiTechnique(technique) ||\n                isLineMarkerTechnique(technique)\n            ) {\n                const textTechnique = technique as TextTechnique;\n                const text = ExtendedTileInfo.getFeatureText(\n                    context,\n                    textTechnique,\n                    this.m_languages\n                );\n\n                if (text === undefined || text.length === 0) {\n                    continue;\n                }\n                let validLines: number[][] = [];\n\n                if (this.m_skipShortLabels) {\n                    // Filter the lines, keep only those that are long enough for labelling. Also,\n                    // split jagged label paths to keep processing and rendering only those that\n                    // have no sharp corners, which would not be rendered anyway.\n\n                    const metersPerPixel = tileSizeInMeters / this.m_decodeInfo.tileSizeOnScreen;\n                    const minEstimatedLabelLength =\n                        MIN_AVERAGE_CHAR_WIDTH *\n                        text.length *\n                        metersPerPixel *\n                        SIZE_ESTIMATION_FACTOR;\n                    const minEstimatedLabelLengthSqr =\n                        minEstimatedLabelLength * minEstimatedLabelLength;\n\n                    validLines = this.splitJaggyLines(\n                        worldLines,\n                        minEstimatedLabelLengthSqr,\n                        MAX_CORNER_ANGLE\n                    );\n                } else {\n                    validLines = worldLines;\n                }\n\n                if (validLines.length === 0) {\n                    continue;\n                }\n\n                if (isTextTechnique(technique)) {\n                    if (text === undefined) {\n                        continue;\n                    }\n                    for (const path of validLines) {\n                        const pathLengthSqr = Math2D.computeSquaredLineLength(path);\n                        this.m_textPathGeometries.push({\n                            technique: techniqueIndex,\n                            path,\n                            pathLengthSqr,\n                            text: String(text),\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? env.entries\n                                : getFeatureId(env.entries)\n                        });\n                    }\n                } else {\n                    const lineMarkerTechnique = technique as LineMarkerTechnique;\n\n                    let imageTexture = evaluateTechniqueAttr(\n                        context,\n                        lineMarkerTechnique.imageTexture\n                    );\n\n                    // TODO: `imageTextureField` and `imageTexturePrefix` and `imageTexturePostfix`\n                    // are now deprecated\n\n                    // TODO: Move to decoder independent parts of code.\n                    if (typeof lineMarkerTechnique.imageTextureField === \"string\") {\n                        const imageTextureValue = env.lookup(lineMarkerTechnique.imageTextureField);\n                        imageTexture = imageTextureValue as string;\n                        if (typeof lineMarkerTechnique.imageTexturePrefix === \"string\") {\n                            imageTexture = lineMarkerTechnique.imageTexturePrefix + imageTexture;\n                        }\n                        if (typeof lineMarkerTechnique.imageTexturePostfix === \"string\") {\n                            imageTexture = imageTexture + lineMarkerTechnique.imageTexturePostfix;\n                        }\n                    }\n\n                    for (const aLine of validLines) {\n                        this.m_poiGeometries.push({\n                            technique: techniqueIndex,\n                            positions: {\n                                name: \"position\",\n                                type: \"float\",\n                                buffer: new Float32Array(aLine).buffer,\n                                itemCount: 3\n                            },\n                            texts: [0],\n                            stringCatalog: [text, imageTexture],\n                            imageTextures: [1],\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? [env.entries]\n                                : [getFeatureId(env.entries)]\n                        });\n                    }\n                }\n            } else if (isLabelRejectionLineTechnique(technique)) {\n                for (const path of worldLines) {\n                    const worldPath: Vector3Like[] = [];\n                    for (let i = 0; i < path.length; i += 3) {\n                        worldPath.push(new THREE.Vector3().fromArray(path, i) as Vector3Like);\n                    }\n                    this.m_pathGeometries.push({\n                        path: worldPath\n                    });\n                }\n            } else if (isExtrudedLineTechnique(technique)) {\n                const meshBuffers = this.findOrCreateMeshBuffers(\n                    techniqueIndex,\n                    GeometryType.ExtrudedLine\n                );\n                if (meshBuffers === undefined) {\n                    continue;\n                }\n                const { positions, indices, groups, featureStarts, objInfos } = meshBuffers;\n                const start = indices.length;\n\n                const lineWidth = evaluateTechniqueAttr<number>(context, technique.lineWidth);\n\n                if (lineWidth === undefined) {\n                    continue;\n                }\n\n                const techniqueCaps = evaluateTechniqueAttr<string>(\n                    context,\n                    technique.caps,\n                    \"Circle\"\n                );\n\n                const addCircle = wantCircle && techniqueCaps === \"Circle\";\n\n                localLines.forEach(aLine => {\n                    triangulateLine(aLine, lineWidth, positions, indices, addCircle);\n                    featureStarts.push(start);\n                    objInfos.push(\n                        this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                    );\n                });\n\n                const count = indices.length - start;\n                groups.push({ start, count, technique: techniqueIndex, featureId });\n            } else {\n                logger.warn(\n                    `OmvDecodedTileEmitter#processLineFeature: Invalid line technique\n                     ${techniqueName} for layer: ${env.entries.$layer} `\n                );\n            }\n        }\n    }\n\n    /**\n     * Creates the polygons geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param feature The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        techniques.forEach(technique => {\n            if (technique === undefined) {\n                return;\n            }\n\n            const techniqueIndex = technique._index;\n\n            if (techniqueIndex === undefined) {\n                throw new Error(\n                    \"OmvDecodedTileEmitter#processPolygonFeature: \" +\n                        \"Internal error - No technique index\"\n                );\n            }\n\n            const polygons: Ring[][] = [];\n\n            const isExtruded = isExtrudedPolygonTechnique(technique);\n            const isFilled = isFillTechnique(technique);\n            const isStandard = isStandardTechnique(technique);\n\n            const isPolygon = isExtruded || isFilled || isStandard;\n            const computeTexCoords = this.getComputeTexCoordsFunc(technique);\n            const vertexStride = computeTexCoords !== undefined ? 4 : 2;\n\n            let clipRing: THREE.Vector2[] | undefined;\n\n            for (const polygon of geometry) {\n                const rings: Ring[] = [];\n\n                for (const outline of polygon.rings) {\n                    const ringContour: number[] = [];\n\n                    let coords = outline;\n\n                    if (isFilled || isStandard) {\n                        if (!clipRing) {\n                            clipRing = [\n                                new THREE.Vector2(0, 0),\n                                new THREE.Vector2(extents, 0),\n                                new THREE.Vector2(extents, extents),\n                                new THREE.Vector2(0, extents)\n                            ];\n                        }\n                        coords = clipPolygon(coords, clipRing);\n                    }\n\n                    if (coords.length === 0) {\n                        continue;\n                    }\n\n                    for (const coord of coords) {\n                        ringContour.push(coord.x, coord.y);\n                        if (computeTexCoords !== undefined) {\n                            const { u, v } = computeTexCoords(coord, extents);\n                            ringContour.push(u, v);\n                        }\n                    }\n\n                    rings.push(new Ring(extents, vertexStride, ringContour));\n                }\n\n                if (rings.length === 0) {\n                    continue;\n                }\n\n                polygons.push(rings);\n            }\n\n            const isLine = isSolidLineTechnique(technique) || isLineTechnique(technique);\n            if (isPolygon) {\n                this.applyPolygonTechnique(\n                    polygons,\n                    technique,\n                    techniqueIndex,\n                    featureId,\n                    context,\n                    extents\n                );\n            } else if (isLine) {\n                const lineGeometry =\n                    technique.name === \"line\" ? this.m_simpleLines : this.m_solidLines;\n\n                const lineType = technique.name === \"line\" ? LineType.Simple : LineType.Complex;\n\n                polygons.forEach(rings => {\n                    const lines: number[][] = [];\n                    rings.forEach(ring => {\n                        const length = ring.contour.length / ring.vertexStride;\n                        let line: number[] = [];\n                        for (let i = 0; i < length; ++i) {\n                            const nextIdx = (i + 1) % length;\n                            const currX = ring.contour[i * ring.vertexStride];\n                            const currY = ring.contour[i * ring.vertexStride + 1];\n                            const nextX = ring.contour[nextIdx * ring.vertexStride];\n                            const nextY = ring.contour[nextIdx * ring.vertexStride + 1];\n\n                            const isOutline = !(\n                                (currX <= 0 && nextX <= 0) ||\n                                (currX >= ring.extents && nextX >= ring.extents) ||\n                                (currY <= 0 && nextY <= 0) ||\n                                (currY >= ring.extents && nextY >= ring.extents)\n                            );\n\n                            if (!isOutline && line.length !== 0) {\n                                lines.push(line);\n                                line = [];\n                            } else if (isOutline && line.length === 0) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(currX, currY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                            }\n                            if (isOutline) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(nextX, nextY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                            }\n                        }\n                        if (line.length) {\n                            lines.push(line);\n                        }\n                    });\n\n                    if (lines.length === 0) {\n                        return;\n                    }\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        lines,\n                        context\n                    );\n                });\n            }\n        });\n    }\n\n    /**\n     * Creates the geometries that belongs to the [[Tile].\n     *\n     * @returns The [[DecodedTile]]\n     */\n    getDecodedTile(): DecodedTile {\n        this.createGeometries();\n        this.processSimpleLines(this.m_simpleLines);\n        this.processLines(this.m_solidLines);\n\n        const decodedTile: DecodedTile = {\n            techniques: this.m_styleSetEvaluator.decodedTechniques,\n            geometries: this.m_geometries,\n            decodeTime: undefined\n        };\n        if (this.m_textGeometries.length > 0) {\n            decodedTile.textGeometries = this.m_textGeometries;\n        }\n        if (this.m_poiGeometries.length > 0) {\n            decodedTile.poiGeometries = this.m_poiGeometries;\n        }\n        if (this.m_textPathGeometries.length > 0) {\n            decodedTile.textPathGeometries = this.m_textPathGeometries;\n        }\n        if (this.m_pathGeometries.length > 0) {\n            decodedTile.pathGeometries = this.m_pathGeometries;\n        }\n        if (this.m_sources.length !== 0) {\n            decodedTile.copyrightHolderIds = this.m_sources;\n        }\n        decodedTile.maxGeometryHeight = this.m_maxGeometryHeight;\n        return decodedTile;\n    }\n\n    /**\n     * Split the lines array into multiple parts if there are sharp corners. Reject parts that are\n     * too short to display the label text.\n     *\n     * @param {number[][]} lines Array containing the points of the paths.\n     * @param {number} minEstimatedLabelLengthSqr Minimum label size squared.\n     * @param {number} maxCornerAngle Maximum angle between consecutive path segments in radians.\n     * @returns The split and filtered lines array.\n     */\n    protected splitJaggyLines(\n        lines: number[][],\n        minEstimatedLabelLengthSqr: number,\n        maxCornerAngle: number\n    ): number[][] {\n        const validLines: number[][] = [];\n\n        const computeBoundingBoxSizeSqr = (\n            aLine: number[],\n            startIndex: number,\n            endIndex: number\n        ): number => {\n            let minX = Number.MAX_SAFE_INTEGER;\n            let maxX = Number.MIN_SAFE_INTEGER;\n            let minY = Number.MAX_SAFE_INTEGER;\n            let maxY = Number.MIN_SAFE_INTEGER;\n            for (let i = startIndex; i < endIndex; i += 3) {\n                const x = aLine[i];\n                const y = aLine[i + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n\n            return (maxX - minX) * (maxX - minX) + (maxY - minY) * (maxY - minY);\n        };\n\n        // Work on a copy of the path.\n        const pathsToCheck = lines.slice();\n\n        while (pathsToCheck.length > 0) {\n            const path = pathsToCheck.pop();\n\n            if (path === undefined || path.length < 6) {\n                continue;\n            }\n\n            let splitIndex = -1;\n\n            for (let i = 0; i < path.length - 3; i += 3) {\n                tempP0.set(path[i], path[i + 1]);\n                tempP1.set(path[i + 3], path[i + 4]);\n                const tangent = tempP1.sub(tempP0).normalize();\n\n                if (i > 0) {\n                    const theta = Math.atan2(\n                        tempPreviousTangent.x * tangent.y - tangent.x * tempPreviousTangent.y,\n                        tangent.dot(tempPreviousTangent)\n                    );\n\n                    if (Math.abs(theta) > maxCornerAngle) {\n                        splitIndex = i;\n                        break;\n                    }\n                }\n                tempPreviousTangent.set(tangent.x, tangent.y);\n            }\n\n            if (splitIndex > 0) {\n                // Estimate if the first part of the path is long enough for the label.\n                const firstPathLengthSqr = computeBoundingBoxSizeSqr(path, 0, splitIndex + 3);\n                // Estimate if the second part of the path is long enough for the label.\n                const secondPathLengthSqr = computeBoundingBoxSizeSqr(\n                    path,\n                    splitIndex,\n                    path.length\n                );\n\n                if (firstPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Split off the valid first path points with a clone of the path.\n                    validLines.push(path.slice(0, splitIndex + 3));\n                }\n\n                if (secondPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Now process the second part of the path, it may have to be split\n                    // again.\n                    pathsToCheck.push(path.slice(splitIndex));\n                }\n            } else {\n                // Estimate if the path is long enough for the label, otherwise ignore\n                // it for rendering text. First, compute the bounding box in world\n                // coordinates.\n                const pathLengthSqr = computeBoundingBoxSizeSqr(path, 0, path.length);\n\n                if (pathLengthSqr > minEstimatedLabelLengthSqr) {\n                    validLines.push(path);\n                }\n            }\n        }\n\n        return validLines;\n    }\n\n    private getTextureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n        // Set TileSpace coordinate type to generate texture coordinates for the displacement map\n        // used in elevation overlay.\n        if (\n            (isFillTechnique(technique) ||\n                isSolidLineTechnique(technique) ||\n                isExtrudedPolygonTechnique(technique)) &&\n            this.m_enableElevationOverlay\n        ) {\n            return TextureCoordinateType.TileSpace;\n        }\n\n        return textureCoordinateType(technique);\n    }\n\n    private getComputeTexCoordsFunc(technique: Technique): TexCoordsFunction | undefined {\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        return texCoordType === TextureCoordinateType.TileSpace\n            ? (tilePos: THREE.Vector2, tileExtents: number) => {\n                  const { x: u, y: v } = new THREE.Vector2()\n                      .copy(tilePos)\n                      .divideScalar(tileExtents);\n                  return { u, v: 1 - v };\n              }\n            : texCoordType === TextureCoordinateType.EquirectangularSpace\n            ? (tilePos: THREE.Vector2, extents: number) => {\n                  const worldPos = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV2r);\n                  const { x: u, y: v } = normalizedEquirectangularProjection.reprojectPoint(\n                      webMercatorProjection,\n                      new THREE.Vector3(worldPos.x, worldPos.y, 0)\n                  );\n                  return { u, v };\n              }\n            : undefined;\n    }\n\n    private applyLineTechnique(\n        linesGeometry: LinesGeometry[],\n        technique: IndexedTechnique,\n        techniqueIndex: number,\n        lineType = LineType.Complex,\n        featureAttributes: AttributeMap,\n        lines: number[][],\n        context: AttrEvaluationContext,\n        uvs?: number[][],\n        offsets?: number[][]\n    ): void {\n        const renderOrderOffset = evaluateTechniqueAttr<number>(\n            context,\n            technique.renderOrderOffset,\n            0\n        );\n\n        let lineGroup: LineGroup;\n        const lineGroupGeometries = linesGeometry.find(aLine => {\n            return (\n                aLine.technique === techniqueIndex && aLine.renderOrderOffset === renderOrderOffset\n            );\n        });\n        const hasNormalsAndUvs = uvs !== undefined;\n        if (lineGroupGeometries === undefined) {\n            lineGroup = new LineGroup(hasNormalsAndUvs, undefined, lineType === LineType.Simple);\n            const aLine: LinesGeometry = {\n                type: lineType === LineType.Complex ? GeometryType.SolidLine : GeometryType.Line,\n                technique: techniqueIndex,\n                renderOrderOffset:\n                    renderOrderOffset !== undefined ? Number(renderOrderOffset) : undefined,\n                lines: lineGroup\n            };\n\n            const techniqueTransient = evaluateTechniqueAttr<boolean>(\n                context,\n                technique.transient,\n                false\n            );\n            if (!techniqueTransient && this.m_gatherFeatureAttributes) {\n                // if this technique is transient, do not save the featureIds with the geometry\n                aLine.objInfos = [featureAttributes];\n                aLine.featureStarts = [0];\n            }\n\n            linesGeometry.push(aLine);\n        } else {\n            lineGroup = lineGroupGeometries.lines;\n\n            if (\n                this.m_gatherFeatureAttributes &&\n                lineGroupGeometries.objInfos &&\n                lineGroupGeometries.featureStarts\n            ) {\n                // Add ID to tag the geometry, also provide the current length of the index\n                // attribute\n                lineGroupGeometries.objInfos.push(featureAttributes);\n                lineGroupGeometries.featureStarts.push(lineGroup.indices.length);\n            }\n        }\n        let i = 0;\n        lines.forEach(aLine => {\n            lineGroup.add(\n                this.m_decodeInfo.center,\n                aLine,\n                offsets ? offsets[i] : undefined,\n                uvs ? uvs[i] : undefined\n            );\n            i++;\n        });\n    }\n\n    private applyPolygonTechnique(\n        polygons: Ring[][],\n        technique: Technique,\n        techniqueIndex: number,\n        featureId: number | undefined,\n        context: AttrEvaluationContext,\n        extents: number\n    ): void {\n        const isExtruded = isExtrudedPolygonTechnique(technique);\n\n        const geometryType = isExtruded ? GeometryType.ExtrudedPolygon : GeometryType.Polygon;\n        const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, geometryType);\n\n        if (meshBuffers === undefined) {\n            return;\n        }\n\n        const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n        const fillTechnique = technique as FillTechnique;\n        const boundaryWalls = extrudedPolygonTechnique.boundaryWalls !== false;\n\n        const isFilled = isFillTechnique(technique);\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        let height = evaluateTechniqueAttr<number>(context, extrudedPolygonTechnique.height);\n\n        let floorHeight = evaluateTechniqueAttr<number>(\n            context,\n            extrudedPolygonTechnique.floorHeight\n        );\n\n        if (height === undefined) {\n            // Get the height values for the footprint and extrusion.\n            const featureHeight = context.env.lookup(\"height\") as number;\n            const styleSetDefaultHeight = evaluateTechniqueAttr<number>(\n                context,\n                extrudedPolygonTechnique.defaultHeight\n            );\n            height =\n                featureHeight !== undefined\n                    ? featureHeight\n                    : styleSetDefaultHeight !== undefined\n                    ? styleSetDefaultHeight\n                    : 0;\n        }\n\n        if (floorHeight === undefined) {\n            const featureMinHeight = context.env.lookup(\"min_height\") as number;\n            floorHeight = featureMinHeight !== undefined && !isFilled ? featureMinHeight : 0;\n        }\n\n        // Prevent that extruded buildings are completely flat (can introduce errors in normal\n        // computation and extrusion).\n        height = Math.max(floorHeight + ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT, height);\n\n        const styleSetConstantHeight = getOptionValue(\n            extrudedPolygonTechnique.constantHeight,\n            false\n        );\n\n        this.m_decodeInfo.tileBounds.getCenter(tempTileOrigin);\n\n        const {\n            positions,\n            normals,\n            textureCoordinates,\n            colors,\n            extrusionAxis,\n            indices,\n            edgeIndices,\n            groups\n        } = meshBuffers;\n\n        const featureStride = texCoordType !== undefined ? 4 : 2;\n        const vertexStride = featureStride + 2;\n        const isSpherical = this.m_decodeInfo.targetProjection.type === ProjectionType.Spherical;\n\n        const edgeWidth = isExtruded\n            ? extrudedPolygonTechnique.lineWidth || 0.0\n            : isFilled\n            ? fillTechnique.lineWidth || 0.0\n            : 0.0;\n        const hasEdges = edgeWidth > 0.0;\n\n        let color: THREE.Color | undefined;\n        if (isExtrudedPolygonTechnique(technique)) {\n            if (getOptionValue(technique.vertexColors, false)) {\n                let colorValue = evaluateTechniqueAttr<StyleColor>(context, technique.color);\n                if (colorValue === undefined) {\n                    const featureColor = context.env.lookup(\"color\");\n                    if (this.isColorStringValid(featureColor)) {\n                        colorValue = String(featureColor);\n                    }\n                }\n                if (colorValue === undefined) {\n                    colorValue = evaluateTechniqueAttr<number | string>(\n                        context,\n                        technique.defaultColor,\n                        0x000000\n                    );\n                }\n\n                if (colorValue === undefined) {\n                    colorValue = 0x000000;\n                }\n                tmpColor.set(colorValue as any);\n\n                color = tmpColor;\n            }\n        }\n\n        for (const polygon of polygons) {\n            const startIndexCount = indices.length;\n\n            for (let ringIndex = 0; ringIndex < polygon.length; ) {\n                const vertices: number[] = [];\n                const polygonBaseVertex = positions.length / 3;\n\n                const { contour, winding } = polygon[ringIndex++];\n                for (let i = 0; i < contour.length / featureStride; ++i) {\n                    // Invert the Y component to preserve the correct winding without transforming\n                    // from webMercator's local to global space.\n                    for (let j = 0; j < featureStride; ++j) {\n                        vertices.push((j === 1 ? -1 : 1) * contour[i * featureStride + j]);\n                    }\n\n                    // Calculate nextEdge and nextWall.\n                    const nextIdx = (i + 1) % (contour.length / featureStride);\n                    const currX = contour[i * featureStride];\n                    const currY = contour[i * featureStride + 1];\n                    const nextX = contour[nextIdx * featureStride];\n                    const nextY = contour[nextIdx * featureStride + 1];\n                    const insideExtents = !(\n                        (currX <= 0 && nextX <= 0) ||\n                        (currX >= extents && nextX >= extents) ||\n                        (currY <= 0 && nextY <= 0) ||\n                        (currY >= extents && nextY >= extents)\n                    );\n\n                    vertices.push(\n                        insideExtents ? nextIdx : -1,\n                        boundaryWalls || insideExtents ? nextIdx : -1\n                    );\n                }\n\n                // Iterate over the inner rings. The inner rings have the opposite winding\n                // of the outer rings.\n                const holes: number[] = [];\n                while (ringIndex < polygon.length && polygon[ringIndex].winding !== winding) {\n                    const vertexOffset = vertices.length / vertexStride;\n                    holes.push(vertexOffset);\n\n                    const hole = polygon[ringIndex++].contour;\n                    for (let i = 0; i < hole.length / featureStride; ++i) {\n                        // Invert the Y component to preserve the correct winding without\n                        // transforming from webMercator's local to global space.\n                        for (let j = 0; j < featureStride; ++j) {\n                            vertices.push((j === 1 ? -1 : 1) * hole[i * featureStride + j]);\n                        }\n\n                        // Calculate nextEdge and nextWall.\n                        const nextIdx = (i + 1) % (hole.length / featureStride);\n                        const currX = hole[i * featureStride];\n                        const currY = hole[i * featureStride + 1];\n                        const nextX = hole[nextIdx * featureStride];\n                        const nextY = hole[nextIdx * featureStride + 1];\n                        const insideExtents = !(\n                            (currX <= 0 && nextX <= 0) ||\n                            (currX >= extents && nextX >= extents) ||\n                            (currY <= 0 && nextY <= 0) ||\n                            (currY >= extents && nextY >= extents)\n                        );\n\n                        vertices.push(\n                            insideExtents ? vertexOffset + nextIdx : -1,\n                            boundaryWalls || insideExtents ? vertexOffset + nextIdx : -1\n                        );\n                    }\n                }\n\n                try {\n                    // Triangulate the footprint polyline.\n                    const triangles = earcut(vertices, holes, vertexStride);\n                    const originalVertexCount = vertices.length / vertexStride;\n\n                    // Subdivide for spherical projections if needed.\n                    if (isSpherical) {\n                        const geom = new THREE.BufferGeometry();\n\n                        const positionArray = [];\n                        const uvArray = [];\n                        const edgeArray = [];\n                        const wallArray = [];\n\n                        // Transform to global webMercator coordinates to be able to reproject to\n                        // sphere.\n                        for (let i = 0; i < vertices.length; i += vertexStride) {\n                            const worldPos = tile2world(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(vertices[i], vertices[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            positionArray.push(worldPos.x, worldPos.y, 0);\n                            if (texCoordType !== undefined) {\n                                uvArray.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            edgeArray.push(vertices[i + featureStride]);\n                            wallArray.push(vertices[i + featureStride + 1]);\n                        }\n\n                        // Create the temporary geometry used for subdivision.\n                        const posAttr = new THREE.BufferAttribute(\n                            new Float32Array(positionArray),\n                            3\n                        );\n                        geom.setAttribute(\"position\", posAttr);\n                        let uvAttr: THREE.BufferAttribute | undefined;\n                        if (texCoordType !== undefined) {\n                            uvAttr = new THREE.BufferAttribute(new Float32Array(uvArray), 2);\n                            geom.setAttribute(\"uv\", uvAttr);\n                        }\n                        const edgeAttr = new THREE.BufferAttribute(new Float32Array(edgeArray), 1);\n                        geom.setAttribute(\"edge\", edgeAttr);\n                        const wallAttr = new THREE.BufferAttribute(new Float32Array(wallArray), 1);\n                        geom.setAttribute(\"wall\", edgeAttr);\n                        const indexAttr = new THREE.BufferAttribute(new Uint32Array(triangles), 1);\n                        geom.setIndex(indexAttr);\n\n                        // FIXME(HARP-5700): Subdivision modifier ignores texture coordinates.\n                        const modifier = new SphericalGeometrySubdivisionModifier(\n                            THREE.Math.degToRad(10),\n                            webMercatorProjection\n                        );\n                        modifier.modify(geom);\n\n                        // Reassemble the vertex buffer, transforming the subdivided global\n                        // webMercator points back to local space.\n                        vertices.length = 0;\n                        triangles.length = 0;\n                        for (let i = 0; i < posAttr.array.length; i += 3) {\n                            const tilePos = world2tile(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(posAttr.array[i], posAttr.array[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            vertices.push(tilePos.x, tilePos.y);\n                            if (texCoordType !== undefined) {\n                                vertices.push(uvAttr!.array[(i / 3) * 2]);\n                                vertices.push(uvAttr!.array[(i / 3) * 2 + 1]);\n                            }\n                            vertices.push(edgeAttr.array[i / 3]);\n                            vertices.push(wallAttr.array[i / 3]);\n                        }\n\n                        const geomIndex = geom.getIndex();\n                        if (geomIndex !== null) {\n                            triangles.push(...(geomIndex.array as Float32Array));\n                        }\n                    }\n\n                    // Add the footprint/roof vertices to the position buffer.\n                    tempVertNormal.set(0, 0, 1);\n\n                    // Assemble the vertex buffer.\n                    for (let i = 0; i < vertices.length; i += vertexStride) {\n                        webMercatorTile2TargetTile(\n                            extents,\n                            this.m_decodeInfo,\n                            tmpV2.set(vertices[i], vertices[i + 1]),\n                            tmpV3,\n                            true\n                        );\n\n                        let scaleFactor = 1.0;\n                        if (isExtruded && styleSetConstantHeight !== true) {\n                            tempVertOrigin.set(\n                                tempTileOrigin.x + tmpV3.x,\n                                tempTileOrigin.y + tmpV3.y,\n                                tempTileOrigin.z + tmpV3.z\n                            );\n                            scaleFactor = this.m_decodeInfo.targetProjection.getScaleFactor(\n                                tempVertOrigin\n                            );\n                        }\n                        this.m_maxGeometryHeight = Math.max(\n                            this.m_maxGeometryHeight,\n                            scaleFactor * height\n                        );\n\n                        if (isSpherical) {\n                            tempVertNormal\n                                .set(tmpV3.x, tmpV3.y, tmpV3.z)\n                                .add(this.center)\n                                .normalize();\n                        }\n\n                        tempFootDisp.copy(tempVertNormal).multiplyScalar(floorHeight * scaleFactor);\n                        tempRoofDisp.copy(tempVertNormal).multiplyScalar(height * scaleFactor);\n                        positions.push(\n                            tmpV3.x + tempFootDisp.x,\n                            tmpV3.y + tempFootDisp.y,\n                            tmpV3.z + tempFootDisp.z\n                        );\n                        if (texCoordType !== undefined) {\n                            textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                        }\n                        if (this.m_enableElevationOverlay) {\n                            normals.push(...tempVertNormal.toArray());\n                        }\n                        if (isExtruded) {\n                            positions.push(\n                                tmpV3.x + tempRoofDisp.x,\n                                tmpV3.y + tempRoofDisp.y,\n                                tmpV3.z + tempRoofDisp.z\n                            );\n                            extrusionAxis.push(\n                                0.0,\n                                0.0,\n                                0.0,\n                                0.0,\n                                tempRoofDisp.x - tempFootDisp.x,\n                                tempRoofDisp.y - tempFootDisp.y,\n                                tempRoofDisp.z - tempFootDisp.z,\n                                1.0\n                            );\n                            if (texCoordType !== undefined) {\n                                textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            if (this.m_enableElevationOverlay) {\n                                normals.push(...tempVertNormal.toArray());\n                            }\n                            if (color !== undefined) {\n                                colors.push(color.r, color.g, color.b, color.r, color.g, color.b);\n                            }\n                        }\n                    }\n\n                    // Add the footprint/roof indices to the index buffer.\n                    for (let i = 0; i < triangles.length; i += 3) {\n                        if (isExtruded) {\n                            // When extruding we duplicate the vertices, so that all even vertices\n                            // belong to the bottom and all odd vertices belong to the top.\n                            const i0 = polygonBaseVertex + triangles[i + 0] * 2 + 1;\n                            const i1 = polygonBaseVertex + triangles[i + 1] * 2 + 1;\n                            const i2 = polygonBaseVertex + triangles[i + 2] * 2 + 1;\n                            indices.push(i0, i1, i2);\n                        } else {\n                            const i0 = polygonBaseVertex + triangles[i + 0];\n                            const i1 = polygonBaseVertex + triangles[i + 1];\n                            const i2 = polygonBaseVertex + triangles[i + 2];\n                            indices.push(i0, i1, i2);\n                        }\n                    }\n\n                    // Assemble the index buffer for edges (follow vertices as linked list).\n                    if (hasEdges) {\n                        this.addEdges(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            positions,\n                            vertices,\n                            edgeIndices,\n                            isExtruded,\n                            extrudedPolygonTechnique.footprint,\n                            extrudedPolygonTechnique.maxSlope\n                        );\n                    }\n                    if (isExtruded) {\n                        this.addWalls(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            vertices,\n                            indices\n                        );\n                    }\n                } catch (err) {\n                    logger.error(`cannot triangulate geometry`, err);\n                }\n            }\n\n            if (this.m_gatherFeatureAttributes) {\n                meshBuffers.objInfos.push(context.env.entries);\n                meshBuffers.featureStarts.push(startIndexCount);\n            }\n\n            const count = indices.length - startIndexCount;\n            if (count > 0) {\n                groups.push({\n                    start: startIndexCount,\n                    count,\n                    technique: techniqueIndex,\n                    featureId\n                });\n            }\n        }\n    }\n\n    private createGeometries() {\n        this.m_meshBuffers.forEach((meshBuffers, techniqueIdx) => {\n            if (meshBuffers.positions.length === 0) {\n                return;\n            } // nothing to do\n\n            if (\n                !this.m_styleSetEvaluator.techniques ||\n                this.m_styleSetEvaluator.techniques.length <= techniqueIdx\n            ) {\n                throw new Error(\"Invalid technique index\");\n            }\n\n            const technique = this.m_styleSetEvaluator.techniques[techniqueIdx];\n            if (technique === undefined) {\n                return;\n            }\n\n            const positionElements = new Float32Array(meshBuffers.positions);\n\n            if (meshBuffers.texts.length > 0 && isTextTechnique(technique)) {\n                this.m_textGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.texts.length > 0 && isPoiTechnique(technique)) {\n                this.m_poiGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    imageTextures: meshBuffers.imageTextures,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.groups.length === 0) {\n                // create a default group containing all the vertices in the position attribute.\n\n                meshBuffers.groups.push({\n                    start: 0,\n                    count: positionElements.length / 3,\n                    technique: techniqueIdx\n                });\n            }\n\n            const geometry: Geometry = {\n                type: meshBuffers.type,\n                vertexAttributes: [\n                    {\n                        name: \"position\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3,\n                        type: \"float\"\n                    }\n                ],\n                groups: meshBuffers.groups\n            };\n\n            if (meshBuffers.normals.length > 0) {\n                const normals = new Float32Array(meshBuffers.normals);\n                assert(\n                    normals.length === positionElements.length,\n                    \"length of normals buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                geometry.vertexAttributes.push({\n                    name: \"normal\",\n                    buffer: normals.buffer as ArrayBuffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.colors.length > 0) {\n                const colors = new Float32Array(meshBuffers.colors);\n                assert(\n                    colors.length === positionElements.length,\n                    \"length of colors buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                geometry.vertexAttributes.push({\n                    name: \"color\",\n                    buffer: colors.buffer as ArrayBuffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.textureCoordinates.length > 0) {\n                const positionCount = meshBuffers.positions.length / 3;\n                const texCoordCount = meshBuffers.textureCoordinates.length / 2;\n                assert(\n                    texCoordCount === positionCount,\n                    \"length of textureCoordinates buffer is different than the length of the\" +\n                        \"position buffer\"\n                );\n\n                const textureCoordinates = new Float32Array(meshBuffers.textureCoordinates);\n                geometry.vertexAttributes.push({\n                    name: \"uv\",\n                    buffer: textureCoordinates.buffer as ArrayBuffer,\n                    itemCount: 2,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.extrusionAxis.length > 0) {\n                const extrusionAxis = new Float32Array(meshBuffers.extrusionAxis);\n                assert(\n                    extrusionAxis.length / 4 === positionElements.length / 3,\n                    \"length of extrusionAxis buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                geometry.vertexAttributes.push({\n                    name: \"extrusionAxis\",\n                    buffer: extrusionAxis.buffer as ArrayBuffer,\n                    itemCount: 4,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.indices.length > 0) {\n                // TODO: use uint16 for buffers when possible\n                geometry.index = {\n                    name: \"index\",\n                    buffer: new Uint32Array(meshBuffers.indices).buffer as ArrayBuffer,\n                    itemCount: 1,\n                    type: \"uint32\"\n                };\n            }\n\n            if (meshBuffers.edgeIndices.length > 0) {\n                // TODO: use uint16 for buffers when possible. Issue HARP-3987\n                geometry.edgeIndex = {\n                    name: \"edgeIndex\",\n                    buffer: new Uint32Array(meshBuffers.edgeIndices as number[])\n                        .buffer as ArrayBuffer,\n                    itemCount: 1,\n                    type: \"uint32\"\n                };\n            }\n\n            geometry.featureStarts = meshBuffers.featureStarts;\n            geometry.objInfos = meshBuffers.objInfos;\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const renderOrderOffset = linesGeometry.renderOrderOffset;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = new Uint32Array(indices).buffer as ArrayBuffer;\n            const attr: InterleavedBufferAttribute = {\n                type: \"float\",\n                stride: linesGeometry.lines.stride,\n                buffer,\n                attributes: linesGeometry.lines.vertexAttributes\n            };\n            const geometry: Geometry = {\n                type: GeometryType.SolidLine,\n                index: {\n                    buffer: index,\n                    itemCount: 1,\n                    type: \"uint32\",\n                    name: \"index\"\n                },\n                interleavedVertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique, renderOrderOffset }],\n                vertexAttributes: [],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processSimpleLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const renderOrderOffset = linesGeometry.renderOrderOffset;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = new Uint32Array(indices).buffer as ArrayBuffer;\n            const attr: BufferAttribute = {\n                buffer,\n                itemCount: 3,\n                type: \"float\",\n                name: \"position\"\n            };\n            const geometry: Geometry = {\n                type: GeometryType.Line,\n                index: {\n                    buffer: index,\n                    itemCount: 1,\n                    type: \"uint32\",\n                    name: \"index\"\n                },\n                vertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique, renderOrderOffset }],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private findOrCreateMeshBuffers(index: number, type: GeometryType): MeshBuffers | undefined {\n        let buffers = this.m_meshBuffers.get(index);\n\n        if (buffers !== undefined) {\n            if (buffers.type !== type) {\n                logger.error(`MeshBuffer has been created with wrong type \"${GeometryType[type]}\"\n                instead of \"${GeometryType[buffers.type]}\"`);\n                return undefined;\n            }\n            return buffers;\n        }\n        buffers = new MeshBuffers(type);\n        this.m_meshBuffers.set(index, buffers);\n        return buffers;\n    }\n\n    private processFeatureCommon(env: Env) {\n        const source = env.lookup(\"source\");\n        if (typeof source === \"string\" && source !== \"\") {\n            if (!this.m_sources.includes(source)) {\n                this.m_sources.push(source);\n            }\n        }\n    }\n\n    private isColorStringValid(color: Value | undefined): color is string {\n        return typeof color === \"string\" && color.length > 0;\n    }\n\n    private addEdges(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        positions: number[],\n        vertices: number[],\n        indices: number[],\n        isExtruded: boolean,\n        hasFootprint?: boolean,\n        maxSlope?: number\n    ) {\n        const tmpEdgeA = new THREE.Vector3();\n        const tmpEdgeB = new THREE.Vector3();\n        let firstRingVertex: number | undefined;\n        let prevRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    if (!isExtruded) {\n                        indices.push(\n                            featureBaseVertex + currRingVertex,\n                            featureBaseVertex + nextRingVertex\n                        );\n                    } else {\n                        if (hasFootprint === true) {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + nextRingVertex * 2\n                            );\n                        }\n                        indices.push(\n                            featureBaseVertex + currRingVertex * 2 + 1,\n                            featureBaseVertex + nextRingVertex * 2 + 1\n                        );\n\n                        if (maxSlope !== undefined) {\n                            if (prevRingVertex !== undefined) {\n                                const prevPos = (featureBaseVertex + prevRingVertex * 2) * 3;\n                                const currPos = (featureBaseVertex + currRingVertex * 2) * 3;\n                                const nextPos = (featureBaseVertex + nextRingVertex * 2) * 3;\n                                tmpEdgeA\n                                    .set(\n                                        positions[currPos] - positions[prevPos],\n                                        positions[currPos + 1] - positions[prevPos + 1],\n                                        positions[currPos + 2] - positions[prevPos + 2]\n                                    )\n                                    .normalize();\n                                tmpEdgeB\n                                    .set(\n                                        positions[nextPos] - positions[currPos],\n                                        positions[nextPos + 1] - positions[currPos + 1],\n                                        positions[nextPos + 2] - positions[currPos + 2]\n                                    )\n                                    .normalize();\n                                if (tmpEdgeA.dot(tmpEdgeB) <= maxSlope) {\n                                    indices.push(\n                                        featureBaseVertex + currRingVertex * 2,\n                                        featureBaseVertex + currRingVertex * 2 + 1\n                                    );\n                                }\n                            }\n                        } else {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + currRingVertex * 2 + 1\n                            );\n                        }\n                    }\n                    prevRingVertex = currRingVertex;\n                    currRingVertex = nextRingVertex;\n                }\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n            prevRingVertex = undefined;\n        }\n    }\n\n    private addWalls(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        vertices: number[],\n        indices: number[]\n    ) {\n        let firstRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride + 1];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    indices.push(\n                        featureBaseVertex + currRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2\n                    );\n                }\n                currRingVertex = nextRingVertex;\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n        }\n    }\n\n    private findRelativePositionInLine(p: THREE.Vector3, line: number[]): number {\n        let lineDist = Infinity;\n        let lineOffset = 0;\n        for (let i = 0; i < line.length; i += 4) {\n            // Find the closest point C in segment AB to point P.\n            tmpLine.set(\n                tmpPointA.set(line[i], line[i + 1], line[i + 2]),\n                tmpPointB.set(line[i + 4], line[i + 5], line[i + 6])\n            );\n            tmpLine.closestPointToPoint(p, true, tmpPointC);\n\n            // If P is in AB (or really close), save A as anchor point and C (to estimate distance\n            // from segment origin).\n            const dist = tmpPointC.distanceTo(p);\n            if (dist < lineDist) {\n                tmpPointD.copy(tmpPointC);\n                tmpPointE.copy(tmpPointA);\n                lineDist = dist;\n                lineOffset = line[i + 3];\n            }\n        }\n        // Return the relative position of P inside the line.\n        return lineOffset + tmpPointD.distanceTo(tmpPointE);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// Preallocate temp variables used during line generation.\nconst tmpV = new THREE.Vector3();\nconst tmpNormal = new THREE.Vector3();\nconst tmpTangent0 = new THREE.Vector3();\nconst tmpTangent1 = new THREE.Vector3();\nconst tmpBitangent = new THREE.Vector3();\nconst SEGMENT_OFFSET = 0.1;\n\n/**\n * Describes vertex attribute parameters of interleaved buffer.\n */\ninterface VertexAttributeDescriptor {\n    name: string;\n    itemSize: number;\n    offset: number;\n}\n\ninterface VertexDescriptor {\n    attributes: VertexAttributeDescriptor[];\n    stride: number;\n}\n\n/**\n * Declares all the vertex attributes used for rendering a line using the [[SolidLineMaterial]].\n */\n\n/** Base line vertex attributes. */\nconst LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        // The \"extrusionCoord\" is a vec4 which represents:\n        // xy: Extrusion coordinates\n        // sign(xy): Extrusion direction\n        // z: Line length\n        { name: \"extrusionCoord\", itemSize: 3, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 3 },\n        { name: \"tangent\", itemSize: 3, offset: 6 },\n        { name: \"bitangent\", itemSize: 4, offset: 9 }\n    ],\n    stride: 13\n};\n\n/** Optional normal and uv coordinates. */\nconst NORMAL_UV_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"uv\", itemSize: 2, offset: LINE_VERTEX_ATTRIBUTES.stride },\n        { name: \"normal\", itemSize: 3, offset: LINE_VERTEX_ATTRIBUTES.stride + 2 }\n    ],\n    stride: 5\n};\n\n/** Base line vertex attributes plus normals and uv coordinates. */\nconst LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [...LINE_VERTEX_ATTRIBUTES.attributes, ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes],\n    stride: LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Declares all the vertex attributes used for rendering a line using the\n * [[HighPrecisionLineMaterial]].\n */\nconst HP_LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"extrusionCoord\", itemSize: 2, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 2 },\n        { name: \"positionLow\", itemSize: 3, offset: 5 },\n        { name: \"tangent\", itemSize: 3, offset: 8 },\n        { name: \"bitangent\", itemSize: 4, offset: 11 }\n    ],\n    stride: 15\n};\n\n/** High precision line vertex attributes plus normals and uv coordinates. */\nconst HP_LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [\n        ...HP_LINE_VERTEX_ATTRIBUTES.attributes,\n        ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes\n    ],\n    stride: HP_LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Class that holds the vertex and index attributes for a [[Lines]] object.\n */\nexport class LineGeometry {\n    vertices: number[] = [];\n    vertexColors: number[] = [];\n    indices: number[] = [];\n}\n\nfunction getVertexDescriptor(hasNormalsAndUvs: boolean, highPrecision: boolean): VertexDescriptor {\n    if (highPrecision) {\n        return hasNormalsAndUvs ? HP_LINE_VERTEX_ATTRIBUTES_NUV : HP_LINE_VERTEX_ATTRIBUTES;\n    } else {\n        return hasNormalsAndUvs ? LINE_VERTEX_ATTRIBUTES_NUV : LINE_VERTEX_ATTRIBUTES;\n    }\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param center Center of the polyline.\n * @param polyline Array of `numbers` describing a polyline.\n * @param offsets Array of `numbers` representing line segment offsets.\n * @param uvs Array of `numbers` representing texture coordinates.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n * @param highPrecision If `true` will create high-precision vertex information.\n */\nexport function createLineGeometry(\n    center: THREE.Vector3,\n    polyline: ArrayLike<number>,\n    offsets?: ArrayLike<number>,\n    uvs?: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry(),\n    highPrecision: boolean = false\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const stride = getVertexDescriptor(uvs !== undefined, highPrecision).stride;\n\n    const pointCount = polyline.length / 3;\n    const segments = new Array<number>(pointCount);\n    const tangents = new Array<number>(polyline.length - 3);\n    const baseVertex = geometry.vertices.length / stride;\n\n    const hasSegmentOffsets = offsets !== undefined && offsets.length > 0;\n    const hasTexCoords = uvs !== undefined && uvs.length > 0;\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    assert(!hasSegmentOffsets || offsets!.length === pointCount);\n    assert(!hasTexCoords || uvs!.length / 2 === pointCount);\n    assert(!vertexColors || colors!.length === polyline.length);\n\n    // Compute segments and tangents.\n    let sum = SEGMENT_OFFSET;\n    segments[0] = sum;\n    let isFlat = true;\n    for (let i = 0; i < pointCount - 1; ++i) {\n        let sqrLength = 0;\n        for (let j = 0; j < 3; ++j) {\n            const d = polyline[(i + 1) * 3 + j] - polyline[i * 3 + j];\n            tangents[i * 3 + j] = d;\n            sqrLength += d * d;\n            isFlat = j === 2 ? isFlat && polyline[(i + 1) * 3 + j] === 0.0 : isFlat;\n        }\n        const len = Math.sqrt(sqrLength);\n        sum = sum + len;\n        segments[i + 1] = sum;\n    }\n\n    const lineCoverage = hasSegmentOffsets\n        ? Math.abs(offsets![offsets!.length - 1] - offsets![0])\n        : 1.0;\n    const lineLength = segments[segments.length - 1] / lineCoverage;\n\n    // Override the segments if offsets are explicitly provided.\n    if (hasSegmentOffsets) {\n        for (let i = 0; i < pointCount; ++i) {\n            segments[i] = offsets![i] * lineLength + SEGMENT_OFFSET;\n        }\n    }\n\n    // Check if we're working with a closed line.\n    let isClosed = true;\n    for (let j = 0; j < 3; ++j) {\n        isClosed = isClosed && polyline[j] === polyline[polyline.length - 3 + j];\n    }\n\n    const tmpVertices: number[] = [];\n\n    const addVertexPair = (\n        i: number,\n        T1: number,\n        T2: number,\n        segment: number,\n        extrusionCoord: number\n    ) => {\n        tmpVertices.length = 0;\n\n        // Store the segment and extrusionCoord attributes.\n        geometry.vertices.push(segment, extrusionCoord * -1, lineLength);\n        tmpVertices.push(segment, extrusionCoord * 1, lineLength);\n\n        // Store the position attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            if (!highPrecision) {\n                geometry.vertices.push(polyline[i * 3 + j]);\n                tmpVertices.push(polyline[i * 3 + j]);\n            } else {\n                const highComp = Math.fround(polyline[i * 3 + j]);\n                const lowComp = polyline[i * 3 + j] - highComp;\n                geometry.vertices.push(highComp, lowComp);\n                tmpVertices.push(highComp, lowComp);\n            }\n            tmpNormal.setComponent(j, polyline[i * 3 + j]);\n        }\n\n        // Store the bitangent attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            tmpTangent0.setComponent(j, tangents[T1 + j]);\n            tmpTangent1.setComponent(j, tangents[T2 + j]);\n        }\n        tmpTangent0.normalize();\n        geometry.vertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpVertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        const angle = computeBitangent(\n            isFlat ? tmpNormal.set(0, 0, 1) : tmpNormal.add(center).normalize(),\n            tmpTangent0,\n            tmpTangent1.normalize(),\n            tmpBitangent\n        );\n        geometry.vertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n        tmpVertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n\n        if (hasTexCoords) {\n            // uvs\n            geometry.vertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            tmpVertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            // normals\n            geometry.vertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n            tmpVertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n        }\n\n        geometry.vertices.push(...tmpVertices);\n\n        // Add vertex colors (if supplied).\n        if (vertexColors) {\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n        }\n    };\n\n    for (let i = 0; i < pointCount; ++i) {\n        // Retrieve the per-point tangents.\n        const T1 = isClosed && i === 0 ? tangents.length - 3 : Math.max(0, i - 1) * 3;\n        const T2 = isClosed && i === pointCount - 1 ? 0 : Math.min(i * 3, tangents.length - 3);\n\n        // Process v0 and v1.\n        if (i > 0) {\n            addVertexPair(i, T1, T2, segments[i - 1], segments[i]);\n        }\n\n        // Process v2 and v3.\n        if (i + 1 < pointCount) {\n            addVertexPair(\n                i,\n                T1,\n                T2,\n                segments[Math.min(i, segments.length - 1)] * -1,\n                segments[Math.min(i + 1, segments.length - 1)]\n            );\n        }\n    }\n\n    // Store the triangle indices in the final index buffer.\n    for (let i = 0; i < pointCount - 1; ++i) {\n        const base = baseVertex + i * 4;\n        geometry.indices.push(base, base + 1, base + 2, base + 2, base + 1, base + 3);\n    }\n\n    return geometry;\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param polyline Array of `numbers` describing a polyline.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n */\nexport function createSimpleLineGeometry(\n    polyline: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry()\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const pointCount = polyline.length / 3;\n    let index = geometry.vertices.length / 3;\n\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    for (let i = 0; i < pointCount; ++i, index++) {\n        if (i > 0) {\n            geometry.indices.push(index);\n        }\n        if (i < pointCount - 1) {\n            geometry.indices.push(index);\n        }\n        for (let j = 0; j < 3; ++j) {\n            geometry.vertices.push(polyline[i * 3 + j]);\n            if (vertexColors) {\n                geometry.vertexColors.push(colors![i * 3 + j]);\n            }\n        }\n    }\n\n    return geometry;\n}\n\n/**\n * Class used to render groups (or batches) of width-variable lines (in the same tile).\n */\nexport class LineGroup {\n    /**\n     * Adds all the attribute data needed to a [[BufferGeometry]] object for rendering `Lines`.\n     *\n     * @param vertices Array of vertex attributes.\n     * @param colors Array of vertex colors.\n     * @param indices Array of vertex indices.\n     * @param geometry [[BufferGeometry]] object which will store all the `Lines` attribute data.\n     * @param hasNormalsAnUvs Whether vertices have normal and uv coordinates as attributes.\n     * @param highPrecision If `true` will create high-precision vertex information.\n     * @param isSimple `true` to create simple (nonsolid, nonextruded) lines. Defaults to `false`.\n     */\n    static createGeometry(\n        vertices: ArrayLike<number>,\n        colors: ArrayLike<number>,\n        indices: ArrayLike<number>,\n        geometry: THREE.BufferGeometry,\n        hasNormalsAndUvs: boolean = false,\n        highPrecision = false,\n        isSimple = false\n    ): THREE.BufferGeometry {\n        if (isSimple) {\n            geometry.setAttribute(\n                \"position\",\n                new THREE.BufferAttribute(new Float32Array(vertices), 3)\n            );\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n            return geometry;\n        } else {\n            const vertexDescriptor = getVertexDescriptor(hasNormalsAndUvs, highPrecision);\n\n            const buffer = new THREE.InterleavedBuffer(\n                new Float32Array(vertices),\n                vertexDescriptor.stride\n            );\n            vertexDescriptor.attributes.forEach(descr => {\n                const attribute = new THREE.InterleavedBufferAttribute(\n                    buffer,\n                    descr.itemSize,\n                    descr.offset,\n                    false\n                );\n                geometry.setAttribute(descr.name, attribute);\n            });\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n            return geometry;\n        }\n    }\n\n    private readonly m_geometry: LineGeometry;\n\n    constructor(\n        readonly hasNormalsAndUvs: boolean = false,\n        readonly highPrecision: boolean = false,\n        readonly isSimple: boolean = false\n    ) {\n        this.m_geometry = new LineGeometry();\n    }\n\n    /**\n     * Clears the list of line strips.\n     */\n    clear() {\n        this.m_geometry.vertices = [];\n        this.m_geometry.vertexColors = [];\n        this.m_geometry.indices = [];\n    }\n\n    /**\n     * Add the given points to this line group.\n     *\n     * @param center World center of the provided points.\n     * @param points Sequence of (x,y,z) coordinates.\n     * @param offsets Sequence of line segment offsets.\n     * @param uvs Sequence of (u,v) texture coordinates.\n     * @param colors Sequence of (r,g,b) color components.\n     */\n    add(\n        center: THREE.Vector3,\n        points: ArrayLike<number>,\n        offsets?: ArrayLike<number>,\n        uvs?: ArrayLike<number>,\n        colors?: ArrayLike<number>\n    ): this {\n        if (!this.isSimple) {\n            assert(!this.hasNormalsAndUvs || uvs !== undefined);\n            createLineGeometry(\n                center,\n                points,\n                offsets,\n                uvs,\n                colors,\n                this.m_geometry,\n                this.highPrecision\n            );\n        } else {\n            createSimpleLineGeometry(points, colors, this.m_geometry);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the list of vertices.\n     */\n    get vertices(): number[] {\n        return this.m_geometry.vertices;\n    }\n\n    /**\n     * Returns the list of vertex colors.\n     */\n    get vertexColors(): number[] {\n        return this.m_geometry.vertexColors;\n    }\n\n    /**\n     * Returns the list of indices.\n     */\n    get indices(): number[] {\n        return this.m_geometry.indices;\n    }\n\n    /**\n     * Returns the list of [[VertexAttributeDescriptor]]s.\n     */\n    get vertexAttributes(): VertexAttributeDescriptor[] {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).attributes;\n    }\n\n    /**\n     * Returns the vertex attribute stride.\n     */\n    get stride(): number {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).stride;\n    }\n\n    /**\n     * Creates a three.js geometry.\n     */\n    createGeometry(geometry?: THREE.BufferGeometry): THREE.BufferGeometry {\n        if (geometry === undefined) {\n            geometry = new THREE.BufferGeometry();\n        }\n        return LineGroup.createGeometry(\n            this.m_geometry.vertices,\n            this.m_geometry.vertexColors,\n            this.m_geometry.indices,\n            geometry,\n            this.hasNormalsAndUvs,\n            this.highPrecision\n        );\n    }\n}\n\nfunction computeBitangent(\n    n: THREE.Vector3,\n    t0: THREE.Vector3,\n    t1: THREE.Vector3,\n    bt: THREE.Vector3\n): number {\n    let angle = 0;\n    if (!t0.equals(t1)) {\n        angle = Math.acos(t0.dot(t1)) * Math.sign(n.dot(tmpV.copy(t0).cross(t1)));\n        if (Number.isNaN(angle)) {\n            angle = 0;\n        }\n    }\n    bt.copy(t0)\n        .add(t1)\n        .normalize()\n        .cross(n)\n        .normalize();\n    return angle;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst POINTS = [0, 1, 2, 1, 3, 2];\nconst BEVEL_POINTS = [0, 1, 3, 3, 1, 2, 0, 3, 4, 5, 4, 3];\n\nconst SECTORS_IN_CIRCLE = 8;\nconst STEP = Math.PI / SECTORS_IN_CIRCLE;\n\n/**\n * Adds a half-circle geometry to original line\n *\n * @param x The line end X (used as circle center X)\n * @param y The line end Y (used as circle center Y)\n * @param lineAngle The cap incline angle\n * @param radius The cap (circle) radius\n * @param vertices The input vertex buffer (cap vertices are added there)\n * @param indices The input index buffer (cap indices are is added there)\n */\nfunction addCircle(\n    x: number,\n    y: number,\n    lineAngle: number,\n    radius: number,\n    vertices: number[],\n    indices: number[]\n) {\n    const baseVertex = vertices.length / 3;\n\n    // Add cap center to vertices directly (it doesn't need rotation)\n    vertices.push(x, y, 0);\n\n    for (let i = 0; i < SECTORS_IN_CIRCLE + 1; ++i) {\n        const angle = STEP * i + Math.PI / 2 + lineAngle; // Start angle is -90deg\n        vertices.push(x + radius * Math.cos(angle), y + radius * Math.sin(angle), 0);\n\n        indices.push(\n            baseVertex,\n            baseVertex + i + 1,\n            baseVertex + ((i + 1) % (SECTORS_IN_CIRCLE + 1)) + 1\n        );\n    }\n}\n\n/**\n * Returns the number of points in circle used for caps.\n *\n * @param lineWidth Width of line.\n */\n// tslint:disable-next-line:no-unused-variable\nexport function numCirclePoints(lineWidth: number): number {\n    return SECTORS_IN_CIRCLE + 1;\n}\n\n/**\n * Create a triangle mesh from the given polyline.\n *\n * @param points Sequence of (x,y,z) coordinates.\n * @param width The width of the extruded line.\n * @param vertices The output vertex buffer.\n * @param indices The output index buffer.\n * @param startWithCircle `true` if the line should start will a circle.\n * @param endWithCircle `true` if the line should end with a circle.\n */\nexport function triangulateLine(\n    points: ArrayLike<number>,\n    width: number,\n    vertices: number[],\n    indices: number[],\n    startWithCircle = true,\n    endWithCircle = startWithCircle\n) {\n    if (points.length < 3) {\n        return;\n    }\n\n    // This vector is used for computing cap angle\n    const angleVec = new THREE.Vector2();\n\n    if (startWithCircle) {\n        // Define lineAngle as (direction - origin) vector angle to X axis\n        const lineAngle =\n            points.length !== 3\n                ? angleVec.set(points[3] - points[0], points[4] - points[1]).angle()\n                : 0;\n\n        addCircle(points[0], points[1], lineAngle, width, vertices, indices);\n    }\n\n    const baseVertex = vertices.length / 3;\n\n    // bt = Bitangent (i.e. extrusion vector)\n    const prevBt = new THREE.Vector3();\n    const p = new THREE.Vector3(); // current point\n    const n = new THREE.Vector3(); // next point\n    const bt = new THREE.Vector3();\n    const averageBt = new THREE.Vector3();\n    const p0 = new THREE.Vector3();\n    const p1 = new THREE.Vector3();\n    const p2 = new THREE.Vector3();\n    const p3 = new THREE.Vector3();\n\n    const N = points.length / 3;\n\n    let vertexOffset = 0;\n    for (let i = 0; i < N; ++i) {\n        let useBevel = false;\n        p.set(points[i * 3], points[i * 3 + 1], points[i * 3 + 2]);\n\n        if (i + 1 < N) {\n            n.set(points[(i + 1) * 3], points[(i + 1) * 3 + 1], points[(i + 1) * 3 + 2]);\n\n            bt.copy(n)\n                .sub(p)\n                .normalize()\n                .cross(UNIT_Z);\n\n            averageBt.copy(bt);\n\n            if (i > 0) {\n                averageBt.add(prevBt).multiplyScalar(1.0 - 0.5 * bt.dot(prevBt));\n\n                useBevel = prevBt.angleTo(bt) > Math.PI / 2;\n\n                if (useBevel) {\n                    const inclineWidth = width / Math.cos(bt.angleTo(prevBt) / 2);\n\n                    p0.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(-inclineWidth)\n                        .add(p);\n\n                    p1.copy(prevBt)\n                        .multiplyScalar(width)\n                        .add(p);\n\n                    // p2 is used for \"miter\" connections\n                    p2.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(inclineWidth)\n                        .add(p);\n\n                    p3.copy(bt)\n                        .multiplyScalar(width)\n                        .add(p);\n                }\n            }\n\n            if (useBevel) {\n                vertices.push(\n                    p0.x,\n                    p0.y,\n                    p0.z,\n                    p1.x,\n                    p1.y,\n                    p1.z,\n                    p2.x,\n                    p2.y,\n                    p2.z,\n                    p3.x,\n                    p3.y,\n                    p3.z\n                );\n            } else {\n                p0.copy(averageBt)\n                    .multiplyScalar(-width)\n                    .add(p);\n\n                p1.copy(averageBt)\n                    .multiplyScalar(width)\n                    .add(p);\n\n                vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n            }\n\n            prevBt.copy(bt);\n        } else {\n            p0.copy(prevBt)\n                .multiplyScalar(-width)\n                .add(p);\n\n            p1.copy(prevBt)\n                .multiplyScalar(width)\n                .add(p);\n\n            vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n        }\n\n        if (i !== N - 1) {\n            (useBevel ? BEVEL_POINTS : POINTS).forEach(o =>\n                indices.push(baseVertex + vertexOffset + o)\n            );\n            vertexOffset += useBevel ? 4 : 2;\n        }\n    }\n\n    if (endWithCircle) {\n        const lineAngle =\n            points.length !== 2\n                ? angleVec\n                      .set(\n                          points[(N - 3) * 3] - points[(N - 2) * 3],\n                          points[(N - 3) * 3 + 1] - points[(N - 2) * 3 + 1]\n                      )\n                      .angle()\n                : Math.PI;\n\n        addCircle(\n            points[(N - 2) * 3],\n            points[(N - 2) * 3 + 1],\n            lineAngle,\n            width,\n            vertices,\n            indices\n        );\n    }\n}\n\n/**\n * Reconstruct the original points of a line from the vertices of the triangulated line.\n *\n * @param inBuffer Buffer with vertices.\n * @param startOffset Start index, will differ from `0` if the line has caps.\n * @returns Buffer containing the original points of the triangulated line.\n */\nexport function reconstructLine(inBuffer: Float32Array, startOffset: number): Float32Array {\n    const outBuffer = new Float32Array(inBuffer.length / 2);\n\n    for (let i = startOffset * 3, i2 = i * 2; i < outBuffer.length; i += 3, i2 += 6) {\n        outBuffer[i] = inBuffer[i2] + (inBuffer[i2 + 3] - inBuffer[i2]) * 0.5;\n        outBuffer[i + 1] = inBuffer[i2 + 1] + (inBuffer[i2 + 3 + 1] - inBuffer[i2 + 1]) * 0.5;\n        outBuffer[i + 2] = inBuffer[i2 + 2] + (inBuffer[i2 + 3 + 2] - inBuffer[i2 + 2]) * 0.5;\n    }\n    return outBuffer;\n}\n\n/**\n * Extract the line width from a triangulated line.\n *\n * @param inBuffer Array of vertex elements of a triangulated line.\n * @param startIndex Start index, will differ from `0` if the line has caps.\n */\nexport function reconstructLineWidth(inBuffer: Float32Array, startIndex: number): number {\n    const xd = inBuffer[startIndex * 2 + 3] - inBuffer[startIndex * 2];\n    const yd = inBuffer[startIndex * 2 + 3 + 1] - inBuffer[startIndex * 2 + 1];\n    const zd = inBuffer[startIndex * 2 + 3 + 2] - inBuffer[startIndex * 2 + 2];\n\n    return Math.sqrt(xd * xd + yd * yd + zd * zd) * 0.5;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection, sphereProjection } from \"@here/harp-geoutils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3(), new Vector3()];\n\n/**\n * The [[SphericalGeometrySubdivisionModifier]] subdivides triangle mesh geometries positioned\n * on the surface of a sphere centered at `(0, 0, 0)`.\n */\nexport class SphericalGeometrySubdivisionModifier extends SubdivisionModifier {\n    /**\n     * Constructs a new [[SphericalGeometrySubdivisionModifier]].\n     *\n     * @param angle The maximum angle in radians between two vertices and the origin.\n     * @param projection The projection that defines the world space of this geometry.\n     */\n    constructor(readonly angle: number, readonly projection: Projection = sphereProjection) {\n        super();\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const aa = sphereProjection.reprojectPoint(this.projection, a, VERTEX_POSITION_CACHE[0]);\n        const bb = sphereProjection.reprojectPoint(this.projection, b, VERTEX_POSITION_CACHE[1]);\n        const cc = sphereProjection.reprojectPoint(this.projection, c, VERTEX_POSITION_CACHE[2]);\n\n        const alpha = aa.angleTo(bb);\n        const beta = bb.angleTo(cc);\n        const gamma = cc.angleTo(aa);\n\n        // find the maximum angle\n        const m = Math.max(alpha, Math.max(beta, gamma));\n\n        // split the triangle if needed.\n        if (m < this.angle) {\n            return undefined;\n        }\n\n        if (m === alpha) {\n            return 0;\n        } else if (m === beta) {\n            return 1;\n        } else if (m === gamma) {\n            return 2;\n        }\n\n        throw new Error(\"failed to split triangle\");\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BufferAttribute, BufferGeometry, Vector3 } from \"three\";\n\nconst tmpVectorA = new Vector3();\nconst tmpVectorB = new Vector3();\nconst tmpVectorC = new Vector3();\n\n/**\n * The [[SubdivisionModifier]] subdivides triangle mesh geometries.\n */\nexport abstract class SubdivisionModifier {\n    /**\n     * Constructs a new [[SubdivisionModifier]].\n     */\n    constructor() {\n        // nothing to do\n    }\n\n    /**\n     * Subdivides the faces of the given [[THREE.BufferGeometry]].\n     *\n     * This method modifies (in-place) the vertices and the faces of the geometry.\n     * Please note that only the vertex position and their UV coordinates are subdivided.\n     * Normals, vertex colors and other attributes are left unmodified.\n     *\n     * @param geometry The [[THREE.BufferGeometry]] to subdivide.\n     */\n    modify(geometry: BufferGeometry): BufferGeometry {\n        const positionAttr = geometry.getAttribute(\"position\") as BufferAttribute;\n        const position = Array.from(positionAttr.array);\n\n        const uvAttr = geometry.getAttribute(\"uv\") as BufferAttribute;\n        const uv = uvAttr !== undefined ? Array.from(uvAttr.array) : undefined;\n\n        const edgeAttr = geometry.getAttribute(\"edge\") as BufferAttribute;\n        const edge = edgeAttr !== undefined ? Array.from(edgeAttr.array) : undefined;\n\n        const wallAttr = geometry.getAttribute(\"wall\") as BufferAttribute;\n        const wall = wallAttr !== undefined ? Array.from(wallAttr.array) : undefined;\n\n        const indexAttr = geometry.getIndex() as BufferAttribute;\n        const indices = Array.from(indexAttr.array);\n\n        // A cache containing the indices of the vertices added\n        // when subdiving the faces of the geometry.\n        const cache = new Map<string, number>();\n\n        /**\n         * Returns the index of the vertex positioned in the middle of the given vertices.\n         */\n        function middleVertex(i: number, j: number): number {\n            // Build a unique `key` for the pair of indices `(i, j)`.\n            const key = `${Math.min(i, j)}_${Math.max(i, j)}`;\n\n            const h = cache.get(key);\n\n            if (h !== undefined) {\n                // Nothing to do, a vertex in the middle of (i, j) was already created.\n                return h;\n            }\n\n            // The position of the new vertex.\n            tmpVectorA.set(position[i * 3], position[i * 3 + 1], position[i * 3 + 2]);\n            tmpVectorB.set(position[j * 3], position[j * 3 + 1], position[j * 3 + 2]);\n            tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n\n            // The index of the new vertex.\n            const index = position.length / 3;\n            position.push(...tmpVectorC.toArray());\n            // Cache the position of the new vertex.\n            cache.set(key, index);\n\n            // The uvs of the new vertex.\n            if (uv !== undefined) {\n                tmpVectorA.set(uv[i * 2], uv[i * 2 + 1], 0);\n                tmpVectorB.set(uv[j * 2], uv[j * 2 + 1], 0);\n                tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n                uv.push(tmpVectorC.x, tmpVectorC.y);\n            }\n\n            // The edge and wall attributes of the new vertex.\n            // If a new vertex has been introduced between i and j, connect the elements\n            // accordingly.\n            if (edge !== undefined) {\n                if (edge[i] === j) {\n                    edge.push(j);\n                    edge[i] = index;\n                } else if (edge[j] === i) {\n                    edge.push(i);\n                    edge[j] = index;\n                } else {\n                    edge.push(-1);\n                }\n            }\n            if (wall !== undefined) {\n                if (wall[i] === j) {\n                    wall.push(j);\n                    wall[i] = index;\n                } else if (wall[j] === i) {\n                    wall.push(i);\n                    wall[j] = index;\n                } else {\n                    wall.push(-1);\n                }\n            }\n\n            return index;\n        }\n\n        const newIndices = [];\n        while (indices.length >= 3) {\n            const v0 = indices.shift()!;\n            const v1 = indices.shift()!;\n            const v2 = indices.shift()!;\n\n            tmpVectorA.set(position[v0 * 3], position[v0 * 3 + 1], position[v0 * 3 + 2]);\n            tmpVectorB.set(position[v1 * 3], position[v1 * 3 + 1], position[v1 * 3 + 2]);\n            tmpVectorC.set(position[v2 * 3], position[v2 * 3 + 1], position[v2 * 3 + 2]);\n\n            const edgeToSplit = this.shouldSplitTriangle(tmpVectorA, tmpVectorB, tmpVectorC);\n\n            switch (edgeToSplit) {\n                case 0: {\n                    const v3 = middleVertex(v0, v1);\n                    indices.push(v0, v3, v2, v3, v1, v2);\n                    break;\n                }\n\n                case 1: {\n                    const v3 = middleVertex(v1, v2);\n                    indices.push(v0, v1, v3, v0, v3, v2);\n                    break;\n                }\n\n                case 2: {\n                    const v3 = middleVertex(v2, v0);\n                    indices.push(v0, v1, v3, v3, v1, v2);\n                    break;\n                }\n\n                case undefined: {\n                    newIndices.push(v0, v1, v2);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"failed to subdivide the given geometry\");\n            }\n        }\n\n        positionAttr.array = new Float32Array(position);\n        positionAttr.count = position.length / positionAttr.itemSize;\n        positionAttr.needsUpdate = true;\n\n        geometry.setIndex(newIndices);\n\n        if (uv !== undefined) {\n            uvAttr.array = new Float32Array(uv);\n            uvAttr.count = uv.length / uvAttr.itemSize;\n            uvAttr.needsUpdate = true;\n        }\n\n        if (edge !== undefined) {\n            edgeAttr.array = new Float32Array(edge);\n            edgeAttr.count = edge.length / edgeAttr.itemSize;\n            edgeAttr.needsUpdate = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * Returns if the given triangle should be subdivide.\n     *\n     * Implementations of this function should return the index of\n     * the edge of the triangle to split (0, 1, or 2) or undefined if\n     * the triangle doesn't need to be subdivided.\n     *\n     * @param a The position of the first vertex of the triangle.\n     * @param b The position of the second vertex of the triangle.\n     * @param c The position of the third vertex of the triangle.\n     */\n    protected abstract shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace ExtrusionFeatureDefs {\n    /**\n     * Minimum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MIN: number = 0.0;\n    /**\n     * Maximum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MAX: number = 1;\n\n    /**\n     * Buildings height used whenever no height-data is present or height is very small.\n     *\n     * Used to avoid z-fighting between ground plane and building.\n     */\n    export const MIN_BUILDING_HEIGHT = 0.01;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2 } from \"three\";\n\nconst tmpBA = new Vector2();\nconst tmpQP = new Vector2();\nconst tmpA = new Vector2();\nconst tmpB = new Vector2();\n\n/**\n * Clip the given polygon using the Sutherland-Hodgman algorithm.\n */\nexport function clipPolygon(polygon: Vector2[], clip: Vector2[]): Vector2[] {\n    let outputList = polygon;\n    for (let e = 0; e < clip.length; ++e) {\n        const p = clip[e];\n        const q = clip[(e + 1) % clip.length];\n        const inputList = outputList;\n        outputList = [];\n        for (let i = 0; i < inputList.length; ++i) {\n            const currentPoint = inputList[i];\n            const prevPoint = inputList[(i + inputList.length - 1) % inputList.length];\n            if (inside(currentPoint, p, q)) {\n                if (!inside(prevPoint, p, q)) {\n                    outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n                }\n                outputList.push(currentPoint);\n            } else if (inside(prevPoint, p, q)) {\n                outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n            }\n        }\n    }\n    return outputList;\n}\n\nfunction computeIntersection(\n    a: Vector2,\n    b: Vector2,\n    p: Vector2,\n    q: Vector2,\n    result = new Vector2()\n): Vector2 {\n    tmpBA.subVectors(b, a);\n    tmpQP.subVectors(q, p);\n    const c1 = a.cross(tmpBA);\n    const c2 = p.cross(tmpQP);\n    const D = tmpBA.cross(tmpQP);\n    const x = (tmpBA.x * c2 - tmpQP.x * c1) / D;\n    const y = (tmpBA.y * c2 - tmpQP.y * c1) / D;\n    return result.set(x, y).round();\n}\n\nfunction inside(point: Vector2, p: Vector2, q: Vector2) {\n    tmpA.subVectors(q, p);\n    tmpB.subVectors(point, p);\n    return tmpA.cross(tmpB) > 0;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    ExtendedTileInfo,\n    ExtendedTileInfoWriter,\n    FeatureGroupType,\n    IndexedTechnique\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport * as THREE from \"three\";\n\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { IOmvEmitter, OmvDecoder, Ring } from \"./OmvDecoder\";\nimport { webMercatorTile2TargetTile } from \"./OmvUtils\";\n\nexport class OmvTileInfoEmitter implements IOmvEmitter {\n    private readonly m_tileInfo: ExtendedTileInfo;\n    private readonly m_tileInfoWriter: ExtendedTileInfoWriter;\n\n    /**\n     * Create OmvTileInfoEmitter object\n     *\n     * @param m_decodeInfo\n     * @param m_styleSetEvaluator\n     * @param m_storeExtendedTags\n     * @param m_gatherRoadSegments\n     */\n    constructor(\n        private readonly m_decodeInfo: OmvDecoder.DecodeInfo,\n        // tslint:disable-next-line:no-unused-variable\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_storeExtendedTags: boolean,\n        private readonly m_gatherRoadSegments: boolean,\n        private readonly m_languages?: string[]\n    ) {\n        this.m_tileInfo = new ExtendedTileInfo(m_decodeInfo.tileKey, this.m_storeExtendedTags);\n        this.m_tileInfoWriter = new ExtendedTileInfoWriter(\n            this.m_tileInfo,\n            this.m_storeExtendedTags\n        );\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const tileInfoWriter = this.m_tileInfoWriter;\n        const tmpV = new THREE.Vector3();\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            for (const pos of geometry) {\n                webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                tileInfoWriter.addFeature(\n                    this.m_tileInfo.pointGroup,\n                    context.env,\n                    featureId,\n                    featureText,\n                    infoTileTechniqueIndex,\n                    FeatureGroupType.Point\n                );\n                tileInfoWriter.addFeaturePoint(this.m_tileInfo.pointGroup, tmpV.x, tmpV.y);\n            }\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const tileInfoWriter = this.m_tileInfoWriter;\n        const env = context.env;\n\n        const tmpV = new THREE.Vector3();\n\n        const lines: number[][] = [];\n\n        for (const polyline of geometry) {\n            const line: number[] = [];\n            for (const pos of polyline.positions) {\n                webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                line.push(tmpV.x, tmpV.y);\n            }\n            lines.push(line);\n        }\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            for (const aLine of lines) {\n                tileInfoWriter.addFeature(\n                    this.m_tileInfo.lineGroup,\n                    env,\n                    featureId,\n                    featureText,\n                    infoTileTechniqueIndex,\n                    FeatureGroupType.Line\n                );\n\n                tileInfoWriter.addFeaturePoints(this.m_tileInfo.lineGroup, aLine);\n            }\n        }\n\n        if (this.m_gatherRoadSegments) {\n            const segmentId = env.lookup(\"segmentId\") as number;\n            if (segmentId !== undefined) {\n                const startOffset = env.lookup(\"startOffset\");\n                const endOffset = env.lookup(\"endOffset\");\n                tileInfoWriter.addRoadSegments(\n                    this.m_tileInfo.lineGroup,\n                    segmentId,\n                    startOffset !== undefined ? (startOffset as number) : 0,\n                    endOffset !== undefined ? (endOffset as number) : 1\n                );\n            }\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        if (techniques.length === 0) {\n            throw new Error(\n                \"OmvTileInfoEmitter#processPolygonFeature: Internal error - No technique index\"\n            );\n        }\n\n        const tileInfoWriter = this.m_tileInfoWriter;\n\n        const tmpV = new THREE.Vector3();\n\n        const polygons: Ring[][] = [];\n\n        for (const polygon of geometry) {\n            const rings: Ring[] = [];\n            for (const outline of polygon.rings) {\n                const contour: number[] = [];\n                for (const pos of outline) {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                    contour.push(tmpV.x, tmpV.y, tmpV.z);\n                }\n                rings.push(new Ring(extents, 3, contour));\n            }\n            polygons.push(rings);\n        }\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            tileInfoWriter.addFeature(\n                this.m_tileInfo.polygonGroup,\n                context.env,\n                featureId,\n                featureText,\n                infoTileTechniqueIndex,\n                FeatureGroupType.Polygon\n            );\n        }\n\n        for (const rings of polygons) {\n            // rings are shared between techniques\n            if (rings.length === 0) {\n                continue;\n            }\n            const outerRingWinding = rings[0].winding;\n            for (const aRing of rings) {\n                tileInfoWriter.addRingPoints(\n                    this.m_tileInfo.polygonGroup,\n                    aRing.contour,\n                    aRing.winding === outerRingWinding\n                );\n            }\n        }\n    }\n\n    getTileInfo(): ExtendedTileInfo {\n        this.m_tileInfoWriter.finish();\n        return this.m_tileInfo;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { OmvGenericFeatureModifier } from \"./OmvDataFilter\";\nimport { OmvFeatureFilterDescription, OmvFilterDescription } from \"./OmvDecoderDefs\";\n\nconst logger = LoggerManager.instance.create(\"OmvTomTomFeatureModifier\");\n\nconst DEFAULT_BUILDING_COLOR = \"#AAAAAA\";\nconst DEFAULT_DO_EXTRUDE_BUILDINGS = \"true\";\nconst DEFAULT_BUILDING_MIN_HEIGHT = \"2\";\nconst DEFAULT_BUILDING_HEIGHT = \"20\";\n\n/**\n * Modifies the MapEnv of the TomTom Vector Tiles to be similar to the OMV format, so that the same\n * theme files can be used.\n */\nexport class OmvTomTomFeatureModifier extends OmvGenericFeatureModifier {\n    constructor(description: OmvFeatureFilterDescription) {\n        super(description);\n    }\n\n    /** @override */\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        this.rewriteEnvironment(layer, env);\n        return super.doProcessFeature(itemsToProcess, itemsToIgnore, layer, env, defaultResult);\n    }\n\n    /**\n     * Rewrites the Environment to match the environment naming used in OMV.\n     *\n     * Does not cover roadlabels, as the roadlabels in the Tomtom format are delivered in a\n     * different format combined in the environment with the road line geometry, which is\n     * represented as two separate environment in the default format.\n     *\n     * @param layer\n     * @param env\n     */\n    private rewriteEnvironment(layer: string, env: MapEnv) {\n        // Rewriting landuse layers\n        if (this.isWood(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"wood\");\n        } else if (this.isHospital(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"hospital\");\n        } else if (this.isCemetery(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"cemetery\");\n        } else if (this.isIndustrial(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"industrial\");\n        } else if (this.isPark(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"park\");\n        } else if (this.isBuiltup(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"builtup\");\n            // Rewriting the water layer\n        } else if (this.isWater(layer)) {\n            this.updateEnvironment(env, \"water\");\n            // Rewriting the road label layer\n        } else if (this.isRoadLabel(layer)) {\n            this.updateEnvironment(env, \"road_label\");\n            // Rewriting road layers with category classes\n        } else if (this.isRoadPath(layer)) {\n            this.updateEnvironment(env, \"road\", \"path\");\n        } else if (this.isRoadStreet(layer)) {\n            this.updateEnvironment(env, \"road\", \"street\");\n        } else if (this.isRoadPrimary(layer)) {\n            this.updateEnvironment(env, \"road\", \"primary\");\n        } else if (this.isRoadSecondary(layer)) {\n            this.updateEnvironment(env, \"road\", \"secondary\");\n        } else if (this.isRailway(layer)) {\n            this.updateEnvironment(env, \"road\", \"major_rail\");\n        } else if (this.isFerry(layer)) {\n            this.updateEnvironment(env, \"road\", \"ferry\");\n            // Rewriting aeroway layer\n        } else if (this.isAeroway(layer)) {\n            this.updateEnvironment(env, \"aeroway\");\n            // Rewriting border layer\n        } else if (this.isBorder(layer)) {\n            this.updateEnvironment(env, \"admin\");\n            // Rewriting label layers\n        } else if (this.isCountryLabel(layer)) {\n            this.updateEnvironment(env, \"country_label\");\n        } else if (this.isCountyLabel(layer)) {\n            this.updateEnvironment(env, \"county_label\");\n        } else if (this.isRegionLabel(layer)) {\n            this.updateEnvironment(env, \"region_label\");\n        } else if (this.isStateLabel(layer)) {\n            this.updateEnvironment(env, \"state_label\");\n        } else if (this.isPlaceLabel(layer)) {\n            this.updateEnvironment(env, \"place_label\");\n        } else if (this.isWaterLabel(layer)) {\n            this.updateEnvironment(env, \"water_label\");\n        } else if (this.isMarineLabel(layer)) {\n            this.updateEnvironment(env, \"marine_label\");\n        } else if (this.isPoiLabel(layer)) {\n            this.updateEnvironment(env, \"poi_label\");\n            // Rewriting building layer\n        } else if (this.isBuilding(layer)) {\n            this.updateEnvironment(env, \"building\");\n            env.entries.color = DEFAULT_BUILDING_COLOR;\n            env.entries.extrude = DEFAULT_DO_EXTRUDE_BUILDINGS;\n            env.entries.min_height = DEFAULT_BUILDING_MIN_HEIGHT;\n            env.entries.height = DEFAULT_BUILDING_HEIGHT;\n        } else {\n            logger.info(`Not yet rewritten layer: ##${env.entries.$layer}## `);\n        }\n\n        // Add tunnel structure if its a tunnel\n        if (this.isTunnel(layer)) {\n            env.entries.structure = \"tunnel\";\n        }\n\n        //Add bridge structure if its a bridge\n        if (this.isBridge(layer)) {\n            env.entries.structure = \"bridge\";\n        }\n    }\n\n    private updateEnvironment(\n        env: MapEnv,\n        layer: string,\n        newClass?: string,\n        structure?: string\n    ): void {\n        env.entries.$layer = layer;\n        if (newClass !== undefined) {\n            env.entries.class = newClass;\n        }\n        if (structure !== undefined) {\n            env.entries.structure = structure;\n        }\n    }\n\n    private isWood(layer: string): boolean {\n        return layer === \"Woodland\" || layer === \"Moor or heathland\";\n    }\n\n    private isHospital(layer: string): boolean {\n        return layer === \"Hospital\";\n    }\n\n    private isCemetery(layer: string): boolean {\n        return layer === \"Cemetery\";\n    }\n\n    private isIndustrial(layer: string): boolean {\n        return layer.indexOf(\"Industrial\") >= 0 || layer === \"Airport\";\n    }\n\n    private isPark(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"City park\" ||\n            layer === \"National park\" ||\n            layer === \"Regional park\" ||\n            layer.indexOf(\"grass\") >= 0 ||\n            layer.indexOf(\"greens\") >= 0\n        );\n    }\n\n    private isBuiltup(layer: string): boolean {\n        return (\n            layer === \"Built-up area\" ||\n            layer === \"Town paved area\" ||\n            layer === \"Shopping\" ||\n            layer === \"University\" ||\n            layer === \"Stadium\" ||\n            layer.indexOf(\"ground\") > 0\n        );\n    }\n\n    private isWater(layer: string): boolean {\n        return (\n            layer === \"Other water\" ||\n            layer === \"Ocean or sea\" ||\n            layer === \"Ocean\" ||\n            layer === \"Lake\" ||\n            layer === \"Sea\" ||\n            layer === \"Town swimming pool\" ||\n            layer === \"River\"\n        );\n    }\n\n    private isRoadLabel(layer: string): boolean {\n        return layer.indexOf(\"road label\") >= 0;\n    }\n\n    private isRoadPath(layer: string): boolean {\n        return (\n            layer.indexOf(\"path\") > 0 ||\n            layer === \"Parking road\" ||\n            layer === \"Town walkway\" ||\n            layer === \"Pedestrian road\" ||\n            layer === \"Walkway road\" ||\n            layer === \"Town carriageway divider\" ||\n            layer === \"Runway\" ||\n            layer === \"Non public road\"\n        );\n    }\n\n    private isRoadStreet(layer: string): boolean {\n        return (\n            layer.indexOf(\"Minor local road\") >= 0 ||\n            layer.indexOf(\"minor local road\") >= 0 ||\n            layer.indexOf(\"Toll local road\") >= 0 ||\n            layer.indexOf(\"Local road\") >= 0\n        );\n    }\n    private isRoadPrimary(layer: string): boolean {\n        return (\n            layer.indexOf(\"Major local road\") >= 0 ||\n            layer.indexOf(\"Major road\") >= 0 ||\n            layer.indexOf(\"major road\") >= 0 ||\n            layer.indexOf(\"Motorway\") >= 0 ||\n            layer.indexOf(\"motorway\") >= 0 ||\n            layer.indexOf(\"International road\") >= 0 ||\n            layer.indexOf(\"international road\") >= 0\n        );\n    }\n\n    private isRoadSecondary(layer: string): boolean {\n        return (\n            layer.indexOf(\"connecting road\") >= 0 ||\n            layer.indexOf(\"Connecting road\") >= 0 ||\n            layer.indexOf(\"secondary road\") >= 0 ||\n            layer.indexOf(\"Secondary road\") >= 0\n        );\n    }\n\n    private isRailway(layer: string): boolean {\n        return layer === \"Railway\";\n    }\n\n    private isFerry(layer: string): boolean {\n        return layer === \"Ferry road\";\n    }\n\n    private isBorder(layer: string): boolean {\n        return layer.indexOf(\"border\") > 0;\n    }\n\n    private isCountryLabel(layer: string): boolean {\n        return layer === \"Country name\" || layer === \"Country label\";\n    }\n\n    private isStateLabel(layer: string): boolean {\n        return layer === \"City\" || layer.indexOf(\"city\") > 0;\n    }\n\n    private isRegionLabel(layer: string): boolean {\n        return layer === \"Town\";\n    }\n\n    private isCountyLabel(layer: string): boolean {\n        return layer === \"Village\";\n    }\n\n    private isPlaceLabel(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"Railway station\" ||\n            layer === \"Airport POI\" ||\n            layer === \"Town greens\"\n        );\n    }\n\n    private isWaterLabel(layer: string): boolean {\n        return (\n            layer === \"Ocean name\" || layer === \"River label\" || layer.indexOf(\"water label\") > 0\n        );\n    }\n\n    private isMarineLabel(layer: string): boolean {\n        return layer.indexOf(\"water label\") > 0;\n    }\n\n    private isPoiLabel(layer: string): boolean {\n        return (\n            layer === \"National park name\" ||\n            layer === \"Landmark label\" ||\n            layer.indexOf(\"label\") >= 0\n        );\n    }\n\n    private isAeroway(layer: string): boolean {\n        return layer === \"Airport\";\n    }\n\n    private isBuilding(layer: string): boolean {\n        return layer.indexOf(\"building\") >= 0;\n    }\n\n    private isTunnel(layer: string): boolean {\n        return layer.indexOf(\"tunnel\") >= 0;\n    }\n\n    private isBridge(layer: string): boolean {\n        return layer.indexOf(\"bridge\") >= 0;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\n\n/**\n * An [[OmvFeatureFilter]] implementation that queries [[StyleSetEvaluator]]\n * if given layers/features should be processed.\n *\n * Used in [[OmvDecoder]] to skip processing of layers/features that doesn't\n * have associated rules in style.\n *\n * @see [[StyleSetEvaluator.wantsFeature]]\n * @see [[StyleSetEvaluator.wantsLayer]]\n */\nexport class StyleSetDataFilter implements OmvFeatureFilter {\n    hasKindFilter: boolean = false;\n\n    constructor(readonly styleSetEvaluator: StyleSetEvaluator) {}\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.styleSetEvaluator.wantsLayer(layer);\n    }\n\n    wantsPointFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"point\");\n    }\n    wantsLineFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"line\");\n    }\n    wantsPolygonFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"polygon\");\n    }\n    wantsKind(): boolean {\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TilerService, WorkerServiceManager } from \"@here/harp-mapview-decoder/index-worker\";\nimport { OMV_TILER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTilerService {\n    /**\n     * Register[[OmvTiler]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILER_SERVICE_TYPE,\n            factory: (serviceId: string) => TilerService.start(serviceId)\n        });\n    }\n}\n","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n"],"sourceRoot":""}